@Test(timeout = 4000)
public void test00()  throws Throwable  {
    Carteira carteira0 = new Carteira((-650.538551823452), (-650.538551823452), 0.0);
    carteira0.compraNoDebito((-650.538551823452));
    assertEquals((-650.538551823452), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    Carteira carteira0 = new Carteira((-2355.999273853816), 1.0, (-2355.999273853816));
    carteira0.compraSaldo((-2355.999273853816));
    assertEquals((-4711.998547707632), carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 0.0, 0.0);
    double double0 = carteira0.saldoTotal();
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
    assertEquals(0.0, carteira0.getSaldo(), 0.01);
    assertEquals(0.0, double0, 0.01);
    assertEquals(0.0, carteira0.getLimiteCredito(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    Carteira carteira0 = new Carteira((-727.5563483680716), (-3650.3607966822), (-203.95121365749));
    double double0 = carteira0.saldoTotal();
    assertEquals((-4581.868358707762), double0, 0.01);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 1555.1866392665322, 417.7768413161);
    double double0 = carteira0.getSaldo();
    assertEquals(1972.9634805826322, carteira0.saldoTotal(), 0.01);
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    assertEquals(2324.018253662, carteira0.getSaldo(), 0.01);
    
    carteira0.adicionaSaldo((-2215.0));
    double double0 = carteira0.getSaldo();
    assertEquals((-2215.0), double0, 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.combinaSaldo();
    double double0 = carteira0.getLimiteDebito();
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Carteira carteira0 = new Carteira(648.0, 648.0, (-838.3974));
    double double0 = carteira0.getLimiteDebito();
    assertEquals((-838.3974), double0, 0.01);
    assertEquals(457.60260000000005, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 0.0, 0.0);
    double double0 = carteira0.getLimiteCredito();
    assertEquals(0.0, carteira0.getSaldo(), 0.01);
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Carteira carteira0 = new Carteira(6149.5508, 6149.5508, (-2952.19846496588));
    double double0 = carteira0.getLimiteCredito();
    assertEquals(6149.5508, double0, 0.01);
    assertEquals(9346.903135034121, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.setLimiteDebito((-1.0));
    assertEquals((-1.0), carteira0.getLimiteDebito(), 0.01);
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraNoDebito(0.0);
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.compraNoCredito((-2215.0));
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraNoCredito((-1.0));
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.compraSaldo((-922.6779147158));
    assertEquals(1401.3403389462, carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraSaldo(1.0);
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.setLimiteCredito((-736.0631747));
    carteira0.compraNoCredito((-2215.0));
    assertEquals((-2215.0), carteira0.getLimiteCredito(), 0.01);
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getLimiteDebito();
    assertEquals(2324.018253662, double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.combinaSaldo();
    carteira0.compraNoDebito(0.0);
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
}

@Test(timeout = 4000)
public void test19()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.setSaldo((-736.0631747));
    assertEquals((-736.0631747), carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test20()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getSaldo();
    assertEquals(2324.018253662, double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test21()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.saldoTotal();
    assertEquals(2433.036507324, double0, 0.01);
}

@Test(timeout = 4000)
public void test22()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getLimiteCredito();
    assertEquals((-2215.0), double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Cliente cliente0 = new Cliente("0GhM*h<_L", (-158), "0GhM*h<_L", "V");
      cliente0.fone = "WEd";
      cliente0.fone = null;
      String string0 = cliente0.getFone();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Cliente cliente0 = new Cliente("", 0, "", "");
      String string0 = cliente0.getFone();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Cliente cliente0 = new Cliente("Cw$sYN93Xw\"Y'Z", (-1233), "", "d(43f!u\"iA>gw|dWeD");
      String string0 = cliente0.getEmail();
      assertEquals("", string0);
      assertEquals("d(43f!u\"iA>gw|dWeD", cliente0.getFone());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Cliente cliente0 = new Cliente("", 0, "", "");
      Carteira carteira0 = cliente0.getCarteira();
      assertNull(carteira0);
  }

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Cliente cliente0 = new Cliente("example.app.models.Cliente", 2578, "n", "example.app.models.Cliente");
    Carteira carteira0 = new Carteira(0.0, (-1.0), 2578);
    cliente0.carteira = carteira0;
    Carteira carteira1 = new Carteira(2578, 2578, 2578);
    cliente0.carteira = carteira1;
    cliente0.getCarteira();
    assertEquals("n", cliente0.getEmail());
    assertEquals("example.app.models.Cliente", cliente0.getFone());
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Carteira carteira0 = new Carteira((-1), (-1), (-2515.202332146312));
    Cliente cliente0 = new Cliente("X`pJIm%lP4 7c<I", (-1), "X`pJIm%lP4 7c<I", "example.app.models.Cliente", carteira0);
    Carteira carteira1 = cliente0.getCarteira();
    assertEquals("example.app.models.Cliente", cliente0.getFone());
    assertNotNull(carteira1);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    cliente0.setCarteira(carteira0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
    assertEquals("Saldo insuficiente", cliente0.getEmail());
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
    
    cliente0.setFone("sgH,,");
    assertEquals("sgH,,", cliente0.getFone());
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    Carteira carteira1 = cliente0.getCarteira();
    assertNotNull(carteira1);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Cliente cliente0 = new Cliente((String) null, (-1), "", "");
    Carteira carteira0 = new Carteira(0.0, (-1), 191.0);
    cliente0.setCarteira(carteira0);
    assertEquals((-1), cliente0.getIdade());
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    String string0 = cliente0.getEmail();
    assertEquals("Saldo insuficiente", string0);
    assertNotNull(string0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    String string0 = cliente0.getFone();
    assertNotNull(string0);
    assertEquals("c9FBDOj26e9", string0);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
    
    cliente0.setEmail("sgH,,");
    cliente0.getEmail();
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test00()  throws Throwable  {
    Integer integer0 = new Integer(0);
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(1.0);
    Destino destino0 = new Destino("v?AN2Q/CTBc5qq", integer0, climas0, double0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    destino0.setAtracoes(arrayList0);
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    Double double1 = new Double(1);
    destino0.setPreco(double1);
    assertEquals((double)double1, (double)double0, 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    Integer integer0 = new Integer(898);
    Climas climas0 = Climas.AGRADAVEL;
    Double double0 = new Double(241.13417);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("5(`M2SL4][&MS", integer0, climas0, double0, arrayList0);
    destino0.adicionaAtracao("5(`M2SL4][&MS");
    destino0.removeAtracao((-1));
    assertEquals(241.13417, destino0.getPreco(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.VENTANIA;
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("+X<t_<&]", integer0, climas0, (Double) null, arrayList0);
    Double double0 = destino0.getPreco();
    assertNull(double0);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Integer integer0 = new Integer((-488));
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double((-488));
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("example.app.models.Destino", integer0, climas0, double0, arrayList0);
    Double double1 = destino0.getPreco();
    assertEquals((-488.0), (double)double1, 0.01);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Double double0 = new Double(0.0);
    Climas climas0 = Climas.CHUVOSO;
    Destino destino0 = new Destino("wx DbX(+a&Ud7[1Q", (Integer) null, climas0, (Double) null, arrayList0);
    destino0.preco = double0;
    Double double1 = destino0.getPreco();
    assertEquals(0.0, (double)double1, 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Integer integer0 = new Integer((-2376));
    Climas climas0 = Climas.VENTANIA;
    Double double0 = new Double(187.6725);
    Destino destino0 = new Destino((String) null, integer0, climas0, double0);
    Double double1 = destino0.getPreco();
    assertNotNull(double1);
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(0.0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("", (Integer) null, climas0, double0, arrayList0);
    Boolean boolean0 = destino0.getCidadeTuristica();
    assertNull(boolean0);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Integer integer0 = new Integer(662);
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double(0.0);
    Destino destino0 = new Destino((String) null, integer0, climas0, double0);
    assertFalse(destino0.getCidadeTuristica());
    
    Boolean boolean0 = Boolean.valueOf(true);
    destino0.setCidadeTuristica(boolean0);
    destino0.getCidadeTuristica();
    assertTrue(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(2084);
    Destino destino0 = new Destino("/|", (Integer) null, climas0, double0);
    destino0.getAtracoes();
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    destino0.adicionaAtracao((String) null);
    ArrayList<String> arrayList1 = destino0.getAtracoes();
    assertFalse(arrayList1.contains("CHUVOSO"));
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Integer integer0 = new Integer((-1106));
    Climas climas0 = Climas.AGRADAVEL;
    Double double0 = new Double((-982.9847914361264));
    Destino destino0 = new Destino("example.app.models.Cidade", integer0, climas0, double0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao((-635));
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(0.0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("", (Integer) null, climas0, double0, arrayList0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao((-1327));
    fail("Expecting exception: ArrayIndexOutOfBoundsException");
    
    } catch(ArrayIndexOutOfBoundsException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    Integer integer0 = new Integer(5317);
    Climas climas0 = Climas.VENTANIA;
    Double double0 = new Double(5317);
    Destino destino0 = null;
    try {
    destino0 = new Destino("", integer0, climas0, double0, (ArrayList<String>) null);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    ArrayList<String> arrayList0 = new ArrayList<String>();
    arrayList0.add("");
    arrayList0.add((String) null);
    arrayList0.add("");
    arrayList0.add("");
    arrayList0.add("~~LOk|W6");
    arrayList0.add("wx DbX(+a&Ud7[1Q");
    Climas climas0 = Climas.CHUVOSO;
    Destino destino0 = new Destino("wx DbX(+a&Ud7[1Q", (Integer) null, climas0, (Double) null, arrayList0);
    assertTrue(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao(0);
    fail("Expecting exception: IndexOutOfBoundsException");
    
    } catch(IndexOutOfBoundsException e) {
        //
        // Index: 1, Size: 0
        //
        verifyException("java.util.ArrayList", e);
    }
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    ArrayList<String> arrayList1 = destino0.getAtracoes();
    assertSame(arrayList0, arrayList1);
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    Integer integer0 = new Integer((-1592));
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double(0.0);
    Destino destino0 = new Destino("Cd1-v '", integer0, climas0, double0);
    // Undeclared exception!
    try { 
    destino0.adicionaAtracao("");
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(2084);
    Destino destino0 = new Destino("/|", (Integer) null, climas0, double0);
    Boolean boolean0 = destino0.getCidadeTuristica();
    assertFalse(boolean0);
}

@Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
      Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
      Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
      empresa0.adicionaCliente(cliente0);
      ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
      assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
      assertFalse(arrayList0.contains(cliente0));
  }

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("n[>;n,\"oV(UzKEMC.Z", 1285.07203100387, hashMap0);
    Carteira carteira0 = new Carteira(1285.07203100387, 1285.07203100387, 1285.07203100387);
    Cliente cliente0 = new Cliente("n[>;n,\"oV(UzKEMC.Z", 21, "n[>;n,\"oV(UzKEMC.Z", "n[>;n,\"oV(UzKEMC.Z", carteira0);
    Boolean boolean0 = Boolean.valueOf("n[>;n,\"oV(UzKEMC.Z");
    hashMap0.put(cliente0, boolean0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertFalse(arrayList0.contains(cliente0));
    assertEquals(1285.07203100387, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", hashMap0);
    HashMap<Cliente, Boolean> hashMap1 = new HashMap<Cliente, Boolean>(226, 226);
    empresa0.setClientes(hashMap1);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 0.0, hashMap0);
    empresa0.getNome();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", (-1900.3841), hashMap0);
    String string0 = empresa0.getNome();
    assertEquals((-1900.3841), empresa0.getCaixa(), 0.01);
    assertNotNull(string0);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Empresa empresa0 = new Empresa("", (Map<Cliente, Boolean>) null);
    empresa0.getClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    empresa0.adicionaCliente(cliente0);
    empresa0.getClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Empresa empresa0 = new Empresa("uULRcy-", (Map<Cliente, Boolean>) null);
    double double0 = empresa0.getCaixa();
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("P,#G", (-1.0), hashMap0);
    double double0 = empresa0.getCaixa();
    assertEquals((-1.0), double0, 0.01);
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    empresa0.buscaCliente(cliente0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Empresa empresa0 = new Empresa("S", 957.482814242, (Map<Cliente, Boolean>) null);
    Carteira carteira0 = new Carteira(0, 0, 0.0);
    Cliente cliente0 = new Cliente("}YR=,ddq.lk:(HQsj", 0, "3'1)DWuF!7xWhxZn>", "}YR=,ddq.lk:(HQsj", carteira0);
    // Undeclared exception!
    try { 
    empresa0.removeCliente(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", 0.0, hashMap0);
    Boolean boolean0 = new Boolean("example.app.models.Cliente");
    hashMap0.put((Cliente) null, boolean0);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientesAtivos();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Empresa empresa0 = new Empresa("]1)ZWIN|@j=", (-1249.0873), (Map<Cliente, Boolean>) null);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientes();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("`wAnG<PdzOk", hashMap0);
    Carteira carteira0 = new Carteira(0, 4618.8836, 4618.8836);
    Cliente cliente0 = new Cliente("^", 0, "^", "?K", carteira0);
    // Undeclared exception!
    try { 
    empresa0.buscaClienteAtivo(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    Empresa empresa0 = new Empresa("uULRcy-", (Map<Cliente, Boolean>) null);
    Carteira carteira0 = new Carteira(1274.862, 1.0, (-2609.2058285026246));
    Cliente cliente0 = new Cliente("uULRcy-", (-1), "uULRcy-", "uULRcy-", carteira0);
    // Undeclared exception!
    try { 
    empresa0.buscaCliente(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 0.0, hashMap0);
    // Undeclared exception!
    try { 
    empresa0.adicionaCliente((Cliente) null);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 20, "TB[E?\"W_wvfU", "");
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
    assertTrue(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
    assertFalse(arrayList0.contains(cliente0));
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 1.5874623117978444, hashMap0);
    Cliente cliente0 = new Cliente((String) null, (-6), (String) null, (String) null);
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertEquals(1.5874623117978444, empresa0.getCaixa(), 0.01);
    assertFalse(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test19()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("n:^1s:EBM'RLm7", hashMap0);
    Cliente cliente0 = new Cliente("n:^1s:EBM'RLm7", 20, "n:^1s:EBM'RLm7", "n:^1s:EBM'RLm7");
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    empresa0.listaTodosClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test20()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    empresa0.listaTodosClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test21()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    Boolean boolean1 = empresa0.buscaClienteAtivo(cliente0);
    assertTrue(boolean1);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test22()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, (-3457.176), hashMap0);
    Cliente cliente0 = new Cliente((String) null, (-177), (String) null, (String) null);
    Boolean boolean0 = empresa0.buscaCliente(cliente0);
    assertNotNull(boolean0);
    
    hashMap0.put(cliente0, boolean0);
    Boolean boolean1 = empresa0.buscaClienteAtivo(cliente0);
    assertFalse(boolean1);
    assertEquals((-3457.176), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test23()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("<q+ t*9k6", hashMap0);
    Boolean boolean0 = empresa0.buscaCliente((Cliente) null);
    hashMap0.put((Cliente) null, boolean0);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientesInativos();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test24()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
    assertTrue(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test25()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
    empresa0.removeCliente(cliente0);
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test26()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    String string0 = empresa0.getNome();
    assertNotNull(string0);
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test27()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    empresa0.setNome("TB[E?\"W_wvfU");
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test28()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
    
    empresa0.setCaixa(1.0);
    assertEquals(1.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test29()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 1.5874623117978444, hashMap0);
    double double0 = empresa0.getCaixa();
    assertEquals(1.5874623117978444, double0, 0.01);
}

@Test(timeout = 4000)
public void test30()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Map<Cliente, Boolean> map0 = empresa0.getClientes();
    assertNotNull(map0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}
@Test(timeout = 4000)
public void test00()  throws Throwable  {
    Carteira carteira0 = new Carteira((-650.538551823452), (-650.538551823452), 0.0);
    carteira0.compraNoDebito((-650.538551823452));
    assertEquals((-650.538551823452), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    Carteira carteira0 = new Carteira((-2355.999273853816), 1.0, (-2355.999273853816));
    carteira0.compraSaldo((-2355.999273853816));
    assertEquals((-4711.998547707632), carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 0.0, 0.0);
    double double0 = carteira0.saldoTotal();
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
    assertEquals(0.0, carteira0.getSaldo(), 0.01);
    assertEquals(0.0, double0, 0.01);
    assertEquals(0.0, carteira0.getLimiteCredito(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    Carteira carteira0 = new Carteira((-727.5563483680716), (-3650.3607966822), (-203.95121365749));
    double double0 = carteira0.saldoTotal();
    assertEquals((-4581.868358707762), double0, 0.01);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 1555.1866392665322, 417.7768413161);
    double double0 = carteira0.getSaldo();
    assertEquals(1972.9634805826322, carteira0.saldoTotal(), 0.01);
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    assertEquals(2324.018253662, carteira0.getSaldo(), 0.01);
    
    carteira0.adicionaSaldo((-2215.0));
    double double0 = carteira0.getSaldo();
    assertEquals((-2215.0), double0, 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.combinaSaldo();
    double double0 = carteira0.getLimiteDebito();
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Carteira carteira0 = new Carteira(648.0, 648.0, (-838.3974));
    double double0 = carteira0.getLimiteDebito();
    assertEquals((-838.3974), double0, 0.01);
    assertEquals(457.60260000000005, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 0.0, 0.0);
    double double0 = carteira0.getLimiteCredito();
    assertEquals(0.0, carteira0.getSaldo(), 0.01);
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Carteira carteira0 = new Carteira(6149.5508, 6149.5508, (-2952.19846496588));
    double double0 = carteira0.getLimiteCredito();
    assertEquals(6149.5508, double0, 0.01);
    assertEquals(9346.903135034121, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.setLimiteDebito((-1.0));
    assertEquals((-1.0), carteira0.getLimiteDebito(), 0.01);
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraNoDebito(0.0);
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.compraNoCredito((-2215.0));
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraNoCredito((-1.0));
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.compraSaldo((-922.6779147158));
    assertEquals(1401.3403389462, carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraSaldo(1.0);
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.setLimiteCredito((-736.0631747));
    carteira0.compraNoCredito((-2215.0));
    assertEquals((-2215.0), carteira0.getLimiteCredito(), 0.01);
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getLimiteDebito();
    assertEquals(2324.018253662, double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.combinaSaldo();
    carteira0.compraNoDebito(0.0);
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
}

@Test(timeout = 4000)
public void test19()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.setSaldo((-736.0631747));
    assertEquals((-736.0631747), carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test20()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getSaldo();
    assertEquals(2324.018253662, double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test21()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.saldoTotal();
    assertEquals(2433.036507324, double0, 0.01);
}

@Test(timeout = 4000)
public void test22()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getLimiteCredito();
    assertEquals((-2215.0), double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Cliente cliente0 = new Cliente("0GhM*h<_L", (-158), "0GhM*h<_L", "V");
      cliente0.fone = "WEd";
      cliente0.fone = null;
      String string0 = cliente0.getFone();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Cliente cliente0 = new Cliente("", 0, "", "");
      String string0 = cliente0.getFone();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Cliente cliente0 = new Cliente("Cw$sYN93Xw\"Y'Z", (-1233), "", "d(43f!u\"iA>gw|dWeD");
      String string0 = cliente0.getEmail();
      assertEquals("", string0);
      assertEquals("d(43f!u\"iA>gw|dWeD", cliente0.getFone());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Cliente cliente0 = new Cliente("", 0, "", "");
      Carteira carteira0 = cliente0.getCarteira();
      assertNull(carteira0);
  }

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Cliente cliente0 = new Cliente("example.app.models.Cliente", 2578, "n", "example.app.models.Cliente");
    Carteira carteira0 = new Carteira(0.0, (-1.0), 2578);
    cliente0.carteira = carteira0;
    Carteira carteira1 = new Carteira(2578, 2578, 2578);
    cliente0.carteira = carteira1;
    cliente0.getCarteira();
    assertEquals("n", cliente0.getEmail());
    assertEquals("example.app.models.Cliente", cliente0.getFone());
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Carteira carteira0 = new Carteira((-1), (-1), (-2515.202332146312));
    Cliente cliente0 = new Cliente("X`pJIm%lP4 7c<I", (-1), "X`pJIm%lP4 7c<I", "example.app.models.Cliente", carteira0);
    Carteira carteira1 = cliente0.getCarteira();
    assertEquals("example.app.models.Cliente", cliente0.getFone());
    assertNotNull(carteira1);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    cliente0.setCarteira(carteira0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
    assertEquals("Saldo insuficiente", cliente0.getEmail());
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
    
    cliente0.setFone("sgH,,");
    assertEquals("sgH,,", cliente0.getFone());
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    Carteira carteira1 = cliente0.getCarteira();
    assertNotNull(carteira1);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Cliente cliente0 = new Cliente((String) null, (-1), "", "");
    Carteira carteira0 = new Carteira(0.0, (-1), 191.0);
    cliente0.setCarteira(carteira0);
    assertEquals((-1), cliente0.getIdade());
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    String string0 = cliente0.getEmail();
    assertEquals("Saldo insuficiente", string0);
    assertNotNull(string0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    String string0 = cliente0.getFone();
    assertNotNull(string0);
    assertEquals("c9FBDOj26e9", string0);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
    
    cliente0.setEmail("sgH,,");
    cliente0.getEmail();
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test00()  throws Throwable  {
    Integer integer0 = new Integer(0);
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(1.0);
    Destino destino0 = new Destino("v?AN2Q/CTBc5qq", integer0, climas0, double0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    destino0.setAtracoes(arrayList0);
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    Double double1 = new Double(1);
    destino0.setPreco(double1);
    assertEquals((double)double1, (double)double0, 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    Integer integer0 = new Integer(898);
    Climas climas0 = Climas.AGRADAVEL;
    Double double0 = new Double(241.13417);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("5(`M2SL4][&MS", integer0, climas0, double0, arrayList0);
    destino0.adicionaAtracao("5(`M2SL4][&MS");
    destino0.removeAtracao((-1));
    assertEquals(241.13417, destino0.getPreco(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.VENTANIA;
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("+X<t_<&]", integer0, climas0, (Double) null, arrayList0);
    Double double0 = destino0.getPreco();
    assertNull(double0);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Integer integer0 = new Integer((-488));
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double((-488));
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("example.app.models.Destino", integer0, climas0, double0, arrayList0);
    Double double1 = destino0.getPreco();
    assertEquals((-488.0), (double)double1, 0.01);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Double double0 = new Double(0.0);
    Climas climas0 = Climas.CHUVOSO;
    Destino destino0 = new Destino("wx DbX(+a&Ud7[1Q", (Integer) null, climas0, (Double) null, arrayList0);
    destino0.preco = double0;
    Double double1 = destino0.getPreco();
    assertEquals(0.0, (double)double1, 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Integer integer0 = new Integer((-2376));
    Climas climas0 = Climas.VENTANIA;
    Double double0 = new Double(187.6725);
    Destino destino0 = new Destino((String) null, integer0, climas0, double0);
    Double double1 = destino0.getPreco();
    assertNotNull(double1);
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(0.0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("", (Integer) null, climas0, double0, arrayList0);
    Boolean boolean0 = destino0.getCidadeTuristica();
    assertNull(boolean0);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Integer integer0 = new Integer(662);
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double(0.0);
    Destino destino0 = new Destino((String) null, integer0, climas0, double0);
    assertFalse(destino0.getCidadeTuristica());
    
    Boolean boolean0 = Boolean.valueOf(true);
    destino0.setCidadeTuristica(boolean0);
    destino0.getCidadeTuristica();
    assertTrue(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(2084);
    Destino destino0 = new Destino("/|", (Integer) null, climas0, double0);
    destino0.getAtracoes();
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    destino0.adicionaAtracao((String) null);
    ArrayList<String> arrayList1 = destino0.getAtracoes();
    assertFalse(arrayList1.contains("CHUVOSO"));
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Integer integer0 = new Integer((-1106));
    Climas climas0 = Climas.AGRADAVEL;
    Double double0 = new Double((-982.9847914361264));
    Destino destino0 = new Destino("example.app.models.Cidade", integer0, climas0, double0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao((-635));
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(0.0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("", (Integer) null, climas0, double0, arrayList0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao((-1327));
    fail("Expecting exception: ArrayIndexOutOfBoundsException");
    
    } catch(ArrayIndexOutOfBoundsException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    Integer integer0 = new Integer(5317);
    Climas climas0 = Climas.VENTANIA;
    Double double0 = new Double(5317);
    Destino destino0 = null;
    try {
    destino0 = new Destino("", integer0, climas0, double0, (ArrayList<String>) null);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    ArrayList<String> arrayList0 = new ArrayList<String>();
    arrayList0.add("");
    arrayList0.add((String) null);
    arrayList0.add("");
    arrayList0.add("");
    arrayList0.add("~~LOk|W6");
    arrayList0.add("wx DbX(+a&Ud7[1Q");
    Climas climas0 = Climas.CHUVOSO;
    Destino destino0 = new Destino("wx DbX(+a&Ud7[1Q", (Integer) null, climas0, (Double) null, arrayList0);
    assertTrue(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao(0);
    fail("Expecting exception: IndexOutOfBoundsException");
    
    } catch(IndexOutOfBoundsException e) {
        //
        // Index: 1, Size: 0
        //
        verifyException("java.util.ArrayList", e);
    }
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    ArrayList<String> arrayList1 = destino0.getAtracoes();
    assertSame(arrayList0, arrayList1);
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    Integer integer0 = new Integer((-1592));
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double(0.0);
    Destino destino0 = new Destino("Cd1-v '", integer0, climas0, double0);
    // Undeclared exception!
    try { 
    destino0.adicionaAtracao("");
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(2084);
    Destino destino0 = new Destino("/|", (Integer) null, climas0, double0);
    Boolean boolean0 = destino0.getCidadeTuristica();
    assertFalse(boolean0);
}

@Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
      Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
      Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
      empresa0.adicionaCliente(cliente0);
      ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
      assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
      assertFalse(arrayList0.contains(cliente0));
  }

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("n[>;n,\"oV(UzKEMC.Z", 1285.07203100387, hashMap0);
    Carteira carteira0 = new Carteira(1285.07203100387, 1285.07203100387, 1285.07203100387);
    Cliente cliente0 = new Cliente("n[>;n,\"oV(UzKEMC.Z", 21, "n[>;n,\"oV(UzKEMC.Z", "n[>;n,\"oV(UzKEMC.Z", carteira0);
    Boolean boolean0 = Boolean.valueOf("n[>;n,\"oV(UzKEMC.Z");
    hashMap0.put(cliente0, boolean0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertFalse(arrayList0.contains(cliente0));
    assertEquals(1285.07203100387, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", hashMap0);
    HashMap<Cliente, Boolean> hashMap1 = new HashMap<Cliente, Boolean>(226, 226);
    empresa0.setClientes(hashMap1);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 0.0, hashMap0);
    empresa0.getNome();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", (-1900.3841), hashMap0);
    String string0 = empresa0.getNome();
    assertEquals((-1900.3841), empresa0.getCaixa(), 0.01);
    assertNotNull(string0);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Empresa empresa0 = new Empresa("", (Map<Cliente, Boolean>) null);
    empresa0.getClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    empresa0.adicionaCliente(cliente0);
    empresa0.getClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Empresa empresa0 = new Empresa("uULRcy-", (Map<Cliente, Boolean>) null);
    double double0 = empresa0.getCaixa();
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("P,#G", (-1.0), hashMap0);
    double double0 = empresa0.getCaixa();
    assertEquals((-1.0), double0, 0.01);
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    empresa0.buscaCliente(cliente0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Empresa empresa0 = new Empresa("S", 957.482814242, (Map<Cliente, Boolean>) null);
    Carteira carteira0 = new Carteira(0, 0, 0.0);
    Cliente cliente0 = new Cliente("}YR=,ddq.lk:(HQsj", 0, "3'1)DWuF!7xWhxZn>", "}YR=,ddq.lk:(HQsj", carteira0);
    // Undeclared exception!
    try { 
    empresa0.removeCliente(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", 0.0, hashMap0);
    Boolean boolean0 = new Boolean("example.app.models.Cliente");
    hashMap0.put((Cliente) null, boolean0);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientesAtivos();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Empresa empresa0 = new Empresa("]1)ZWIN|@j=", (-1249.0873), (Map<Cliente, Boolean>) null);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientes();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("`wAnG<PdzOk", hashMap0);
    Carteira carteira0 = new Carteira(0, 4618.8836, 4618.8836);
    Cliente cliente0 = new Cliente("^", 0, "^", "?K", carteira0);
    // Undeclared exception!
    try { 
    empresa0.buscaClienteAtivo(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    Empresa empresa0 = new Empresa("uULRcy-", (Map<Cliente, Boolean>) null);
    Carteira carteira0 = new Carteira(1274.862, 1.0, (-2609.2058285026246));
    Cliente cliente0 = new Cliente("uULRcy-", (-1), "uULRcy-", "uULRcy-", carteira0);
    // Undeclared exception!
    try { 
    empresa0.buscaCliente(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 0.0, hashMap0);
    // Undeclared exception!
    try { 
    empresa0.adicionaCliente((Cliente) null);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 20, "TB[E?\"W_wvfU", "");
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
    assertTrue(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
    assertFalse(arrayList0.contains(cliente0));
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 1.5874623117978444, hashMap0);
    Cliente cliente0 = new Cliente((String) null, (-6), (String) null, (String) null);
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertEquals(1.5874623117978444, empresa0.getCaixa(), 0.01);
    assertFalse(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test19()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("n:^1s:EBM'RLm7", hashMap0);
    Cliente cliente0 = new Cliente("n:^1s:EBM'RLm7", 20, "n:^1s:EBM'RLm7", "n:^1s:EBM'RLm7");
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    empresa0.listaTodosClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test20()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    empresa0.listaTodosClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test21()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    Boolean boolean1 = empresa0.buscaClienteAtivo(cliente0);
    assertTrue(boolean1);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test22()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, (-3457.176), hashMap0);
    Cliente cliente0 = new Cliente((String) null, (-177), (String) null, (String) null);
    Boolean boolean0 = empresa0.buscaCliente(cliente0);
    assertNotNull(boolean0);
    
    hashMap0.put(cliente0, boolean0);
    Boolean boolean1 = empresa0.buscaClienteAtivo(cliente0);
    assertFalse(boolean1);
    assertEquals((-3457.176), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test23()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("<q+ t*9k6", hashMap0);
    Boolean boolean0 = empresa0.buscaCliente((Cliente) null);
    hashMap0.put((Cliente) null, boolean0);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientesInativos();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test24()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
    assertTrue(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test25()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
    empresa0.removeCliente(cliente0);
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test26()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    String string0 = empresa0.getNome();
    assertNotNull(string0);
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test27()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    empresa0.setNome("TB[E?\"W_wvfU");
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test28()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
    
    empresa0.setCaixa(1.0);
    assertEquals(1.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test29()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 1.5874623117978444, hashMap0);
    double double0 = empresa0.getCaixa();
    assertEquals(1.5874623117978444, double0, 0.01);
}

@Test(timeout = 4000)
public void test30()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Map<Cliente, Boolean> map0 = empresa0.getClientes();
    assertNotNull(map0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}
@Test(timeout = 4000)
public void test00()  throws Throwable  {
    Carteira carteira0 = new Carteira((-650.538551823452), (-650.538551823452), 0.0);
    carteira0.compraNoDebito((-650.538551823452));
    assertEquals((-650.538551823452), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    Carteira carteira0 = new Carteira((-2355.999273853816), 1.0, (-2355.999273853816));
    carteira0.compraSaldo((-2355.999273853816));
    assertEquals((-4711.998547707632), carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 0.0, 0.0);
    double double0 = carteira0.saldoTotal();
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
    assertEquals(0.0, carteira0.getSaldo(), 0.01);
    assertEquals(0.0, double0, 0.01);
    assertEquals(0.0, carteira0.getLimiteCredito(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    Carteira carteira0 = new Carteira((-727.5563483680716), (-3650.3607966822), (-203.95121365749));
    double double0 = carteira0.saldoTotal();
    assertEquals((-4581.868358707762), double0, 0.01);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 1555.1866392665322, 417.7768413161);
    double double0 = carteira0.getSaldo();
    assertEquals(1972.9634805826322, carteira0.saldoTotal(), 0.01);
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    assertEquals(2324.018253662, carteira0.getSaldo(), 0.01);
    
    carteira0.adicionaSaldo((-2215.0));
    double double0 = carteira0.getSaldo();
    assertEquals((-2215.0), double0, 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.combinaSaldo();
    double double0 = carteira0.getLimiteDebito();
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Carteira carteira0 = new Carteira(648.0, 648.0, (-838.3974));
    double double0 = carteira0.getLimiteDebito();
    assertEquals((-838.3974), double0, 0.01);
    assertEquals(457.60260000000005, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 0.0, 0.0);
    double double0 = carteira0.getLimiteCredito();
    assertEquals(0.0, carteira0.getSaldo(), 0.01);
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Carteira carteira0 = new Carteira(6149.5508, 6149.5508, (-2952.19846496588));
    double double0 = carteira0.getLimiteCredito();
    assertEquals(6149.5508, double0, 0.01);
    assertEquals(9346.903135034121, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.setLimiteDebito((-1.0));
    assertEquals((-1.0), carteira0.getLimiteDebito(), 0.01);
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraNoDebito(0.0);
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.compraNoCredito((-2215.0));
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraNoCredito((-1.0));
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.compraSaldo((-922.6779147158));
    assertEquals(1401.3403389462, carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraSaldo(1.0);
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.setLimiteCredito((-736.0631747));
    carteira0.compraNoCredito((-2215.0));
    assertEquals((-2215.0), carteira0.getLimiteCredito(), 0.01);
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getLimiteDebito();
    assertEquals(2324.018253662, double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.combinaSaldo();
    carteira0.compraNoDebito(0.0);
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
}

@Test(timeout = 4000)
public void test19()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.setSaldo((-736.0631747));
    assertEquals((-736.0631747), carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test20()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getSaldo();
    assertEquals(2324.018253662, double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test21()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.saldoTotal();
    assertEquals(2433.036507324, double0, 0.01);
}

@Test(timeout = 4000)
public void test22()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getLimiteCredito();
    assertEquals((-2215.0), double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Cliente cliente0 = new Cliente("0GhM*h<_L", (-158), "0GhM*h<_L", "V");
      cliente0.fone = "WEd";
      cliente0.fone = null;
      String string0 = cliente0.getFone();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Cliente cliente0 = new Cliente("", 0, "", "");
      String string0 = cliente0.getFone();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Cliente cliente0 = new Cliente("Cw$sYN93Xw\"Y'Z", (-1233), "", "d(43f!u\"iA>gw|dWeD");
      String string0 = cliente0.getEmail();
      assertEquals("", string0);
      assertEquals("d(43f!u\"iA>gw|dWeD", cliente0.getFone());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Cliente cliente0 = new Cliente("", 0, "", "");
      Carteira carteira0 = cliente0.getCarteira();
      assertNull(carteira0);
  }

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Cliente cliente0 = new Cliente("example.app.models.Cliente", 2578, "n", "example.app.models.Cliente");
    Carteira carteira0 = new Carteira(0.0, (-1.0), 2578);
    cliente0.carteira = carteira0;
    Carteira carteira1 = new Carteira(2578, 2578, 2578);
    cliente0.carteira = carteira1;
    cliente0.getCarteira();
    assertEquals("n", cliente0.getEmail());
    assertEquals("example.app.models.Cliente", cliente0.getFone());
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Carteira carteira0 = new Carteira((-1), (-1), (-2515.202332146312));
    Cliente cliente0 = new Cliente("X`pJIm%lP4 7c<I", (-1), "X`pJIm%lP4 7c<I", "example.app.models.Cliente", carteira0);
    Carteira carteira1 = cliente0.getCarteira();
    assertEquals("example.app.models.Cliente", cliente0.getFone());
    assertNotNull(carteira1);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    cliente0.setCarteira(carteira0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
    assertEquals("Saldo insuficiente", cliente0.getEmail());
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
    
    cliente0.setFone("sgH,,");
    assertEquals("sgH,,", cliente0.getFone());
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    Carteira carteira1 = cliente0.getCarteira();
    assertNotNull(carteira1);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Cliente cliente0 = new Cliente((String) null, (-1), "", "");
    Carteira carteira0 = new Carteira(0.0, (-1), 191.0);
    cliente0.setCarteira(carteira0);
    assertEquals((-1), cliente0.getIdade());
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    String string0 = cliente0.getEmail();
    assertEquals("Saldo insuficiente", string0);
    assertNotNull(string0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    String string0 = cliente0.getFone();
    assertNotNull(string0);
    assertEquals("c9FBDOj26e9", string0);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
    
    cliente0.setEmail("sgH,,");
    cliente0.getEmail();
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test00()  throws Throwable  {
    Integer integer0 = new Integer(0);
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(1.0);
    Destino destino0 = new Destino("v?AN2Q/CTBc5qq", integer0, climas0, double0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    destino0.setAtracoes(arrayList0);
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    Double double1 = new Double(1);
    destino0.setPreco(double1);
    assertEquals((double)double1, (double)double0, 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    Integer integer0 = new Integer(898);
    Climas climas0 = Climas.AGRADAVEL;
    Double double0 = new Double(241.13417);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("5(`M2SL4][&MS", integer0, climas0, double0, arrayList0);
    destino0.adicionaAtracao("5(`M2SL4][&MS");
    destino0.removeAtracao((-1));
    assertEquals(241.13417, destino0.getPreco(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.VENTANIA;
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("+X<t_<&]", integer0, climas0, (Double) null, arrayList0);
    Double double0 = destino0.getPreco();
    assertNull(double0);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Integer integer0 = new Integer((-488));
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double((-488));
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("example.app.models.Destino", integer0, climas0, double0, arrayList0);
    Double double1 = destino0.getPreco();
    assertEquals((-488.0), (double)double1, 0.01);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Double double0 = new Double(0.0);
    Climas climas0 = Climas.CHUVOSO;
    Destino destino0 = new Destino("wx DbX(+a&Ud7[1Q", (Integer) null, climas0, (Double) null, arrayList0);
    destino0.preco = double0;
    Double double1 = destino0.getPreco();
    assertEquals(0.0, (double)double1, 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Integer integer0 = new Integer((-2376));
    Climas climas0 = Climas.VENTANIA;
    Double double0 = new Double(187.6725);
    Destino destino0 = new Destino((String) null, integer0, climas0, double0);
    Double double1 = destino0.getPreco();
    assertNotNull(double1);
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(0.0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("", (Integer) null, climas0, double0, arrayList0);
    Boolean boolean0 = destino0.getCidadeTuristica();
    assertNull(boolean0);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Integer integer0 = new Integer(662);
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double(0.0);
    Destino destino0 = new Destino((String) null, integer0, climas0, double0);
    assertFalse(destino0.getCidadeTuristica());
    
    Boolean boolean0 = Boolean.valueOf(true);
    destino0.setCidadeTuristica(boolean0);
    destino0.getCidadeTuristica();
    assertTrue(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(2084);
    Destino destino0 = new Destino("/|", (Integer) null, climas0, double0);
    destino0.getAtracoes();
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    destino0.adicionaAtracao((String) null);
    ArrayList<String> arrayList1 = destino0.getAtracoes();
    assertFalse(arrayList1.contains("CHUVOSO"));
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Integer integer0 = new Integer((-1106));
    Climas climas0 = Climas.AGRADAVEL;
    Double double0 = new Double((-982.9847914361264));
    Destino destino0 = new Destino("example.app.models.Cidade", integer0, climas0, double0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao((-635));
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(0.0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("", (Integer) null, climas0, double0, arrayList0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao((-1327));
    fail("Expecting exception: ArrayIndexOutOfBoundsException");
    
    } catch(ArrayIndexOutOfBoundsException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    Integer integer0 = new Integer(5317);
    Climas climas0 = Climas.VENTANIA;
    Double double0 = new Double(5317);
    Destino destino0 = null;
    try {
    destino0 = new Destino("", integer0, climas0, double0, (ArrayList<String>) null);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    ArrayList<String> arrayList0 = new ArrayList<String>();
    arrayList0.add("");
    arrayList0.add((String) null);
    arrayList0.add("");
    arrayList0.add("");
    arrayList0.add("~~LOk|W6");
    arrayList0.add("wx DbX(+a&Ud7[1Q");
    Climas climas0 = Climas.CHUVOSO;
    Destino destino0 = new Destino("wx DbX(+a&Ud7[1Q", (Integer) null, climas0, (Double) null, arrayList0);
    assertTrue(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao(0);
    fail("Expecting exception: IndexOutOfBoundsException");
    
    } catch(IndexOutOfBoundsException e) {
        //
        // Index: 1, Size: 0
        //
        verifyException("java.util.ArrayList", e);
    }
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    ArrayList<String> arrayList1 = destino0.getAtracoes();
    assertSame(arrayList0, arrayList1);
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    Integer integer0 = new Integer((-1592));
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double(0.0);
    Destino destino0 = new Destino("Cd1-v '", integer0, climas0, double0);
    // Undeclared exception!
    try { 
    destino0.adicionaAtracao("");
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(2084);
    Destino destino0 = new Destino("/|", (Integer) null, climas0, double0);
    Boolean boolean0 = destino0.getCidadeTuristica();
    assertFalse(boolean0);
}

@Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
      Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
      Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
      empresa0.adicionaCliente(cliente0);
      ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
      assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
      assertFalse(arrayList0.contains(cliente0));
  }

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("n[>;n,\"oV(UzKEMC.Z", 1285.07203100387, hashMap0);
    Carteira carteira0 = new Carteira(1285.07203100387, 1285.07203100387, 1285.07203100387);
    Cliente cliente0 = new Cliente("n[>;n,\"oV(UzKEMC.Z", 21, "n[>;n,\"oV(UzKEMC.Z", "n[>;n,\"oV(UzKEMC.Z", carteira0);
    Boolean boolean0 = Boolean.valueOf("n[>;n,\"oV(UzKEMC.Z");
    hashMap0.put(cliente0, boolean0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertFalse(arrayList0.contains(cliente0));
    assertEquals(1285.07203100387, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", hashMap0);
    HashMap<Cliente, Boolean> hashMap1 = new HashMap<Cliente, Boolean>(226, 226);
    empresa0.setClientes(hashMap1);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 0.0, hashMap0);
    empresa0.getNome();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", (-1900.3841), hashMap0);
    String string0 = empresa0.getNome();
    assertEquals((-1900.3841), empresa0.getCaixa(), 0.01);
    assertNotNull(string0);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Empresa empresa0 = new Empresa("", (Map<Cliente, Boolean>) null);
    empresa0.getClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    empresa0.adicionaCliente(cliente0);
    empresa0.getClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Empresa empresa0 = new Empresa("uULRcy-", (Map<Cliente, Boolean>) null);
    double double0 = empresa0.getCaixa();
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("P,#G", (-1.0), hashMap0);
    double double0 = empresa0.getCaixa();
    assertEquals((-1.0), double0, 0.01);
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    empresa0.buscaCliente(cliente0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Empresa empresa0 = new Empresa("S", 957.482814242, (Map<Cliente, Boolean>) null);
    Carteira carteira0 = new Carteira(0, 0, 0.0);
    Cliente cliente0 = new Cliente("}YR=,ddq.lk:(HQsj", 0, "3'1)DWuF!7xWhxZn>", "}YR=,ddq.lk:(HQsj", carteira0);
    // Undeclared exception!
    try { 
    empresa0.removeCliente(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", 0.0, hashMap0);
    Boolean boolean0 = new Boolean("example.app.models.Cliente");
    hashMap0.put((Cliente) null, boolean0);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientesAtivos();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Empresa empresa0 = new Empresa("]1)ZWIN|@j=", (-1249.0873), (Map<Cliente, Boolean>) null);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientes();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("`wAnG<PdzOk", hashMap0);
    Carteira carteira0 = new Carteira(0, 4618.8836, 4618.8836);
    Cliente cliente0 = new Cliente("^", 0, "^", "?K", carteira0);
    // Undeclared exception!
    try { 
    empresa0.buscaClienteAtivo(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    Empresa empresa0 = new Empresa("uULRcy-", (Map<Cliente, Boolean>) null);
    Carteira carteira0 = new Carteira(1274.862, 1.0, (-2609.2058285026246));
    Cliente cliente0 = new Cliente("uULRcy-", (-1), "uULRcy-", "uULRcy-", carteira0);
    // Undeclared exception!
    try { 
    empresa0.buscaCliente(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 0.0, hashMap0);
    // Undeclared exception!
    try { 
    empresa0.adicionaCliente((Cliente) null);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 20, "TB[E?\"W_wvfU", "");
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
    assertTrue(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
    assertFalse(arrayList0.contains(cliente0));
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 1.5874623117978444, hashMap0);
    Cliente cliente0 = new Cliente((String) null, (-6), (String) null, (String) null);
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertEquals(1.5874623117978444, empresa0.getCaixa(), 0.01);
    assertFalse(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test19()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("n:^1s:EBM'RLm7", hashMap0);
    Cliente cliente0 = new Cliente("n:^1s:EBM'RLm7", 20, "n:^1s:EBM'RLm7", "n:^1s:EBM'RLm7");
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    empresa0.listaTodosClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test20()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    empresa0.listaTodosClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test21()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    Boolean boolean1 = empresa0.buscaClienteAtivo(cliente0);
    assertTrue(boolean1);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test22()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, (-3457.176), hashMap0);
    Cliente cliente0 = new Cliente((String) null, (-177), (String) null, (String) null);
    Boolean boolean0 = empresa0.buscaCliente(cliente0);
    assertNotNull(boolean0);
    
    hashMap0.put(cliente0, boolean0);
    Boolean boolean1 = empresa0.buscaClienteAtivo(cliente0);
    assertFalse(boolean1);
    assertEquals((-3457.176), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test23()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("<q+ t*9k6", hashMap0);
    Boolean boolean0 = empresa0.buscaCliente((Cliente) null);
    hashMap0.put((Cliente) null, boolean0);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientesInativos();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test24()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
    assertTrue(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test25()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
    empresa0.removeCliente(cliente0);
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test26()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    String string0 = empresa0.getNome();
    assertNotNull(string0);
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test27()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    empresa0.setNome("TB[E?\"W_wvfU");
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test28()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
    
    empresa0.setCaixa(1.0);
    assertEquals(1.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test29()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 1.5874623117978444, hashMap0);
    double double0 = empresa0.getCaixa();
    assertEquals(1.5874623117978444, double0, 0.01);
}

@Test(timeout = 4000)
public void test30()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Map<Cliente, Boolean> map0 = empresa0.getClientes();
    assertNotNull(map0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}
@Test(timeout = 4000)
public void test00()  throws Throwable  {
    Carteira carteira0 = new Carteira((-650.538551823452), (-650.538551823452), 0.0);
    carteira0.compraNoDebito((-650.538551823452));
    assertEquals((-650.538551823452), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    Carteira carteira0 = new Carteira((-2355.999273853816), 1.0, (-2355.999273853816));
    carteira0.compraSaldo((-2355.999273853816));
    assertEquals((-4711.998547707632), carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 0.0, 0.0);
    double double0 = carteira0.saldoTotal();
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
    assertEquals(0.0, carteira0.getSaldo(), 0.01);
    assertEquals(0.0, double0, 0.01);
    assertEquals(0.0, carteira0.getLimiteCredito(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    Carteira carteira0 = new Carteira((-727.5563483680716), (-3650.3607966822), (-203.95121365749));
    double double0 = carteira0.saldoTotal();
    assertEquals((-4581.868358707762), double0, 0.01);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 1555.1866392665322, 417.7768413161);
    double double0 = carteira0.getSaldo();
    assertEquals(1972.9634805826322, carteira0.saldoTotal(), 0.01);
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    assertEquals(2324.018253662, carteira0.getSaldo(), 0.01);
    
    carteira0.adicionaSaldo((-2215.0));
    double double0 = carteira0.getSaldo();
    assertEquals((-2215.0), double0, 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.combinaSaldo();
    double double0 = carteira0.getLimiteDebito();
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Carteira carteira0 = new Carteira(648.0, 648.0, (-838.3974));
    double double0 = carteira0.getLimiteDebito();
    assertEquals((-838.3974), double0, 0.01);
    assertEquals(457.60260000000005, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 0.0, 0.0);
    double double0 = carteira0.getLimiteCredito();
    assertEquals(0.0, carteira0.getSaldo(), 0.01);
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Carteira carteira0 = new Carteira(6149.5508, 6149.5508, (-2952.19846496588));
    double double0 = carteira0.getLimiteCredito();
    assertEquals(6149.5508, double0, 0.01);
    assertEquals(9346.903135034121, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.setLimiteDebito((-1.0));
    assertEquals((-1.0), carteira0.getLimiteDebito(), 0.01);
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraNoDebito(0.0);
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.compraNoCredito((-2215.0));
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraNoCredito((-1.0));
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.compraSaldo((-922.6779147158));
    assertEquals(1401.3403389462, carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraSaldo(1.0);
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.setLimiteCredito((-736.0631747));
    carteira0.compraNoCredito((-2215.0));
    assertEquals((-2215.0), carteira0.getLimiteCredito(), 0.01);
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getLimiteDebito();
    assertEquals(2324.018253662, double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.combinaSaldo();
    carteira0.compraNoDebito(0.0);
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
}

@Test(timeout = 4000)
public void test19()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.setSaldo((-736.0631747));
    assertEquals((-736.0631747), carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test20()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getSaldo();
    assertEquals(2324.018253662, double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test21()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.saldoTotal();
    assertEquals(2433.036507324, double0, 0.01);
}

@Test(timeout = 4000)
public void test22()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getLimiteCredito();
    assertEquals((-2215.0), double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Cliente cliente0 = new Cliente("0GhM*h<_L", (-158), "0GhM*h<_L", "V");
      cliente0.fone = "WEd";
      cliente0.fone = null;
      String string0 = cliente0.getFone();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Cliente cliente0 = new Cliente("", 0, "", "");
      String string0 = cliente0.getFone();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Cliente cliente0 = new Cliente("Cw$sYN93Xw\"Y'Z", (-1233), "", "d(43f!u\"iA>gw|dWeD");
      String string0 = cliente0.getEmail();
      assertEquals("", string0);
      assertEquals("d(43f!u\"iA>gw|dWeD", cliente0.getFone());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Cliente cliente0 = new Cliente("", 0, "", "");
      Carteira carteira0 = cliente0.getCarteira();
      assertNull(carteira0);
  }

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Cliente cliente0 = new Cliente("example.app.models.Cliente", 2578, "n", "example.app.models.Cliente");
    Carteira carteira0 = new Carteira(0.0, (-1.0), 2578);
    cliente0.carteira = carteira0;
    Carteira carteira1 = new Carteira(2578, 2578, 2578);
    cliente0.carteira = carteira1;
    cliente0.getCarteira();
    assertEquals("n", cliente0.getEmail());
    assertEquals("example.app.models.Cliente", cliente0.getFone());
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Carteira carteira0 = new Carteira((-1), (-1), (-2515.202332146312));
    Cliente cliente0 = new Cliente("X`pJIm%lP4 7c<I", (-1), "X`pJIm%lP4 7c<I", "example.app.models.Cliente", carteira0);
    Carteira carteira1 = cliente0.getCarteira();
    assertEquals("example.app.models.Cliente", cliente0.getFone());
    assertNotNull(carteira1);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    cliente0.setCarteira(carteira0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
    assertEquals("Saldo insuficiente", cliente0.getEmail());
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
    
    cliente0.setFone("sgH,,");
    assertEquals("sgH,,", cliente0.getFone());
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    Carteira carteira1 = cliente0.getCarteira();
    assertNotNull(carteira1);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Cliente cliente0 = new Cliente((String) null, (-1), "", "");
    Carteira carteira0 = new Carteira(0.0, (-1), 191.0);
    cliente0.setCarteira(carteira0);
    assertEquals((-1), cliente0.getIdade());
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    String string0 = cliente0.getEmail();
    assertEquals("Saldo insuficiente", string0);
    assertNotNull(string0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    String string0 = cliente0.getFone();
    assertNotNull(string0);
    assertEquals("c9FBDOj26e9", string0);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
    
    cliente0.setEmail("sgH,,");
    cliente0.getEmail();
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test00()  throws Throwable  {
    Integer integer0 = new Integer(0);
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(1.0);
    Destino destino0 = new Destino("v?AN2Q/CTBc5qq", integer0, climas0, double0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    destino0.setAtracoes(arrayList0);
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    Double double1 = new Double(1);
    destino0.setPreco(double1);
    assertEquals((double)double1, (double)double0, 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    Integer integer0 = new Integer(898);
    Climas climas0 = Climas.AGRADAVEL;
    Double double0 = new Double(241.13417);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("5(`M2SL4][&MS", integer0, climas0, double0, arrayList0);
    destino0.adicionaAtracao("5(`M2SL4][&MS");
    destino0.removeAtracao((-1));
    assertEquals(241.13417, destino0.getPreco(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.VENTANIA;
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("+X<t_<&]", integer0, climas0, (Double) null, arrayList0);
    Double double0 = destino0.getPreco();
    assertNull(double0);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Integer integer0 = new Integer((-488));
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double((-488));
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("example.app.models.Destino", integer0, climas0, double0, arrayList0);
    Double double1 = destino0.getPreco();
    assertEquals((-488.0), (double)double1, 0.01);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Double double0 = new Double(0.0);
    Climas climas0 = Climas.CHUVOSO;
    Destino destino0 = new Destino("wx DbX(+a&Ud7[1Q", (Integer) null, climas0, (Double) null, arrayList0);
    destino0.preco = double0;
    Double double1 = destino0.getPreco();
    assertEquals(0.0, (double)double1, 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Integer integer0 = new Integer((-2376));
    Climas climas0 = Climas.VENTANIA;
    Double double0 = new Double(187.6725);
    Destino destino0 = new Destino((String) null, integer0, climas0, double0);
    Double double1 = destino0.getPreco();
    assertNotNull(double1);
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(0.0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("", (Integer) null, climas0, double0, arrayList0);
    Boolean boolean0 = destino0.getCidadeTuristica();
    assertNull(boolean0);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Integer integer0 = new Integer(662);
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double(0.0);
    Destino destino0 = new Destino((String) null, integer0, climas0, double0);
    assertFalse(destino0.getCidadeTuristica());
    
    Boolean boolean0 = Boolean.valueOf(true);
    destino0.setCidadeTuristica(boolean0);
    destino0.getCidadeTuristica();
    assertTrue(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(2084);
    Destino destino0 = new Destino("/|", (Integer) null, climas0, double0);
    destino0.getAtracoes();
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    destino0.adicionaAtracao((String) null);
    ArrayList<String> arrayList1 = destino0.getAtracoes();
    assertFalse(arrayList1.contains("CHUVOSO"));
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Integer integer0 = new Integer((-1106));
    Climas climas0 = Climas.AGRADAVEL;
    Double double0 = new Double((-982.9847914361264));
    Destino destino0 = new Destino("example.app.models.Cidade", integer0, climas0, double0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao((-635));
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(0.0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("", (Integer) null, climas0, double0, arrayList0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao((-1327));
    fail("Expecting exception: ArrayIndexOutOfBoundsException");
    
    } catch(ArrayIndexOutOfBoundsException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    Integer integer0 = new Integer(5317);
    Climas climas0 = Climas.VENTANIA;
    Double double0 = new Double(5317);
    Destino destino0 = null;
    try {
    destino0 = new Destino("", integer0, climas0, double0, (ArrayList<String>) null);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    ArrayList<String> arrayList0 = new ArrayList<String>();
    arrayList0.add("");
    arrayList0.add((String) null);
    arrayList0.add("");
    arrayList0.add("");
    arrayList0.add("~~LOk|W6");
    arrayList0.add("wx DbX(+a&Ud7[1Q");
    Climas climas0 = Climas.CHUVOSO;
    Destino destino0 = new Destino("wx DbX(+a&Ud7[1Q", (Integer) null, climas0, (Double) null, arrayList0);
    assertTrue(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao(0);
    fail("Expecting exception: IndexOutOfBoundsException");
    
    } catch(IndexOutOfBoundsException e) {
        //
        // Index: 1, Size: 0
        //
        verifyException("java.util.ArrayList", e);
    }
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    ArrayList<String> arrayList1 = destino0.getAtracoes();
    assertSame(arrayList0, arrayList1);
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    Integer integer0 = new Integer((-1592));
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double(0.0);
    Destino destino0 = new Destino("Cd1-v '", integer0, climas0, double0);
    // Undeclared exception!
    try { 
    destino0.adicionaAtracao("");
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(2084);
    Destino destino0 = new Destino("/|", (Integer) null, climas0, double0);
    Boolean boolean0 = destino0.getCidadeTuristica();
    assertFalse(boolean0);
}

@Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
      Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
      Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
      empresa0.adicionaCliente(cliente0);
      ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
      assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
      assertFalse(arrayList0.contains(cliente0));
  }

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("n[>;n,\"oV(UzKEMC.Z", 1285.07203100387, hashMap0);
    Carteira carteira0 = new Carteira(1285.07203100387, 1285.07203100387, 1285.07203100387);
    Cliente cliente0 = new Cliente("n[>;n,\"oV(UzKEMC.Z", 21, "n[>;n,\"oV(UzKEMC.Z", "n[>;n,\"oV(UzKEMC.Z", carteira0);
    Boolean boolean0 = Boolean.valueOf("n[>;n,\"oV(UzKEMC.Z");
    hashMap0.put(cliente0, boolean0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertFalse(arrayList0.contains(cliente0));
    assertEquals(1285.07203100387, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", hashMap0);
    HashMap<Cliente, Boolean> hashMap1 = new HashMap<Cliente, Boolean>(226, 226);
    empresa0.setClientes(hashMap1);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 0.0, hashMap0);
    empresa0.getNome();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", (-1900.3841), hashMap0);
    String string0 = empresa0.getNome();
    assertEquals((-1900.3841), empresa0.getCaixa(), 0.01);
    assertNotNull(string0);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Empresa empresa0 = new Empresa("", (Map<Cliente, Boolean>) null);
    empresa0.getClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    empresa0.adicionaCliente(cliente0);
    empresa0.getClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Empresa empresa0 = new Empresa("uULRcy-", (Map<Cliente, Boolean>) null);
    double double0 = empresa0.getCaixa();
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("P,#G", (-1.0), hashMap0);
    double double0 = empresa0.getCaixa();
    assertEquals((-1.0), double0, 0.01);
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    empresa0.buscaCliente(cliente0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Empresa empresa0 = new Empresa("S", 957.482814242, (Map<Cliente, Boolean>) null);
    Carteira carteira0 = new Carteira(0, 0, 0.0);
    Cliente cliente0 = new Cliente("}YR=,ddq.lk:(HQsj", 0, "3'1)DWuF!7xWhxZn>", "}YR=,ddq.lk:(HQsj", carteira0);
    // Undeclared exception!
    try { 
    empresa0.removeCliente(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", 0.0, hashMap0);
    Boolean boolean0 = new Boolean("example.app.models.Cliente");
    hashMap0.put((Cliente) null, boolean0);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientesAtivos();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Empresa empresa0 = new Empresa("]1)ZWIN|@j=", (-1249.0873), (Map<Cliente, Boolean>) null);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientes();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("`wAnG<PdzOk", hashMap0);
    Carteira carteira0 = new Carteira(0, 4618.8836, 4618.8836);
    Cliente cliente0 = new Cliente("^", 0, "^", "?K", carteira0);
    // Undeclared exception!
    try { 
    empresa0.buscaClienteAtivo(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    Empresa empresa0 = new Empresa("uULRcy-", (Map<Cliente, Boolean>) null);
    Carteira carteira0 = new Carteira(1274.862, 1.0, (-2609.2058285026246));
    Cliente cliente0 = new Cliente("uULRcy-", (-1), "uULRcy-", "uULRcy-", carteira0);
    // Undeclared exception!
    try { 
    empresa0.buscaCliente(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 0.0, hashMap0);
    // Undeclared exception!
    try { 
    empresa0.adicionaCliente((Cliente) null);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 20, "TB[E?\"W_wvfU", "");
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
    assertTrue(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
    assertFalse(arrayList0.contains(cliente0));
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 1.5874623117978444, hashMap0);
    Cliente cliente0 = new Cliente((String) null, (-6), (String) null, (String) null);
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertEquals(1.5874623117978444, empresa0.getCaixa(), 0.01);
    assertFalse(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test19()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("n:^1s:EBM'RLm7", hashMap0);
    Cliente cliente0 = new Cliente("n:^1s:EBM'RLm7", 20, "n:^1s:EBM'RLm7", "n:^1s:EBM'RLm7");
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    empresa0.listaTodosClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test20()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    empresa0.listaTodosClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test21()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    Boolean boolean1 = empresa0.buscaClienteAtivo(cliente0);
    assertTrue(boolean1);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test22()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, (-3457.176), hashMap0);
    Cliente cliente0 = new Cliente((String) null, (-177), (String) null, (String) null);
    Boolean boolean0 = empresa0.buscaCliente(cliente0);
    assertNotNull(boolean0);
    
    hashMap0.put(cliente0, boolean0);
    Boolean boolean1 = empresa0.buscaClienteAtivo(cliente0);
    assertFalse(boolean1);
    assertEquals((-3457.176), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test23()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("<q+ t*9k6", hashMap0);
    Boolean boolean0 = empresa0.buscaCliente((Cliente) null);
    hashMap0.put((Cliente) null, boolean0);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientesInativos();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test24()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
    assertTrue(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test25()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
    empresa0.removeCliente(cliente0);
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test26()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    String string0 = empresa0.getNome();
    assertNotNull(string0);
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test27()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    empresa0.setNome("TB[E?\"W_wvfU");
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test28()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
    
    empresa0.setCaixa(1.0);
    assertEquals(1.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test29()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 1.5874623117978444, hashMap0);
    double double0 = empresa0.getCaixa();
    assertEquals(1.5874623117978444, double0, 0.01);
}

@Test(timeout = 4000)
public void test30()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Map<Cliente, Boolean> map0 = empresa0.getClientes();
    assertNotNull(map0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}
@Test(timeout = 4000)
public void test00()  throws Throwable  {
    Carteira carteira0 = new Carteira((-650.538551823452), (-650.538551823452), 0.0);
    carteira0.compraNoDebito((-650.538551823452));
    assertEquals((-650.538551823452), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    Carteira carteira0 = new Carteira((-2355.999273853816), 1.0, (-2355.999273853816));
    carteira0.compraSaldo((-2355.999273853816));
    assertEquals((-4711.998547707632), carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 0.0, 0.0);
    double double0 = carteira0.saldoTotal();
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
    assertEquals(0.0, carteira0.getSaldo(), 0.01);
    assertEquals(0.0, double0, 0.01);
    assertEquals(0.0, carteira0.getLimiteCredito(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    Carteira carteira0 = new Carteira((-727.5563483680716), (-3650.3607966822), (-203.95121365749));
    double double0 = carteira0.saldoTotal();
    assertEquals((-4581.868358707762), double0, 0.01);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 1555.1866392665322, 417.7768413161);
    double double0 = carteira0.getSaldo();
    assertEquals(1972.9634805826322, carteira0.saldoTotal(), 0.01);
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    assertEquals(2324.018253662, carteira0.getSaldo(), 0.01);
    
    carteira0.adicionaSaldo((-2215.0));
    double double0 = carteira0.getSaldo();
    assertEquals((-2215.0), double0, 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.combinaSaldo();
    double double0 = carteira0.getLimiteDebito();
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Carteira carteira0 = new Carteira(648.0, 648.0, (-838.3974));
    double double0 = carteira0.getLimiteDebito();
    assertEquals((-838.3974), double0, 0.01);
    assertEquals(457.60260000000005, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 0.0, 0.0);
    double double0 = carteira0.getLimiteCredito();
    assertEquals(0.0, carteira0.getSaldo(), 0.01);
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Carteira carteira0 = new Carteira(6149.5508, 6149.5508, (-2952.19846496588));
    double double0 = carteira0.getLimiteCredito();
    assertEquals(6149.5508, double0, 0.01);
    assertEquals(9346.903135034121, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.setLimiteDebito((-1.0));
    assertEquals((-1.0), carteira0.getLimiteDebito(), 0.01);
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraNoDebito(0.0);
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.compraNoCredito((-2215.0));
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraNoCredito((-1.0));
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.compraSaldo((-922.6779147158));
    assertEquals(1401.3403389462, carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraSaldo(1.0);
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.setLimiteCredito((-736.0631747));
    carteira0.compraNoCredito((-2215.0));
    assertEquals((-2215.0), carteira0.getLimiteCredito(), 0.01);
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getLimiteDebito();
    assertEquals(2324.018253662, double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.combinaSaldo();
    carteira0.compraNoDebito(0.0);
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
}

@Test(timeout = 4000)
public void test19()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.setSaldo((-736.0631747));
    assertEquals((-736.0631747), carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test20()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getSaldo();
    assertEquals(2324.018253662, double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test21()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.saldoTotal();
    assertEquals(2433.036507324, double0, 0.01);
}

@Test(timeout = 4000)
public void test22()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getLimiteCredito();
    assertEquals((-2215.0), double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Cliente cliente0 = new Cliente("0GhM*h<_L", (-158), "0GhM*h<_L", "V");
      cliente0.fone = "WEd";
      cliente0.fone = null;
      String string0 = cliente0.getFone();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Cliente cliente0 = new Cliente("", 0, "", "");
      String string0 = cliente0.getFone();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Cliente cliente0 = new Cliente("Cw$sYN93Xw\"Y'Z", (-1233), "", "d(43f!u\"iA>gw|dWeD");
      String string0 = cliente0.getEmail();
      assertEquals("", string0);
      assertEquals("d(43f!u\"iA>gw|dWeD", cliente0.getFone());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Cliente cliente0 = new Cliente("", 0, "", "");
      Carteira carteira0 = cliente0.getCarteira();
      assertNull(carteira0);
  }

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Cliente cliente0 = new Cliente("example.app.models.Cliente", 2578, "n", "example.app.models.Cliente");
    Carteira carteira0 = new Carteira(0.0, (-1.0), 2578);
    cliente0.carteira = carteira0;
    Carteira carteira1 = new Carteira(2578, 2578, 2578);
    cliente0.carteira = carteira1;
    cliente0.getCarteira();
    assertEquals("n", cliente0.getEmail());
    assertEquals("example.app.models.Cliente", cliente0.getFone());
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Carteira carteira0 = new Carteira((-1), (-1), (-2515.202332146312));
    Cliente cliente0 = new Cliente("X`pJIm%lP4 7c<I", (-1), "X`pJIm%lP4 7c<I", "example.app.models.Cliente", carteira0);
    Carteira carteira1 = cliente0.getCarteira();
    assertEquals("example.app.models.Cliente", cliente0.getFone());
    assertNotNull(carteira1);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    cliente0.setCarteira(carteira0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
    assertEquals("Saldo insuficiente", cliente0.getEmail());
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
    
    cliente0.setFone("sgH,,");
    assertEquals("sgH,,", cliente0.getFone());
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    Carteira carteira1 = cliente0.getCarteira();
    assertNotNull(carteira1);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Cliente cliente0 = new Cliente((String) null, (-1), "", "");
    Carteira carteira0 = new Carteira(0.0, (-1), 191.0);
    cliente0.setCarteira(carteira0);
    assertEquals((-1), cliente0.getIdade());
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    String string0 = cliente0.getEmail();
    assertEquals("Saldo insuficiente", string0);
    assertNotNull(string0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    String string0 = cliente0.getFone();
    assertNotNull(string0);
    assertEquals("c9FBDOj26e9", string0);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
    
    cliente0.setEmail("sgH,,");
    cliente0.getEmail();
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test00()  throws Throwable  {
    Integer integer0 = new Integer(0);
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(1.0);
    Destino destino0 = new Destino("v?AN2Q/CTBc5qq", integer0, climas0, double0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    destino0.setAtracoes(arrayList0);
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    Double double1 = new Double(1);
    destino0.setPreco(double1);
    assertEquals((double)double1, (double)double0, 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    Integer integer0 = new Integer(898);
    Climas climas0 = Climas.AGRADAVEL;
    Double double0 = new Double(241.13417);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("5(`M2SL4][&MS", integer0, climas0, double0, arrayList0);
    destino0.adicionaAtracao("5(`M2SL4][&MS");
    destino0.removeAtracao((-1));
    assertEquals(241.13417, destino0.getPreco(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.VENTANIA;
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("+X<t_<&]", integer0, climas0, (Double) null, arrayList0);
    Double double0 = destino0.getPreco();
    assertNull(double0);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Integer integer0 = new Integer((-488));
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double((-488));
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("example.app.models.Destino", integer0, climas0, double0, arrayList0);
    Double double1 = destino0.getPreco();
    assertEquals((-488.0), (double)double1, 0.01);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Double double0 = new Double(0.0);
    Climas climas0 = Climas.CHUVOSO;
    Destino destino0 = new Destino("wx DbX(+a&Ud7[1Q", (Integer) null, climas0, (Double) null, arrayList0);
    destino0.preco = double0;
    Double double1 = destino0.getPreco();
    assertEquals(0.0, (double)double1, 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Integer integer0 = new Integer((-2376));
    Climas climas0 = Climas.VENTANIA;
    Double double0 = new Double(187.6725);
    Destino destino0 = new Destino((String) null, integer0, climas0, double0);
    Double double1 = destino0.getPreco();
    assertNotNull(double1);
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(0.0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("", (Integer) null, climas0, double0, arrayList0);
    Boolean boolean0 = destino0.getCidadeTuristica();
    assertNull(boolean0);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Integer integer0 = new Integer(662);
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double(0.0);
    Destino destino0 = new Destino((String) null, integer0, climas0, double0);
    assertFalse(destino0.getCidadeTuristica());
    
    Boolean boolean0 = Boolean.valueOf(true);
    destino0.setCidadeTuristica(boolean0);
    destino0.getCidadeTuristica();
    assertTrue(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(2084);
    Destino destino0 = new Destino("/|", (Integer) null, climas0, double0);
    destino0.getAtracoes();
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    destino0.adicionaAtracao((String) null);
    ArrayList<String> arrayList1 = destino0.getAtracoes();
    assertFalse(arrayList1.contains("CHUVOSO"));
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Integer integer0 = new Integer((-1106));
    Climas climas0 = Climas.AGRADAVEL;
    Double double0 = new Double((-982.9847914361264));
    Destino destino0 = new Destino("example.app.models.Cidade", integer0, climas0, double0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao((-635));
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(0.0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("", (Integer) null, climas0, double0, arrayList0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao((-1327));
    fail("Expecting exception: ArrayIndexOutOfBoundsException");
    
    } catch(ArrayIndexOutOfBoundsException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    Integer integer0 = new Integer(5317);
    Climas climas0 = Climas.VENTANIA;
    Double double0 = new Double(5317);
    Destino destino0 = null;
    try {
    destino0 = new Destino("", integer0, climas0, double0, (ArrayList<String>) null);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    ArrayList<String> arrayList0 = new ArrayList<String>();
    arrayList0.add("");
    arrayList0.add((String) null);
    arrayList0.add("");
    arrayList0.add("");
    arrayList0.add("~~LOk|W6");
    arrayList0.add("wx DbX(+a&Ud7[1Q");
    Climas climas0 = Climas.CHUVOSO;
    Destino destino0 = new Destino("wx DbX(+a&Ud7[1Q", (Integer) null, climas0, (Double) null, arrayList0);
    assertTrue(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao(0);
    fail("Expecting exception: IndexOutOfBoundsException");
    
    } catch(IndexOutOfBoundsException e) {
        //
        // Index: 1, Size: 0
        //
        verifyException("java.util.ArrayList", e);
    }
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    ArrayList<String> arrayList1 = destino0.getAtracoes();
    assertSame(arrayList0, arrayList1);
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    Integer integer0 = new Integer((-1592));
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double(0.0);
    Destino destino0 = new Destino("Cd1-v '", integer0, climas0, double0);
    // Undeclared exception!
    try { 
    destino0.adicionaAtracao("");
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(2084);
    Destino destino0 = new Destino("/|", (Integer) null, climas0, double0);
    Boolean boolean0 = destino0.getCidadeTuristica();
    assertFalse(boolean0);
}

@Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
      Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
      Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
      empresa0.adicionaCliente(cliente0);
      ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
      assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
      assertFalse(arrayList0.contains(cliente0));
  }

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("n[>;n,\"oV(UzKEMC.Z", 1285.07203100387, hashMap0);
    Carteira carteira0 = new Carteira(1285.07203100387, 1285.07203100387, 1285.07203100387);
    Cliente cliente0 = new Cliente("n[>;n,\"oV(UzKEMC.Z", 21, "n[>;n,\"oV(UzKEMC.Z", "n[>;n,\"oV(UzKEMC.Z", carteira0);
    Boolean boolean0 = Boolean.valueOf("n[>;n,\"oV(UzKEMC.Z");
    hashMap0.put(cliente0, boolean0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertFalse(arrayList0.contains(cliente0));
    assertEquals(1285.07203100387, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", hashMap0);
    HashMap<Cliente, Boolean> hashMap1 = new HashMap<Cliente, Boolean>(226, 226);
    empresa0.setClientes(hashMap1);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 0.0, hashMap0);
    empresa0.getNome();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", (-1900.3841), hashMap0);
    String string0 = empresa0.getNome();
    assertEquals((-1900.3841), empresa0.getCaixa(), 0.01);
    assertNotNull(string0);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Empresa empresa0 = new Empresa("", (Map<Cliente, Boolean>) null);
    empresa0.getClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    empresa0.adicionaCliente(cliente0);
    empresa0.getClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Empresa empresa0 = new Empresa("uULRcy-", (Map<Cliente, Boolean>) null);
    double double0 = empresa0.getCaixa();
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("P,#G", (-1.0), hashMap0);
    double double0 = empresa0.getCaixa();
    assertEquals((-1.0), double0, 0.01);
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    empresa0.buscaCliente(cliente0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Empresa empresa0 = new Empresa("S", 957.482814242, (Map<Cliente, Boolean>) null);
    Carteira carteira0 = new Carteira(0, 0, 0.0);
    Cliente cliente0 = new Cliente("}YR=,ddq.lk:(HQsj", 0, "3'1)DWuF!7xWhxZn>", "}YR=,ddq.lk:(HQsj", carteira0);
    // Undeclared exception!
    try { 
    empresa0.removeCliente(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", 0.0, hashMap0);
    Boolean boolean0 = new Boolean("example.app.models.Cliente");
    hashMap0.put((Cliente) null, boolean0);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientesAtivos();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Empresa empresa0 = new Empresa("]1)ZWIN|@j=", (-1249.0873), (Map<Cliente, Boolean>) null);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientes();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("`wAnG<PdzOk", hashMap0);
    Carteira carteira0 = new Carteira(0, 4618.8836, 4618.8836);
    Cliente cliente0 = new Cliente("^", 0, "^", "?K", carteira0);
    // Undeclared exception!
    try { 
    empresa0.buscaClienteAtivo(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    Empresa empresa0 = new Empresa("uULRcy-", (Map<Cliente, Boolean>) null);
    Carteira carteira0 = new Carteira(1274.862, 1.0, (-2609.2058285026246));
    Cliente cliente0 = new Cliente("uULRcy-", (-1), "uULRcy-", "uULRcy-", carteira0);
    // Undeclared exception!
    try { 
    empresa0.buscaCliente(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 0.0, hashMap0);
    // Undeclared exception!
    try { 
    empresa0.adicionaCliente((Cliente) null);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 20, "TB[E?\"W_wvfU", "");
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
    assertTrue(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
    assertFalse(arrayList0.contains(cliente0));
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 1.5874623117978444, hashMap0);
    Cliente cliente0 = new Cliente((String) null, (-6), (String) null, (String) null);
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertEquals(1.5874623117978444, empresa0.getCaixa(), 0.01);
    assertFalse(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test19()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("n:^1s:EBM'RLm7", hashMap0);
    Cliente cliente0 = new Cliente("n:^1s:EBM'RLm7", 20, "n:^1s:EBM'RLm7", "n:^1s:EBM'RLm7");
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    empresa0.listaTodosClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test20()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    empresa0.listaTodosClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test21()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    Boolean boolean1 = empresa0.buscaClienteAtivo(cliente0);
    assertTrue(boolean1);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test22()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, (-3457.176), hashMap0);
    Cliente cliente0 = new Cliente((String) null, (-177), (String) null, (String) null);
    Boolean boolean0 = empresa0.buscaCliente(cliente0);
    assertNotNull(boolean0);
    
    hashMap0.put(cliente0, boolean0);
    Boolean boolean1 = empresa0.buscaClienteAtivo(cliente0);
    assertFalse(boolean1);
    assertEquals((-3457.176), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test23()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("<q+ t*9k6", hashMap0);
    Boolean boolean0 = empresa0.buscaCliente((Cliente) null);
    hashMap0.put((Cliente) null, boolean0);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientesInativos();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test24()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
    assertTrue(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test25()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
    empresa0.removeCliente(cliente0);
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test26()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    String string0 = empresa0.getNome();
    assertNotNull(string0);
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test27()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    empresa0.setNome("TB[E?\"W_wvfU");
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test28()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
    
    empresa0.setCaixa(1.0);
    assertEquals(1.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test29()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 1.5874623117978444, hashMap0);
    double double0 = empresa0.getCaixa();
    assertEquals(1.5874623117978444, double0, 0.01);
}

@Test(timeout = 4000)
public void test30()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Map<Cliente, Boolean> map0 = empresa0.getClientes();
    assertNotNull(map0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}
@Test(timeout = 4000)
public void test00()  throws Throwable  {
    Carteira carteira0 = new Carteira((-650.538551823452), (-650.538551823452), 0.0);
    carteira0.compraNoDebito((-650.538551823452));
    assertEquals((-650.538551823452), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    Carteira carteira0 = new Carteira((-2355.999273853816), 1.0, (-2355.999273853816));
    carteira0.compraSaldo((-2355.999273853816));
    assertEquals((-4711.998547707632), carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 0.0, 0.0);
    double double0 = carteira0.saldoTotal();
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
    assertEquals(0.0, carteira0.getSaldo(), 0.01);
    assertEquals(0.0, double0, 0.01);
    assertEquals(0.0, carteira0.getLimiteCredito(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    Carteira carteira0 = new Carteira((-727.5563483680716), (-3650.3607966822), (-203.95121365749));
    double double0 = carteira0.saldoTotal();
    assertEquals((-4581.868358707762), double0, 0.01);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 1555.1866392665322, 417.7768413161);
    double double0 = carteira0.getSaldo();
    assertEquals(1972.9634805826322, carteira0.saldoTotal(), 0.01);
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    assertEquals(2324.018253662, carteira0.getSaldo(), 0.01);
    
    carteira0.adicionaSaldo((-2215.0));
    double double0 = carteira0.getSaldo();
    assertEquals((-2215.0), double0, 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.combinaSaldo();
    double double0 = carteira0.getLimiteDebito();
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Carteira carteira0 = new Carteira(648.0, 648.0, (-838.3974));
    double double0 = carteira0.getLimiteDebito();
    assertEquals((-838.3974), double0, 0.01);
    assertEquals(457.60260000000005, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 0.0, 0.0);
    double double0 = carteira0.getLimiteCredito();
    assertEquals(0.0, carteira0.getSaldo(), 0.01);
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Carteira carteira0 = new Carteira(6149.5508, 6149.5508, (-2952.19846496588));
    double double0 = carteira0.getLimiteCredito();
    assertEquals(6149.5508, double0, 0.01);
    assertEquals(9346.903135034121, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.setLimiteDebito((-1.0));
    assertEquals((-1.0), carteira0.getLimiteDebito(), 0.01);
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraNoDebito(0.0);
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.compraNoCredito((-2215.0));
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraNoCredito((-1.0));
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.compraSaldo((-922.6779147158));
    assertEquals(1401.3403389462, carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraSaldo(1.0);
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.setLimiteCredito((-736.0631747));
    carteira0.compraNoCredito((-2215.0));
    assertEquals((-2215.0), carteira0.getLimiteCredito(), 0.01);
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getLimiteDebito();
    assertEquals(2324.018253662, double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.combinaSaldo();
    carteira0.compraNoDebito(0.0);
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
}

@Test(timeout = 4000)
public void test19()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.setSaldo((-736.0631747));
    assertEquals((-736.0631747), carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test20()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getSaldo();
    assertEquals(2324.018253662, double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test21()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.saldoTotal();
    assertEquals(2433.036507324, double0, 0.01);
}

@Test(timeout = 4000)
public void test22()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getLimiteCredito();
    assertEquals((-2215.0), double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Cliente cliente0 = new Cliente("0GhM*h<_L", (-158), "0GhM*h<_L", "V");
      cliente0.fone = "WEd";
      cliente0.fone = null;
      String string0 = cliente0.getFone();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Cliente cliente0 = new Cliente("", 0, "", "");
      String string0 = cliente0.getFone();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Cliente cliente0 = new Cliente("Cw$sYN93Xw\"Y'Z", (-1233), "", "d(43f!u\"iA>gw|dWeD");
      String string0 = cliente0.getEmail();
      assertEquals("", string0);
      assertEquals("d(43f!u\"iA>gw|dWeD", cliente0.getFone());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Cliente cliente0 = new Cliente("", 0, "", "");
      Carteira carteira0 = cliente0.getCarteira();
      assertNull(carteira0);
  }

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Cliente cliente0 = new Cliente("example.app.models.Cliente", 2578, "n", "example.app.models.Cliente");
    Carteira carteira0 = new Carteira(0.0, (-1.0), 2578);
    cliente0.carteira = carteira0;
    Carteira carteira1 = new Carteira(2578, 2578, 2578);
    cliente0.carteira = carteira1;
    cliente0.getCarteira();
    assertEquals("n", cliente0.getEmail());
    assertEquals("example.app.models.Cliente", cliente0.getFone());
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Carteira carteira0 = new Carteira((-1), (-1), (-2515.202332146312));
    Cliente cliente0 = new Cliente("X`pJIm%lP4 7c<I", (-1), "X`pJIm%lP4 7c<I", "example.app.models.Cliente", carteira0);
    Carteira carteira1 = cliente0.getCarteira();
    assertEquals("example.app.models.Cliente", cliente0.getFone());
    assertNotNull(carteira1);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    cliente0.setCarteira(carteira0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
    assertEquals("Saldo insuficiente", cliente0.getEmail());
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
    
    cliente0.setFone("sgH,,");
    assertEquals("sgH,,", cliente0.getFone());
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    Carteira carteira1 = cliente0.getCarteira();
    assertNotNull(carteira1);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Cliente cliente0 = new Cliente((String) null, (-1), "", "");
    Carteira carteira0 = new Carteira(0.0, (-1), 191.0);
    cliente0.setCarteira(carteira0);
    assertEquals((-1), cliente0.getIdade());
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    String string0 = cliente0.getEmail();
    assertEquals("Saldo insuficiente", string0);
    assertNotNull(string0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    String string0 = cliente0.getFone();
    assertNotNull(string0);
    assertEquals("c9FBDOj26e9", string0);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
    
    cliente0.setEmail("sgH,,");
    cliente0.getEmail();
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test00()  throws Throwable  {
    Integer integer0 = new Integer(0);
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(1.0);
    Destino destino0 = new Destino("v?AN2Q/CTBc5qq", integer0, climas0, double0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    destino0.setAtracoes(arrayList0);
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    Double double1 = new Double(1);
    destino0.setPreco(double1);
    assertEquals((double)double1, (double)double0, 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    Integer integer0 = new Integer(898);
    Climas climas0 = Climas.AGRADAVEL;
    Double double0 = new Double(241.13417);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("5(`M2SL4][&MS", integer0, climas0, double0, arrayList0);
    destino0.adicionaAtracao("5(`M2SL4][&MS");
    destino0.removeAtracao((-1));
    assertEquals(241.13417, destino0.getPreco(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.VENTANIA;
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("+X<t_<&]", integer0, climas0, (Double) null, arrayList0);
    Double double0 = destino0.getPreco();
    assertNull(double0);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Integer integer0 = new Integer((-488));
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double((-488));
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("example.app.models.Destino", integer0, climas0, double0, arrayList0);
    Double double1 = destino0.getPreco();
    assertEquals((-488.0), (double)double1, 0.01);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Double double0 = new Double(0.0);
    Climas climas0 = Climas.CHUVOSO;
    Destino destino0 = new Destino("wx DbX(+a&Ud7[1Q", (Integer) null, climas0, (Double) null, arrayList0);
    destino0.preco = double0;
    Double double1 = destino0.getPreco();
    assertEquals(0.0, (double)double1, 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Integer integer0 = new Integer((-2376));
    Climas climas0 = Climas.VENTANIA;
    Double double0 = new Double(187.6725);
    Destino destino0 = new Destino((String) null, integer0, climas0, double0);
    Double double1 = destino0.getPreco();
    assertNotNull(double1);
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(0.0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("", (Integer) null, climas0, double0, arrayList0);
    Boolean boolean0 = destino0.getCidadeTuristica();
    assertNull(boolean0);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Integer integer0 = new Integer(662);
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double(0.0);
    Destino destino0 = new Destino((String) null, integer0, climas0, double0);
    assertFalse(destino0.getCidadeTuristica());
    
    Boolean boolean0 = Boolean.valueOf(true);
    destino0.setCidadeTuristica(boolean0);
    destino0.getCidadeTuristica();
    assertTrue(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(2084);
    Destino destino0 = new Destino("/|", (Integer) null, climas0, double0);
    destino0.getAtracoes();
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    destino0.adicionaAtracao((String) null);
    ArrayList<String> arrayList1 = destino0.getAtracoes();
    assertFalse(arrayList1.contains("CHUVOSO"));
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Integer integer0 = new Integer((-1106));
    Climas climas0 = Climas.AGRADAVEL;
    Double double0 = new Double((-982.9847914361264));
    Destino destino0 = new Destino("example.app.models.Cidade", integer0, climas0, double0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao((-635));
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(0.0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("", (Integer) null, climas0, double0, arrayList0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao((-1327));
    fail("Expecting exception: ArrayIndexOutOfBoundsException");
    
    } catch(ArrayIndexOutOfBoundsException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    Integer integer0 = new Integer(5317);
    Climas climas0 = Climas.VENTANIA;
    Double double0 = new Double(5317);
    Destino destino0 = null;
    try {
    destino0 = new Destino("", integer0, climas0, double0, (ArrayList<String>) null);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    ArrayList<String> arrayList0 = new ArrayList<String>();
    arrayList0.add("");
    arrayList0.add((String) null);
    arrayList0.add("");
    arrayList0.add("");
    arrayList0.add("~~LOk|W6");
    arrayList0.add("wx DbX(+a&Ud7[1Q");
    Climas climas0 = Climas.CHUVOSO;
    Destino destino0 = new Destino("wx DbX(+a&Ud7[1Q", (Integer) null, climas0, (Double) null, arrayList0);
    assertTrue(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao(0);
    fail("Expecting exception: IndexOutOfBoundsException");
    
    } catch(IndexOutOfBoundsException e) {
        //
        // Index: 1, Size: 0
        //
        verifyException("java.util.ArrayList", e);
    }
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    ArrayList<String> arrayList1 = destino0.getAtracoes();
    assertSame(arrayList0, arrayList1);
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    Integer integer0 = new Integer((-1592));
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double(0.0);
    Destino destino0 = new Destino("Cd1-v '", integer0, climas0, double0);
    // Undeclared exception!
    try { 
    destino0.adicionaAtracao("");
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(2084);
    Destino destino0 = new Destino("/|", (Integer) null, climas0, double0);
    Boolean boolean0 = destino0.getCidadeTuristica();
    assertFalse(boolean0);
}

@Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
      Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
      Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
      empresa0.adicionaCliente(cliente0);
      ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
      assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
      assertFalse(arrayList0.contains(cliente0));
  }

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("n[>;n,\"oV(UzKEMC.Z", 1285.07203100387, hashMap0);
    Carteira carteira0 = new Carteira(1285.07203100387, 1285.07203100387, 1285.07203100387);
    Cliente cliente0 = new Cliente("n[>;n,\"oV(UzKEMC.Z", 21, "n[>;n,\"oV(UzKEMC.Z", "n[>;n,\"oV(UzKEMC.Z", carteira0);
    Boolean boolean0 = Boolean.valueOf("n[>;n,\"oV(UzKEMC.Z");
    hashMap0.put(cliente0, boolean0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertFalse(arrayList0.contains(cliente0));
    assertEquals(1285.07203100387, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", hashMap0);
    HashMap<Cliente, Boolean> hashMap1 = new HashMap<Cliente, Boolean>(226, 226);
    empresa0.setClientes(hashMap1);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 0.0, hashMap0);
    empresa0.getNome();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", (-1900.3841), hashMap0);
    String string0 = empresa0.getNome();
    assertEquals((-1900.3841), empresa0.getCaixa(), 0.01);
    assertNotNull(string0);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Empresa empresa0 = new Empresa("", (Map<Cliente, Boolean>) null);
    empresa0.getClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    empresa0.adicionaCliente(cliente0);
    empresa0.getClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Empresa empresa0 = new Empresa("uULRcy-", (Map<Cliente, Boolean>) null);
    double double0 = empresa0.getCaixa();
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("P,#G", (-1.0), hashMap0);
    double double0 = empresa0.getCaixa();
    assertEquals((-1.0), double0, 0.01);
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    empresa0.buscaCliente(cliente0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Empresa empresa0 = new Empresa("S", 957.482814242, (Map<Cliente, Boolean>) null);
    Carteira carteira0 = new Carteira(0, 0, 0.0);
    Cliente cliente0 = new Cliente("}YR=,ddq.lk:(HQsj", 0, "3'1)DWuF!7xWhxZn>", "}YR=,ddq.lk:(HQsj", carteira0);
    // Undeclared exception!
    try { 
    empresa0.removeCliente(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", 0.0, hashMap0);
    Boolean boolean0 = new Boolean("example.app.models.Cliente");
    hashMap0.put((Cliente) null, boolean0);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientesAtivos();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Empresa empresa0 = new Empresa("]1)ZWIN|@j=", (-1249.0873), (Map<Cliente, Boolean>) null);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientes();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("`wAnG<PdzOk", hashMap0);
    Carteira carteira0 = new Carteira(0, 4618.8836, 4618.8836);
    Cliente cliente0 = new Cliente("^", 0, "^", "?K", carteira0);
    // Undeclared exception!
    try { 
    empresa0.buscaClienteAtivo(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    Empresa empresa0 = new Empresa("uULRcy-", (Map<Cliente, Boolean>) null);
    Carteira carteira0 = new Carteira(1274.862, 1.0, (-2609.2058285026246));
    Cliente cliente0 = new Cliente("uULRcy-", (-1), "uULRcy-", "uULRcy-", carteira0);
    // Undeclared exception!
    try { 
    empresa0.buscaCliente(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 0.0, hashMap0);
    // Undeclared exception!
    try { 
    empresa0.adicionaCliente((Cliente) null);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 20, "TB[E?\"W_wvfU", "");
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
    assertTrue(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
    assertFalse(arrayList0.contains(cliente0));
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 1.5874623117978444, hashMap0);
    Cliente cliente0 = new Cliente((String) null, (-6), (String) null, (String) null);
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertEquals(1.5874623117978444, empresa0.getCaixa(), 0.01);
    assertFalse(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test19()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("n:^1s:EBM'RLm7", hashMap0);
    Cliente cliente0 = new Cliente("n:^1s:EBM'RLm7", 20, "n:^1s:EBM'RLm7", "n:^1s:EBM'RLm7");
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    empresa0.listaTodosClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test20()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    empresa0.listaTodosClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test21()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    Boolean boolean1 = empresa0.buscaClienteAtivo(cliente0);
    assertTrue(boolean1);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test22()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, (-3457.176), hashMap0);
    Cliente cliente0 = new Cliente((String) null, (-177), (String) null, (String) null);
    Boolean boolean0 = empresa0.buscaCliente(cliente0);
    assertNotNull(boolean0);
    
    hashMap0.put(cliente0, boolean0);
    Boolean boolean1 = empresa0.buscaClienteAtivo(cliente0);
    assertFalse(boolean1);
    assertEquals((-3457.176), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test23()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("<q+ t*9k6", hashMap0);
    Boolean boolean0 = empresa0.buscaCliente((Cliente) null);
    hashMap0.put((Cliente) null, boolean0);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientesInativos();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test24()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
    assertTrue(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test25()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
    empresa0.removeCliente(cliente0);
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test26()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    String string0 = empresa0.getNome();
    assertNotNull(string0);
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test27()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    empresa0.setNome("TB[E?\"W_wvfU");
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test28()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
    
    empresa0.setCaixa(1.0);
    assertEquals(1.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test29()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 1.5874623117978444, hashMap0);
    double double0 = empresa0.getCaixa();
    assertEquals(1.5874623117978444, double0, 0.01);
}

@Test(timeout = 4000)
public void test30()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Map<Cliente, Boolean> map0 = empresa0.getClientes();
    assertNotNull(map0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}
@Test(timeout = 4000)
public void test00()  throws Throwable  {
    Carteira carteira0 = new Carteira((-650.538551823452), (-650.538551823452), 0.0);
    carteira0.compraNoDebito((-650.538551823452));
    assertEquals((-650.538551823452), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    Carteira carteira0 = new Carteira((-2355.999273853816), 1.0, (-2355.999273853816));
    carteira0.compraSaldo((-2355.999273853816));
    assertEquals((-4711.998547707632), carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 0.0, 0.0);
    double double0 = carteira0.saldoTotal();
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
    assertEquals(0.0, carteira0.getSaldo(), 0.01);
    assertEquals(0.0, double0, 0.01);
    assertEquals(0.0, carteira0.getLimiteCredito(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    Carteira carteira0 = new Carteira((-727.5563483680716), (-3650.3607966822), (-203.95121365749));
    double double0 = carteira0.saldoTotal();
    assertEquals((-4581.868358707762), double0, 0.01);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 1555.1866392665322, 417.7768413161);
    double double0 = carteira0.getSaldo();
    assertEquals(1972.9634805826322, carteira0.saldoTotal(), 0.01);
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    assertEquals(2324.018253662, carteira0.getSaldo(), 0.01);
    
    carteira0.adicionaSaldo((-2215.0));
    double double0 = carteira0.getSaldo();
    assertEquals((-2215.0), double0, 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.combinaSaldo();
    double double0 = carteira0.getLimiteDebito();
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Carteira carteira0 = new Carteira(648.0, 648.0, (-838.3974));
    double double0 = carteira0.getLimiteDebito();
    assertEquals((-838.3974), double0, 0.01);
    assertEquals(457.60260000000005, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 0.0, 0.0);
    double double0 = carteira0.getLimiteCredito();
    assertEquals(0.0, carteira0.getSaldo(), 0.01);
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Carteira carteira0 = new Carteira(6149.5508, 6149.5508, (-2952.19846496588));
    double double0 = carteira0.getLimiteCredito();
    assertEquals(6149.5508, double0, 0.01);
    assertEquals(9346.903135034121, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.setLimiteDebito((-1.0));
    assertEquals((-1.0), carteira0.getLimiteDebito(), 0.01);
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraNoDebito(0.0);
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.compraNoCredito((-2215.0));
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraNoCredito((-1.0));
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.compraSaldo((-922.6779147158));
    assertEquals(1401.3403389462, carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraSaldo(1.0);
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.setLimiteCredito((-736.0631747));
    carteira0.compraNoCredito((-2215.0));
    assertEquals((-2215.0), carteira0.getLimiteCredito(), 0.01);
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getLimiteDebito();
    assertEquals(2324.018253662, double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.combinaSaldo();
    carteira0.compraNoDebito(0.0);
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
}

@Test(timeout = 4000)
public void test19()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.setSaldo((-736.0631747));
    assertEquals((-736.0631747), carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test20()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getSaldo();
    assertEquals(2324.018253662, double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test21()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.saldoTotal();
    assertEquals(2433.036507324, double0, 0.01);
}

@Test(timeout = 4000)
public void test22()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getLimiteCredito();
    assertEquals((-2215.0), double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Cliente cliente0 = new Cliente("0GhM*h<_L", (-158), "0GhM*h<_L", "V");
      cliente0.fone = "WEd";
      cliente0.fone = null;
      String string0 = cliente0.getFone();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Cliente cliente0 = new Cliente("", 0, "", "");
      String string0 = cliente0.getFone();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Cliente cliente0 = new Cliente("Cw$sYN93Xw\"Y'Z", (-1233), "", "d(43f!u\"iA>gw|dWeD");
      String string0 = cliente0.getEmail();
      assertEquals("", string0);
      assertEquals("d(43f!u\"iA>gw|dWeD", cliente0.getFone());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Cliente cliente0 = new Cliente("", 0, "", "");
      Carteira carteira0 = cliente0.getCarteira();
      assertNull(carteira0);
  }

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Cliente cliente0 = new Cliente("example.app.models.Cliente", 2578, "n", "example.app.models.Cliente");
    Carteira carteira0 = new Carteira(0.0, (-1.0), 2578);
    cliente0.carteira = carteira0;
    Carteira carteira1 = new Carteira(2578, 2578, 2578);
    cliente0.carteira = carteira1;
    cliente0.getCarteira();
    assertEquals("n", cliente0.getEmail());
    assertEquals("example.app.models.Cliente", cliente0.getFone());
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Carteira carteira0 = new Carteira((-1), (-1), (-2515.202332146312));
    Cliente cliente0 = new Cliente("X`pJIm%lP4 7c<I", (-1), "X`pJIm%lP4 7c<I", "example.app.models.Cliente", carteira0);
    Carteira carteira1 = cliente0.getCarteira();
    assertEquals("example.app.models.Cliente", cliente0.getFone());
    assertNotNull(carteira1);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    cliente0.setCarteira(carteira0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
    assertEquals("Saldo insuficiente", cliente0.getEmail());
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
    
    cliente0.setFone("sgH,,");
    assertEquals("sgH,,", cliente0.getFone());
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    Carteira carteira1 = cliente0.getCarteira();
    assertNotNull(carteira1);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Cliente cliente0 = new Cliente((String) null, (-1), "", "");
    Carteira carteira0 = new Carteira(0.0, (-1), 191.0);
    cliente0.setCarteira(carteira0);
    assertEquals((-1), cliente0.getIdade());
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    String string0 = cliente0.getEmail();
    assertEquals("Saldo insuficiente", string0);
    assertNotNull(string0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    String string0 = cliente0.getFone();
    assertNotNull(string0);
    assertEquals("c9FBDOj26e9", string0);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
    
    cliente0.setEmail("sgH,,");
    cliente0.getEmail();
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test00()  throws Throwable  {
    Integer integer0 = new Integer(0);
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(1.0);
    Destino destino0 = new Destino("v?AN2Q/CTBc5qq", integer0, climas0, double0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    destino0.setAtracoes(arrayList0);
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    Double double1 = new Double(1);
    destino0.setPreco(double1);
    assertEquals((double)double1, (double)double0, 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    Integer integer0 = new Integer(898);
    Climas climas0 = Climas.AGRADAVEL;
    Double double0 = new Double(241.13417);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("5(`M2SL4][&MS", integer0, climas0, double0, arrayList0);
    destino0.adicionaAtracao("5(`M2SL4][&MS");
    destino0.removeAtracao((-1));
    assertEquals(241.13417, destino0.getPreco(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.VENTANIA;
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("+X<t_<&]", integer0, climas0, (Double) null, arrayList0);
    Double double0 = destino0.getPreco();
    assertNull(double0);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Integer integer0 = new Integer((-488));
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double((-488));
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("example.app.models.Destino", integer0, climas0, double0, arrayList0);
    Double double1 = destino0.getPreco();
    assertEquals((-488.0), (double)double1, 0.01);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Double double0 = new Double(0.0);
    Climas climas0 = Climas.CHUVOSO;
    Destino destino0 = new Destino("wx DbX(+a&Ud7[1Q", (Integer) null, climas0, (Double) null, arrayList0);
    destino0.preco = double0;
    Double double1 = destino0.getPreco();
    assertEquals(0.0, (double)double1, 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Integer integer0 = new Integer((-2376));
    Climas climas0 = Climas.VENTANIA;
    Double double0 = new Double(187.6725);
    Destino destino0 = new Destino((String) null, integer0, climas0, double0);
    Double double1 = destino0.getPreco();
    assertNotNull(double1);
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(0.0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("", (Integer) null, climas0, double0, arrayList0);
    Boolean boolean0 = destino0.getCidadeTuristica();
    assertNull(boolean0);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Integer integer0 = new Integer(662);
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double(0.0);
    Destino destino0 = new Destino((String) null, integer0, climas0, double0);
    assertFalse(destino0.getCidadeTuristica());
    
    Boolean boolean0 = Boolean.valueOf(true);
    destino0.setCidadeTuristica(boolean0);
    destino0.getCidadeTuristica();
    assertTrue(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(2084);
    Destino destino0 = new Destino("/|", (Integer) null, climas0, double0);
    destino0.getAtracoes();
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    destino0.adicionaAtracao((String) null);
    ArrayList<String> arrayList1 = destino0.getAtracoes();
    assertFalse(arrayList1.contains("CHUVOSO"));
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Integer integer0 = new Integer((-1106));
    Climas climas0 = Climas.AGRADAVEL;
    Double double0 = new Double((-982.9847914361264));
    Destino destino0 = new Destino("example.app.models.Cidade", integer0, climas0, double0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao((-635));
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(0.0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("", (Integer) null, climas0, double0, arrayList0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao((-1327));
    fail("Expecting exception: ArrayIndexOutOfBoundsException");
    
    } catch(ArrayIndexOutOfBoundsException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    Integer integer0 = new Integer(5317);
    Climas climas0 = Climas.VENTANIA;
    Double double0 = new Double(5317);
    Destino destino0 = null;
    try {
    destino0 = new Destino("", integer0, climas0, double0, (ArrayList<String>) null);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    ArrayList<String> arrayList0 = new ArrayList<String>();
    arrayList0.add("");
    arrayList0.add((String) null);
    arrayList0.add("");
    arrayList0.add("");
    arrayList0.add("~~LOk|W6");
    arrayList0.add("wx DbX(+a&Ud7[1Q");
    Climas climas0 = Climas.CHUVOSO;
    Destino destino0 = new Destino("wx DbX(+a&Ud7[1Q", (Integer) null, climas0, (Double) null, arrayList0);
    assertTrue(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao(0);
    fail("Expecting exception: IndexOutOfBoundsException");
    
    } catch(IndexOutOfBoundsException e) {
        //
        // Index: 1, Size: 0
        //
        verifyException("java.util.ArrayList", e);
    }
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    ArrayList<String> arrayList1 = destino0.getAtracoes();
    assertSame(arrayList0, arrayList1);
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    Integer integer0 = new Integer((-1592));
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double(0.0);
    Destino destino0 = new Destino("Cd1-v '", integer0, climas0, double0);
    // Undeclared exception!
    try { 
    destino0.adicionaAtracao("");
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(2084);
    Destino destino0 = new Destino("/|", (Integer) null, climas0, double0);
    Boolean boolean0 = destino0.getCidadeTuristica();
    assertFalse(boolean0);
}

@Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
      Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
      Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
      empresa0.adicionaCliente(cliente0);
      ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
      assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
      assertFalse(arrayList0.contains(cliente0));
  }

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("n[>;n,\"oV(UzKEMC.Z", 1285.07203100387, hashMap0);
    Carteira carteira0 = new Carteira(1285.07203100387, 1285.07203100387, 1285.07203100387);
    Cliente cliente0 = new Cliente("n[>;n,\"oV(UzKEMC.Z", 21, "n[>;n,\"oV(UzKEMC.Z", "n[>;n,\"oV(UzKEMC.Z", carteira0);
    Boolean boolean0 = Boolean.valueOf("n[>;n,\"oV(UzKEMC.Z");
    hashMap0.put(cliente0, boolean0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertFalse(arrayList0.contains(cliente0));
    assertEquals(1285.07203100387, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", hashMap0);
    HashMap<Cliente, Boolean> hashMap1 = new HashMap<Cliente, Boolean>(226, 226);
    empresa0.setClientes(hashMap1);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 0.0, hashMap0);
    empresa0.getNome();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", (-1900.3841), hashMap0);
    String string0 = empresa0.getNome();
    assertEquals((-1900.3841), empresa0.getCaixa(), 0.01);
    assertNotNull(string0);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Empresa empresa0 = new Empresa("", (Map<Cliente, Boolean>) null);
    empresa0.getClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    empresa0.adicionaCliente(cliente0);
    empresa0.getClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Empresa empresa0 = new Empresa("uULRcy-", (Map<Cliente, Boolean>) null);
    double double0 = empresa0.getCaixa();
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("P,#G", (-1.0), hashMap0);
    double double0 = empresa0.getCaixa();
    assertEquals((-1.0), double0, 0.01);
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    empresa0.buscaCliente(cliente0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Empresa empresa0 = new Empresa("S", 957.482814242, (Map<Cliente, Boolean>) null);
    Carteira carteira0 = new Carteira(0, 0, 0.0);
    Cliente cliente0 = new Cliente("}YR=,ddq.lk:(HQsj", 0, "3'1)DWuF!7xWhxZn>", "}YR=,ddq.lk:(HQsj", carteira0);
    // Undeclared exception!
    try { 
    empresa0.removeCliente(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", 0.0, hashMap0);
    Boolean boolean0 = new Boolean("example.app.models.Cliente");
    hashMap0.put((Cliente) null, boolean0);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientesAtivos();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Empresa empresa0 = new Empresa("]1)ZWIN|@j=", (-1249.0873), (Map<Cliente, Boolean>) null);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientes();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("`wAnG<PdzOk", hashMap0);
    Carteira carteira0 = new Carteira(0, 4618.8836, 4618.8836);
    Cliente cliente0 = new Cliente("^", 0, "^", "?K", carteira0);
    // Undeclared exception!
    try { 
    empresa0.buscaClienteAtivo(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    Empresa empresa0 = new Empresa("uULRcy-", (Map<Cliente, Boolean>) null);
    Carteira carteira0 = new Carteira(1274.862, 1.0, (-2609.2058285026246));
    Cliente cliente0 = new Cliente("uULRcy-", (-1), "uULRcy-", "uULRcy-", carteira0);
    // Undeclared exception!
    try { 
    empresa0.buscaCliente(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 0.0, hashMap0);
    // Undeclared exception!
    try { 
    empresa0.adicionaCliente((Cliente) null);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 20, "TB[E?\"W_wvfU", "");
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
    assertTrue(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
    assertFalse(arrayList0.contains(cliente0));
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 1.5874623117978444, hashMap0);
    Cliente cliente0 = new Cliente((String) null, (-6), (String) null, (String) null);
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertEquals(1.5874623117978444, empresa0.getCaixa(), 0.01);
    assertFalse(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test19()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("n:^1s:EBM'RLm7", hashMap0);
    Cliente cliente0 = new Cliente("n:^1s:EBM'RLm7", 20, "n:^1s:EBM'RLm7", "n:^1s:EBM'RLm7");
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    empresa0.listaTodosClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test20()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    empresa0.listaTodosClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test21()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    Boolean boolean1 = empresa0.buscaClienteAtivo(cliente0);
    assertTrue(boolean1);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test22()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, (-3457.176), hashMap0);
    Cliente cliente0 = new Cliente((String) null, (-177), (String) null, (String) null);
    Boolean boolean0 = empresa0.buscaCliente(cliente0);
    assertNotNull(boolean0);
    
    hashMap0.put(cliente0, boolean0);
    Boolean boolean1 = empresa0.buscaClienteAtivo(cliente0);
    assertFalse(boolean1);
    assertEquals((-3457.176), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test23()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("<q+ t*9k6", hashMap0);
    Boolean boolean0 = empresa0.buscaCliente((Cliente) null);
    hashMap0.put((Cliente) null, boolean0);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientesInativos();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test24()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
    assertTrue(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test25()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
    empresa0.removeCliente(cliente0);
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test26()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    String string0 = empresa0.getNome();
    assertNotNull(string0);
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test27()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    empresa0.setNome("TB[E?\"W_wvfU");
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test28()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
    
    empresa0.setCaixa(1.0);
    assertEquals(1.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test29()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 1.5874623117978444, hashMap0);
    double double0 = empresa0.getCaixa();
    assertEquals(1.5874623117978444, double0, 0.01);
}

@Test(timeout = 4000)
public void test30()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Map<Cliente, Boolean> map0 = empresa0.getClientes();
    assertNotNull(map0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}
@Test(timeout = 4000)
public void test00()  throws Throwable  {
    Carteira carteira0 = new Carteira((-650.538551823452), (-650.538551823452), 0.0);
    carteira0.compraNoDebito((-650.538551823452));
    assertEquals((-650.538551823452), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    Carteira carteira0 = new Carteira((-2355.999273853816), 1.0, (-2355.999273853816));
    carteira0.compraSaldo((-2355.999273853816));
    assertEquals((-4711.998547707632), carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 0.0, 0.0);
    double double0 = carteira0.saldoTotal();
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
    assertEquals(0.0, carteira0.getSaldo(), 0.01);
    assertEquals(0.0, double0, 0.01);
    assertEquals(0.0, carteira0.getLimiteCredito(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    Carteira carteira0 = new Carteira((-727.5563483680716), (-3650.3607966822), (-203.95121365749));
    double double0 = carteira0.saldoTotal();
    assertEquals((-4581.868358707762), double0, 0.01);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 1555.1866392665322, 417.7768413161);
    double double0 = carteira0.getSaldo();
    assertEquals(1972.9634805826322, carteira0.saldoTotal(), 0.01);
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    assertEquals(2324.018253662, carteira0.getSaldo(), 0.01);
    
    carteira0.adicionaSaldo((-2215.0));
    double double0 = carteira0.getSaldo();
    assertEquals((-2215.0), double0, 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.combinaSaldo();
    double double0 = carteira0.getLimiteDebito();
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Carteira carteira0 = new Carteira(648.0, 648.0, (-838.3974));
    double double0 = carteira0.getLimiteDebito();
    assertEquals((-838.3974), double0, 0.01);
    assertEquals(457.60260000000005, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 0.0, 0.0);
    double double0 = carteira0.getLimiteCredito();
    assertEquals(0.0, carteira0.getSaldo(), 0.01);
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Carteira carteira0 = new Carteira(6149.5508, 6149.5508, (-2952.19846496588));
    double double0 = carteira0.getLimiteCredito();
    assertEquals(6149.5508, double0, 0.01);
    assertEquals(9346.903135034121, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.setLimiteDebito((-1.0));
    assertEquals((-1.0), carteira0.getLimiteDebito(), 0.01);
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraNoDebito(0.0);
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.compraNoCredito((-2215.0));
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraNoCredito((-1.0));
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.compraSaldo((-922.6779147158));
    assertEquals(1401.3403389462, carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraSaldo(1.0);
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.setLimiteCredito((-736.0631747));
    carteira0.compraNoCredito((-2215.0));
    assertEquals((-2215.0), carteira0.getLimiteCredito(), 0.01);
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getLimiteDebito();
    assertEquals(2324.018253662, double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.combinaSaldo();
    carteira0.compraNoDebito(0.0);
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
}

@Test(timeout = 4000)
public void test19()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.setSaldo((-736.0631747));
    assertEquals((-736.0631747), carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test20()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getSaldo();
    assertEquals(2324.018253662, double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test21()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.saldoTotal();
    assertEquals(2433.036507324, double0, 0.01);
}

@Test(timeout = 4000)
public void test22()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getLimiteCredito();
    assertEquals((-2215.0), double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Cliente cliente0 = new Cliente("0GhM*h<_L", (-158), "0GhM*h<_L", "V");
      cliente0.fone = "WEd";
      cliente0.fone = null;
      String string0 = cliente0.getFone();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Cliente cliente0 = new Cliente("", 0, "", "");
      String string0 = cliente0.getFone();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Cliente cliente0 = new Cliente("Cw$sYN93Xw\"Y'Z", (-1233), "", "d(43f!u\"iA>gw|dWeD");
      String string0 = cliente0.getEmail();
      assertEquals("", string0);
      assertEquals("d(43f!u\"iA>gw|dWeD", cliente0.getFone());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Cliente cliente0 = new Cliente("", 0, "", "");
      Carteira carteira0 = cliente0.getCarteira();
      assertNull(carteira0);
  }

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Cliente cliente0 = new Cliente("example.app.models.Cliente", 2578, "n", "example.app.models.Cliente");
    Carteira carteira0 = new Carteira(0.0, (-1.0), 2578);
    cliente0.carteira = carteira0;
    Carteira carteira1 = new Carteira(2578, 2578, 2578);
    cliente0.carteira = carteira1;
    cliente0.getCarteira();
    assertEquals("n", cliente0.getEmail());
    assertEquals("example.app.models.Cliente", cliente0.getFone());
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Carteira carteira0 = new Carteira((-1), (-1), (-2515.202332146312));
    Cliente cliente0 = new Cliente("X`pJIm%lP4 7c<I", (-1), "X`pJIm%lP4 7c<I", "example.app.models.Cliente", carteira0);
    Carteira carteira1 = cliente0.getCarteira();
    assertEquals("example.app.models.Cliente", cliente0.getFone());
    assertNotNull(carteira1);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    cliente0.setCarteira(carteira0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
    assertEquals("Saldo insuficiente", cliente0.getEmail());
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
    
    cliente0.setFone("sgH,,");
    assertEquals("sgH,,", cliente0.getFone());
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    Carteira carteira1 = cliente0.getCarteira();
    assertNotNull(carteira1);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Cliente cliente0 = new Cliente((String) null, (-1), "", "");
    Carteira carteira0 = new Carteira(0.0, (-1), 191.0);
    cliente0.setCarteira(carteira0);
    assertEquals((-1), cliente0.getIdade());
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    String string0 = cliente0.getEmail();
    assertEquals("Saldo insuficiente", string0);
    assertNotNull(string0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    String string0 = cliente0.getFone();
    assertNotNull(string0);
    assertEquals("c9FBDOj26e9", string0);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
    
    cliente0.setEmail("sgH,,");
    cliente0.getEmail();
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test00()  throws Throwable  {
    Integer integer0 = new Integer(0);
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(1.0);
    Destino destino0 = new Destino("v?AN2Q/CTBc5qq", integer0, climas0, double0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    destino0.setAtracoes(arrayList0);
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    Double double1 = new Double(1);
    destino0.setPreco(double1);
    assertEquals((double)double1, (double)double0, 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    Integer integer0 = new Integer(898);
    Climas climas0 = Climas.AGRADAVEL;
    Double double0 = new Double(241.13417);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("5(`M2SL4][&MS", integer0, climas0, double0, arrayList0);
    destino0.adicionaAtracao("5(`M2SL4][&MS");
    destino0.removeAtracao((-1));
    assertEquals(241.13417, destino0.getPreco(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.VENTANIA;
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("+X<t_<&]", integer0, climas0, (Double) null, arrayList0);
    Double double0 = destino0.getPreco();
    assertNull(double0);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Integer integer0 = new Integer((-488));
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double((-488));
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("example.app.models.Destino", integer0, climas0, double0, arrayList0);
    Double double1 = destino0.getPreco();
    assertEquals((-488.0), (double)double1, 0.01);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Double double0 = new Double(0.0);
    Climas climas0 = Climas.CHUVOSO;
    Destino destino0 = new Destino("wx DbX(+a&Ud7[1Q", (Integer) null, climas0, (Double) null, arrayList0);
    destino0.preco = double0;
    Double double1 = destino0.getPreco();
    assertEquals(0.0, (double)double1, 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Integer integer0 = new Integer((-2376));
    Climas climas0 = Climas.VENTANIA;
    Double double0 = new Double(187.6725);
    Destino destino0 = new Destino((String) null, integer0, climas0, double0);
    Double double1 = destino0.getPreco();
    assertNotNull(double1);
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(0.0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("", (Integer) null, climas0, double0, arrayList0);
    Boolean boolean0 = destino0.getCidadeTuristica();
    assertNull(boolean0);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Integer integer0 = new Integer(662);
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double(0.0);
    Destino destino0 = new Destino((String) null, integer0, climas0, double0);
    assertFalse(destino0.getCidadeTuristica());
    
    Boolean boolean0 = Boolean.valueOf(true);
    destino0.setCidadeTuristica(boolean0);
    destino0.getCidadeTuristica();
    assertTrue(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(2084);
    Destino destino0 = new Destino("/|", (Integer) null, climas0, double0);
    destino0.getAtracoes();
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    destino0.adicionaAtracao((String) null);
    ArrayList<String> arrayList1 = destino0.getAtracoes();
    assertFalse(arrayList1.contains("CHUVOSO"));
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Integer integer0 = new Integer((-1106));
    Climas climas0 = Climas.AGRADAVEL;
    Double double0 = new Double((-982.9847914361264));
    Destino destino0 = new Destino("example.app.models.Cidade", integer0, climas0, double0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao((-635));
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(0.0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("", (Integer) null, climas0, double0, arrayList0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao((-1327));
    fail("Expecting exception: ArrayIndexOutOfBoundsException");
    
    } catch(ArrayIndexOutOfBoundsException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    Integer integer0 = new Integer(5317);
    Climas climas0 = Climas.VENTANIA;
    Double double0 = new Double(5317);
    Destino destino0 = null;
    try {
    destino0 = new Destino("", integer0, climas0, double0, (ArrayList<String>) null);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    ArrayList<String> arrayList0 = new ArrayList<String>();
    arrayList0.add("");
    arrayList0.add((String) null);
    arrayList0.add("");
    arrayList0.add("");
    arrayList0.add("~~LOk|W6");
    arrayList0.add("wx DbX(+a&Ud7[1Q");
    Climas climas0 = Climas.CHUVOSO;
    Destino destino0 = new Destino("wx DbX(+a&Ud7[1Q", (Integer) null, climas0, (Double) null, arrayList0);
    assertTrue(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao(0);
    fail("Expecting exception: IndexOutOfBoundsException");
    
    } catch(IndexOutOfBoundsException e) {
        //
        // Index: 1, Size: 0
        //
        verifyException("java.util.ArrayList", e);
    }
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    ArrayList<String> arrayList1 = destino0.getAtracoes();
    assertSame(arrayList0, arrayList1);
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    Integer integer0 = new Integer((-1592));
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double(0.0);
    Destino destino0 = new Destino("Cd1-v '", integer0, climas0, double0);
    // Undeclared exception!
    try { 
    destino0.adicionaAtracao("");
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(2084);
    Destino destino0 = new Destino("/|", (Integer) null, climas0, double0);
    Boolean boolean0 = destino0.getCidadeTuristica();
    assertFalse(boolean0);
}

@Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
      Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
      Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
      empresa0.adicionaCliente(cliente0);
      ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
      assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
      assertFalse(arrayList0.contains(cliente0));
  }

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("n[>;n,\"oV(UzKEMC.Z", 1285.07203100387, hashMap0);
    Carteira carteira0 = new Carteira(1285.07203100387, 1285.07203100387, 1285.07203100387);
    Cliente cliente0 = new Cliente("n[>;n,\"oV(UzKEMC.Z", 21, "n[>;n,\"oV(UzKEMC.Z", "n[>;n,\"oV(UzKEMC.Z", carteira0);
    Boolean boolean0 = Boolean.valueOf("n[>;n,\"oV(UzKEMC.Z");
    hashMap0.put(cliente0, boolean0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertFalse(arrayList0.contains(cliente0));
    assertEquals(1285.07203100387, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", hashMap0);
    HashMap<Cliente, Boolean> hashMap1 = new HashMap<Cliente, Boolean>(226, 226);
    empresa0.setClientes(hashMap1);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 0.0, hashMap0);
    empresa0.getNome();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", (-1900.3841), hashMap0);
    String string0 = empresa0.getNome();
    assertEquals((-1900.3841), empresa0.getCaixa(), 0.01);
    assertNotNull(string0);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Empresa empresa0 = new Empresa("", (Map<Cliente, Boolean>) null);
    empresa0.getClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    empresa0.adicionaCliente(cliente0);
    empresa0.getClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Empresa empresa0 = new Empresa("uULRcy-", (Map<Cliente, Boolean>) null);
    double double0 = empresa0.getCaixa();
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("P,#G", (-1.0), hashMap0);
    double double0 = empresa0.getCaixa();
    assertEquals((-1.0), double0, 0.01);
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    empresa0.buscaCliente(cliente0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Empresa empresa0 = new Empresa("S", 957.482814242, (Map<Cliente, Boolean>) null);
    Carteira carteira0 = new Carteira(0, 0, 0.0);
    Cliente cliente0 = new Cliente("}YR=,ddq.lk:(HQsj", 0, "3'1)DWuF!7xWhxZn>", "}YR=,ddq.lk:(HQsj", carteira0);
    // Undeclared exception!
    try { 
    empresa0.removeCliente(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", 0.0, hashMap0);
    Boolean boolean0 = new Boolean("example.app.models.Cliente");
    hashMap0.put((Cliente) null, boolean0);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientesAtivos();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Empresa empresa0 = new Empresa("]1)ZWIN|@j=", (-1249.0873), (Map<Cliente, Boolean>) null);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientes();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("`wAnG<PdzOk", hashMap0);
    Carteira carteira0 = new Carteira(0, 4618.8836, 4618.8836);
    Cliente cliente0 = new Cliente("^", 0, "^", "?K", carteira0);
    // Undeclared exception!
    try { 
    empresa0.buscaClienteAtivo(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    Empresa empresa0 = new Empresa("uULRcy-", (Map<Cliente, Boolean>) null);
    Carteira carteira0 = new Carteira(1274.862, 1.0, (-2609.2058285026246));
    Cliente cliente0 = new Cliente("uULRcy-", (-1), "uULRcy-", "uULRcy-", carteira0);
    // Undeclared exception!
    try { 
    empresa0.buscaCliente(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 0.0, hashMap0);
    // Undeclared exception!
    try { 
    empresa0.adicionaCliente((Cliente) null);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 20, "TB[E?\"W_wvfU", "");
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
    assertTrue(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
    assertFalse(arrayList0.contains(cliente0));
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 1.5874623117978444, hashMap0);
    Cliente cliente0 = new Cliente((String) null, (-6), (String) null, (String) null);
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertEquals(1.5874623117978444, empresa0.getCaixa(), 0.01);
    assertFalse(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test19()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("n:^1s:EBM'RLm7", hashMap0);
    Cliente cliente0 = new Cliente("n:^1s:EBM'RLm7", 20, "n:^1s:EBM'RLm7", "n:^1s:EBM'RLm7");
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    empresa0.listaTodosClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test20()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    empresa0.listaTodosClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test21()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    Boolean boolean1 = empresa0.buscaClienteAtivo(cliente0);
    assertTrue(boolean1);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test22()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, (-3457.176), hashMap0);
    Cliente cliente0 = new Cliente((String) null, (-177), (String) null, (String) null);
    Boolean boolean0 = empresa0.buscaCliente(cliente0);
    assertNotNull(boolean0);
    
    hashMap0.put(cliente0, boolean0);
    Boolean boolean1 = empresa0.buscaClienteAtivo(cliente0);
    assertFalse(boolean1);
    assertEquals((-3457.176), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test23()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("<q+ t*9k6", hashMap0);
    Boolean boolean0 = empresa0.buscaCliente((Cliente) null);
    hashMap0.put((Cliente) null, boolean0);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientesInativos();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test24()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
    assertTrue(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test25()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
    empresa0.removeCliente(cliente0);
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test26()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    String string0 = empresa0.getNome();
    assertNotNull(string0);
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test27()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    empresa0.setNome("TB[E?\"W_wvfU");
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test28()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
    
    empresa0.setCaixa(1.0);
    assertEquals(1.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test29()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 1.5874623117978444, hashMap0);
    double double0 = empresa0.getCaixa();
    assertEquals(1.5874623117978444, double0, 0.01);
}

@Test(timeout = 4000)
public void test30()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Map<Cliente, Boolean> map0 = empresa0.getClientes();
    assertNotNull(map0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}
@Test(timeout = 4000)
public void test00()  throws Throwable  {
    Carteira carteira0 = new Carteira((-650.538551823452), (-650.538551823452), 0.0);
    carteira0.compraNoDebito((-650.538551823452));
    assertEquals((-650.538551823452), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    Carteira carteira0 = new Carteira((-2355.999273853816), 1.0, (-2355.999273853816));
    carteira0.compraSaldo((-2355.999273853816));
    assertEquals((-4711.998547707632), carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 0.0, 0.0);
    double double0 = carteira0.saldoTotal();
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
    assertEquals(0.0, carteira0.getSaldo(), 0.01);
    assertEquals(0.0, double0, 0.01);
    assertEquals(0.0, carteira0.getLimiteCredito(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    Carteira carteira0 = new Carteira((-727.5563483680716), (-3650.3607966822), (-203.95121365749));
    double double0 = carteira0.saldoTotal();
    assertEquals((-4581.868358707762), double0, 0.01);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 1555.1866392665322, 417.7768413161);
    double double0 = carteira0.getSaldo();
    assertEquals(1972.9634805826322, carteira0.saldoTotal(), 0.01);
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    assertEquals(2324.018253662, carteira0.getSaldo(), 0.01);
    
    carteira0.adicionaSaldo((-2215.0));
    double double0 = carteira0.getSaldo();
    assertEquals((-2215.0), double0, 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.combinaSaldo();
    double double0 = carteira0.getLimiteDebito();
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Carteira carteira0 = new Carteira(648.0, 648.0, (-838.3974));
    double double0 = carteira0.getLimiteDebito();
    assertEquals((-838.3974), double0, 0.01);
    assertEquals(457.60260000000005, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 0.0, 0.0);
    double double0 = carteira0.getLimiteCredito();
    assertEquals(0.0, carteira0.getSaldo(), 0.01);
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Carteira carteira0 = new Carteira(6149.5508, 6149.5508, (-2952.19846496588));
    double double0 = carteira0.getLimiteCredito();
    assertEquals(6149.5508, double0, 0.01);
    assertEquals(9346.903135034121, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.setLimiteDebito((-1.0));
    assertEquals((-1.0), carteira0.getLimiteDebito(), 0.01);
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraNoDebito(0.0);
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.compraNoCredito((-2215.0));
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraNoCredito((-1.0));
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.compraSaldo((-922.6779147158));
    assertEquals(1401.3403389462, carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraSaldo(1.0);
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.setLimiteCredito((-736.0631747));
    carteira0.compraNoCredito((-2215.0));
    assertEquals((-2215.0), carteira0.getLimiteCredito(), 0.01);
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getLimiteDebito();
    assertEquals(2324.018253662, double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.combinaSaldo();
    carteira0.compraNoDebito(0.0);
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
}

@Test(timeout = 4000)
public void test19()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.setSaldo((-736.0631747));
    assertEquals((-736.0631747), carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test20()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getSaldo();
    assertEquals(2324.018253662, double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test21()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.saldoTotal();
    assertEquals(2433.036507324, double0, 0.01);
}

@Test(timeout = 4000)
public void test22()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getLimiteCredito();
    assertEquals((-2215.0), double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Cliente cliente0 = new Cliente("0GhM*h<_L", (-158), "0GhM*h<_L", "V");
      cliente0.fone = "WEd";
      cliente0.fone = null;
      String string0 = cliente0.getFone();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Cliente cliente0 = new Cliente("", 0, "", "");
      String string0 = cliente0.getFone();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Cliente cliente0 = new Cliente("Cw$sYN93Xw\"Y'Z", (-1233), "", "d(43f!u\"iA>gw|dWeD");
      String string0 = cliente0.getEmail();
      assertEquals("", string0);
      assertEquals("d(43f!u\"iA>gw|dWeD", cliente0.getFone());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Cliente cliente0 = new Cliente("", 0, "", "");
      Carteira carteira0 = cliente0.getCarteira();
      assertNull(carteira0);
  }

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Cliente cliente0 = new Cliente("example.app.models.Cliente", 2578, "n", "example.app.models.Cliente");
    Carteira carteira0 = new Carteira(0.0, (-1.0), 2578);
    cliente0.carteira = carteira0;
    Carteira carteira1 = new Carteira(2578, 2578, 2578);
    cliente0.carteira = carteira1;
    cliente0.getCarteira();
    assertEquals("n", cliente0.getEmail());
    assertEquals("example.app.models.Cliente", cliente0.getFone());
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Carteira carteira0 = new Carteira((-1), (-1), (-2515.202332146312));
    Cliente cliente0 = new Cliente("X`pJIm%lP4 7c<I", (-1), "X`pJIm%lP4 7c<I", "example.app.models.Cliente", carteira0);
    Carteira carteira1 = cliente0.getCarteira();
    assertEquals("example.app.models.Cliente", cliente0.getFone());
    assertNotNull(carteira1);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    cliente0.setCarteira(carteira0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
    assertEquals("Saldo insuficiente", cliente0.getEmail());
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
    
    cliente0.setFone("sgH,,");
    assertEquals("sgH,,", cliente0.getFone());
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    Carteira carteira1 = cliente0.getCarteira();
    assertNotNull(carteira1);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Cliente cliente0 = new Cliente((String) null, (-1), "", "");
    Carteira carteira0 = new Carteira(0.0, (-1), 191.0);
    cliente0.setCarteira(carteira0);
    assertEquals((-1), cliente0.getIdade());
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    String string0 = cliente0.getEmail();
    assertEquals("Saldo insuficiente", string0);
    assertNotNull(string0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    String string0 = cliente0.getFone();
    assertNotNull(string0);
    assertEquals("c9FBDOj26e9", string0);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
    
    cliente0.setEmail("sgH,,");
    cliente0.getEmail();
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test00()  throws Throwable  {
    Integer integer0 = new Integer(0);
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(1.0);
    Destino destino0 = new Destino("v?AN2Q/CTBc5qq", integer0, climas0, double0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    destino0.setAtracoes(arrayList0);
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    Double double1 = new Double(1);
    destino0.setPreco(double1);
    assertEquals((double)double1, (double)double0, 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    Integer integer0 = new Integer(898);
    Climas climas0 = Climas.AGRADAVEL;
    Double double0 = new Double(241.13417);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("5(`M2SL4][&MS", integer0, climas0, double0, arrayList0);
    destino0.adicionaAtracao("5(`M2SL4][&MS");
    destino0.removeAtracao((-1));
    assertEquals(241.13417, destino0.getPreco(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.VENTANIA;
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("+X<t_<&]", integer0, climas0, (Double) null, arrayList0);
    Double double0 = destino0.getPreco();
    assertNull(double0);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Integer integer0 = new Integer((-488));
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double((-488));
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("example.app.models.Destino", integer0, climas0, double0, arrayList0);
    Double double1 = destino0.getPreco();
    assertEquals((-488.0), (double)double1, 0.01);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Double double0 = new Double(0.0);
    Climas climas0 = Climas.CHUVOSO;
    Destino destino0 = new Destino("wx DbX(+a&Ud7[1Q", (Integer) null, climas0, (Double) null, arrayList0);
    destino0.preco = double0;
    Double double1 = destino0.getPreco();
    assertEquals(0.0, (double)double1, 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Integer integer0 = new Integer((-2376));
    Climas climas0 = Climas.VENTANIA;
    Double double0 = new Double(187.6725);
    Destino destino0 = new Destino((String) null, integer0, climas0, double0);
    Double double1 = destino0.getPreco();
    assertNotNull(double1);
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(0.0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("", (Integer) null, climas0, double0, arrayList0);
    Boolean boolean0 = destino0.getCidadeTuristica();
    assertNull(boolean0);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Integer integer0 = new Integer(662);
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double(0.0);
    Destino destino0 = new Destino((String) null, integer0, climas0, double0);
    assertFalse(destino0.getCidadeTuristica());
    
    Boolean boolean0 = Boolean.valueOf(true);
    destino0.setCidadeTuristica(boolean0);
    destino0.getCidadeTuristica();
    assertTrue(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(2084);
    Destino destino0 = new Destino("/|", (Integer) null, climas0, double0);
    destino0.getAtracoes();
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    destino0.adicionaAtracao((String) null);
    ArrayList<String> arrayList1 = destino0.getAtracoes();
    assertFalse(arrayList1.contains("CHUVOSO"));
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Integer integer0 = new Integer((-1106));
    Climas climas0 = Climas.AGRADAVEL;
    Double double0 = new Double((-982.9847914361264));
    Destino destino0 = new Destino("example.app.models.Cidade", integer0, climas0, double0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao((-635));
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(0.0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("", (Integer) null, climas0, double0, arrayList0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao((-1327));
    fail("Expecting exception: ArrayIndexOutOfBoundsException");
    
    } catch(ArrayIndexOutOfBoundsException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    Integer integer0 = new Integer(5317);
    Climas climas0 = Climas.VENTANIA;
    Double double0 = new Double(5317);
    Destino destino0 = null;
    try {
    destino0 = new Destino("", integer0, climas0, double0, (ArrayList<String>) null);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    ArrayList<String> arrayList0 = new ArrayList<String>();
    arrayList0.add("");
    arrayList0.add((String) null);
    arrayList0.add("");
    arrayList0.add("");
    arrayList0.add("~~LOk|W6");
    arrayList0.add("wx DbX(+a&Ud7[1Q");
    Climas climas0 = Climas.CHUVOSO;
    Destino destino0 = new Destino("wx DbX(+a&Ud7[1Q", (Integer) null, climas0, (Double) null, arrayList0);
    assertTrue(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao(0);
    fail("Expecting exception: IndexOutOfBoundsException");
    
    } catch(IndexOutOfBoundsException e) {
        //
        // Index: 1, Size: 0
        //
        verifyException("java.util.ArrayList", e);
    }
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    ArrayList<String> arrayList1 = destino0.getAtracoes();
    assertSame(arrayList0, arrayList1);
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    Integer integer0 = new Integer((-1592));
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double(0.0);
    Destino destino0 = new Destino("Cd1-v '", integer0, climas0, double0);
    // Undeclared exception!
    try { 
    destino0.adicionaAtracao("");
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(2084);
    Destino destino0 = new Destino("/|", (Integer) null, climas0, double0);
    Boolean boolean0 = destino0.getCidadeTuristica();
    assertFalse(boolean0);
}

@Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
      Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
      Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
      empresa0.adicionaCliente(cliente0);
      ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
      assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
      assertFalse(arrayList0.contains(cliente0));
  }

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("n[>;n,\"oV(UzKEMC.Z", 1285.07203100387, hashMap0);
    Carteira carteira0 = new Carteira(1285.07203100387, 1285.07203100387, 1285.07203100387);
    Cliente cliente0 = new Cliente("n[>;n,\"oV(UzKEMC.Z", 21, "n[>;n,\"oV(UzKEMC.Z", "n[>;n,\"oV(UzKEMC.Z", carteira0);
    Boolean boolean0 = Boolean.valueOf("n[>;n,\"oV(UzKEMC.Z");
    hashMap0.put(cliente0, boolean0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertFalse(arrayList0.contains(cliente0));
    assertEquals(1285.07203100387, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", hashMap0);
    HashMap<Cliente, Boolean> hashMap1 = new HashMap<Cliente, Boolean>(226, 226);
    empresa0.setClientes(hashMap1);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 0.0, hashMap0);
    empresa0.getNome();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", (-1900.3841), hashMap0);
    String string0 = empresa0.getNome();
    assertEquals((-1900.3841), empresa0.getCaixa(), 0.01);
    assertNotNull(string0);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Empresa empresa0 = new Empresa("", (Map<Cliente, Boolean>) null);
    empresa0.getClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    empresa0.adicionaCliente(cliente0);
    empresa0.getClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Empresa empresa0 = new Empresa("uULRcy-", (Map<Cliente, Boolean>) null);
    double double0 = empresa0.getCaixa();
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("P,#G", (-1.0), hashMap0);
    double double0 = empresa0.getCaixa();
    assertEquals((-1.0), double0, 0.01);
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    empresa0.buscaCliente(cliente0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Empresa empresa0 = new Empresa("S", 957.482814242, (Map<Cliente, Boolean>) null);
    Carteira carteira0 = new Carteira(0, 0, 0.0);
    Cliente cliente0 = new Cliente("}YR=,ddq.lk:(HQsj", 0, "3'1)DWuF!7xWhxZn>", "}YR=,ddq.lk:(HQsj", carteira0);
    // Undeclared exception!
    try { 
    empresa0.removeCliente(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", 0.0, hashMap0);
    Boolean boolean0 = new Boolean("example.app.models.Cliente");
    hashMap0.put((Cliente) null, boolean0);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientesAtivos();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Empresa empresa0 = new Empresa("]1)ZWIN|@j=", (-1249.0873), (Map<Cliente, Boolean>) null);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientes();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("`wAnG<PdzOk", hashMap0);
    Carteira carteira0 = new Carteira(0, 4618.8836, 4618.8836);
    Cliente cliente0 = new Cliente("^", 0, "^", "?K", carteira0);
    // Undeclared exception!
    try { 
    empresa0.buscaClienteAtivo(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    Empresa empresa0 = new Empresa("uULRcy-", (Map<Cliente, Boolean>) null);
    Carteira carteira0 = new Carteira(1274.862, 1.0, (-2609.2058285026246));
    Cliente cliente0 = new Cliente("uULRcy-", (-1), "uULRcy-", "uULRcy-", carteira0);
    // Undeclared exception!
    try { 
    empresa0.buscaCliente(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 0.0, hashMap0);
    // Undeclared exception!
    try { 
    empresa0.adicionaCliente((Cliente) null);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 20, "TB[E?\"W_wvfU", "");
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
    assertTrue(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
    assertFalse(arrayList0.contains(cliente0));
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 1.5874623117978444, hashMap0);
    Cliente cliente0 = new Cliente((String) null, (-6), (String) null, (String) null);
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertEquals(1.5874623117978444, empresa0.getCaixa(), 0.01);
    assertFalse(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test19()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("n:^1s:EBM'RLm7", hashMap0);
    Cliente cliente0 = new Cliente("n:^1s:EBM'RLm7", 20, "n:^1s:EBM'RLm7", "n:^1s:EBM'RLm7");
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    empresa0.listaTodosClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test20()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    empresa0.listaTodosClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test21()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    Boolean boolean1 = empresa0.buscaClienteAtivo(cliente0);
    assertTrue(boolean1);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test22()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, (-3457.176), hashMap0);
    Cliente cliente0 = new Cliente((String) null, (-177), (String) null, (String) null);
    Boolean boolean0 = empresa0.buscaCliente(cliente0);
    assertNotNull(boolean0);
    
    hashMap0.put(cliente0, boolean0);
    Boolean boolean1 = empresa0.buscaClienteAtivo(cliente0);
    assertFalse(boolean1);
    assertEquals((-3457.176), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test23()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("<q+ t*9k6", hashMap0);
    Boolean boolean0 = empresa0.buscaCliente((Cliente) null);
    hashMap0.put((Cliente) null, boolean0);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientesInativos();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test24()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
    assertTrue(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test25()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
    empresa0.removeCliente(cliente0);
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test26()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    String string0 = empresa0.getNome();
    assertNotNull(string0);
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test27()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    empresa0.setNome("TB[E?\"W_wvfU");
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test28()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
    
    empresa0.setCaixa(1.0);
    assertEquals(1.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test29()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 1.5874623117978444, hashMap0);
    double double0 = empresa0.getCaixa();
    assertEquals(1.5874623117978444, double0, 0.01);
}

@Test(timeout = 4000)
public void test30()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Map<Cliente, Boolean> map0 = empresa0.getClientes();
    assertNotNull(map0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}
@Test(timeout = 4000)
public void test00()  throws Throwable  {
    Carteira carteira0 = new Carteira((-650.538551823452), (-650.538551823452), 0.0);
    carteira0.compraNoDebito((-650.538551823452));
    assertEquals((-650.538551823452), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    Carteira carteira0 = new Carteira((-2355.999273853816), 1.0, (-2355.999273853816));
    carteira0.compraSaldo((-2355.999273853816));
    assertEquals((-4711.998547707632), carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 0.0, 0.0);
    double double0 = carteira0.saldoTotal();
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
    assertEquals(0.0, carteira0.getSaldo(), 0.01);
    assertEquals(0.0, double0, 0.01);
    assertEquals(0.0, carteira0.getLimiteCredito(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    Carteira carteira0 = new Carteira((-727.5563483680716), (-3650.3607966822), (-203.95121365749));
    double double0 = carteira0.saldoTotal();
    assertEquals((-4581.868358707762), double0, 0.01);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 1555.1866392665322, 417.7768413161);
    double double0 = carteira0.getSaldo();
    assertEquals(1972.9634805826322, carteira0.saldoTotal(), 0.01);
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    assertEquals(2324.018253662, carteira0.getSaldo(), 0.01);
    
    carteira0.adicionaSaldo((-2215.0));
    double double0 = carteira0.getSaldo();
    assertEquals((-2215.0), double0, 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.combinaSaldo();
    double double0 = carteira0.getLimiteDebito();
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Carteira carteira0 = new Carteira(648.0, 648.0, (-838.3974));
    double double0 = carteira0.getLimiteDebito();
    assertEquals((-838.3974), double0, 0.01);
    assertEquals(457.60260000000005, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 0.0, 0.0);
    double double0 = carteira0.getLimiteCredito();
    assertEquals(0.0, carteira0.getSaldo(), 0.01);
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Carteira carteira0 = new Carteira(6149.5508, 6149.5508, (-2952.19846496588));
    double double0 = carteira0.getLimiteCredito();
    assertEquals(6149.5508, double0, 0.01);
    assertEquals(9346.903135034121, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.setLimiteDebito((-1.0));
    assertEquals((-1.0), carteira0.getLimiteDebito(), 0.01);
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraNoDebito(0.0);
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.compraNoCredito((-2215.0));
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraNoCredito((-1.0));
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.compraSaldo((-922.6779147158));
    assertEquals(1401.3403389462, carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraSaldo(1.0);
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.setLimiteCredito((-736.0631747));
    carteira0.compraNoCredito((-2215.0));
    assertEquals((-2215.0), carteira0.getLimiteCredito(), 0.01);
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getLimiteDebito();
    assertEquals(2324.018253662, double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.combinaSaldo();
    carteira0.compraNoDebito(0.0);
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
}

@Test(timeout = 4000)
public void test19()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.setSaldo((-736.0631747));
    assertEquals((-736.0631747), carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test20()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getSaldo();
    assertEquals(2324.018253662, double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test21()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.saldoTotal();
    assertEquals(2433.036507324, double0, 0.01);
}

@Test(timeout = 4000)
public void test22()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getLimiteCredito();
    assertEquals((-2215.0), double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Cliente cliente0 = new Cliente("0GhM*h<_L", (-158), "0GhM*h<_L", "V");
      cliente0.fone = "WEd";
      cliente0.fone = null;
      String string0 = cliente0.getFone();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Cliente cliente0 = new Cliente("", 0, "", "");
      String string0 = cliente0.getFone();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Cliente cliente0 = new Cliente("Cw$sYN93Xw\"Y'Z", (-1233), "", "d(43f!u\"iA>gw|dWeD");
      String string0 = cliente0.getEmail();
      assertEquals("", string0);
      assertEquals("d(43f!u\"iA>gw|dWeD", cliente0.getFone());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Cliente cliente0 = new Cliente("", 0, "", "");
      Carteira carteira0 = cliente0.getCarteira();
      assertNull(carteira0);
  }

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Cliente cliente0 = new Cliente("example.app.models.Cliente", 2578, "n", "example.app.models.Cliente");
    Carteira carteira0 = new Carteira(0.0, (-1.0), 2578);
    cliente0.carteira = carteira0;
    Carteira carteira1 = new Carteira(2578, 2578, 2578);
    cliente0.carteira = carteira1;
    cliente0.getCarteira();
    assertEquals("n", cliente0.getEmail());
    assertEquals("example.app.models.Cliente", cliente0.getFone());
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Carteira carteira0 = new Carteira((-1), (-1), (-2515.202332146312));
    Cliente cliente0 = new Cliente("X`pJIm%lP4 7c<I", (-1), "X`pJIm%lP4 7c<I", "example.app.models.Cliente", carteira0);
    Carteira carteira1 = cliente0.getCarteira();
    assertEquals("example.app.models.Cliente", cliente0.getFone());
    assertNotNull(carteira1);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    cliente0.setCarteira(carteira0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
    assertEquals("Saldo insuficiente", cliente0.getEmail());
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
    
    cliente0.setFone("sgH,,");
    assertEquals("sgH,,", cliente0.getFone());
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    Carteira carteira1 = cliente0.getCarteira();
    assertNotNull(carteira1);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Cliente cliente0 = new Cliente((String) null, (-1), "", "");
    Carteira carteira0 = new Carteira(0.0, (-1), 191.0);
    cliente0.setCarteira(carteira0);
    assertEquals((-1), cliente0.getIdade());
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    String string0 = cliente0.getEmail();
    assertEquals("Saldo insuficiente", string0);
    assertNotNull(string0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    String string0 = cliente0.getFone();
    assertNotNull(string0);
    assertEquals("c9FBDOj26e9", string0);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
    
    cliente0.setEmail("sgH,,");
    cliente0.getEmail();
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test00()  throws Throwable  {
    Integer integer0 = new Integer(0);
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(1.0);
    Destino destino0 = new Destino("v?AN2Q/CTBc5qq", integer0, climas0, double0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    destino0.setAtracoes(arrayList0);
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    Double double1 = new Double(1);
    destino0.setPreco(double1);
    assertEquals((double)double1, (double)double0, 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    Integer integer0 = new Integer(898);
    Climas climas0 = Climas.AGRADAVEL;
    Double double0 = new Double(241.13417);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("5(`M2SL4][&MS", integer0, climas0, double0, arrayList0);
    destino0.adicionaAtracao("5(`M2SL4][&MS");
    destino0.removeAtracao((-1));
    assertEquals(241.13417, destino0.getPreco(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.VENTANIA;
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("+X<t_<&]", integer0, climas0, (Double) null, arrayList0);
    Double double0 = destino0.getPreco();
    assertNull(double0);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Integer integer0 = new Integer((-488));
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double((-488));
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("example.app.models.Destino", integer0, climas0, double0, arrayList0);
    Double double1 = destino0.getPreco();
    assertEquals((-488.0), (double)double1, 0.01);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Double double0 = new Double(0.0);
    Climas climas0 = Climas.CHUVOSO;
    Destino destino0 = new Destino("wx DbX(+a&Ud7[1Q", (Integer) null, climas0, (Double) null, arrayList0);
    destino0.preco = double0;
    Double double1 = destino0.getPreco();
    assertEquals(0.0, (double)double1, 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Integer integer0 = new Integer((-2376));
    Climas climas0 = Climas.VENTANIA;
    Double double0 = new Double(187.6725);
    Destino destino0 = new Destino((String) null, integer0, climas0, double0);
    Double double1 = destino0.getPreco();
    assertNotNull(double1);
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(0.0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("", (Integer) null, climas0, double0, arrayList0);
    Boolean boolean0 = destino0.getCidadeTuristica();
    assertNull(boolean0);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Integer integer0 = new Integer(662);
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double(0.0);
    Destino destino0 = new Destino((String) null, integer0, climas0, double0);
    assertFalse(destino0.getCidadeTuristica());
    
    Boolean boolean0 = Boolean.valueOf(true);
    destino0.setCidadeTuristica(boolean0);
    destino0.getCidadeTuristica();
    assertTrue(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(2084);
    Destino destino0 = new Destino("/|", (Integer) null, climas0, double0);
    destino0.getAtracoes();
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    destino0.adicionaAtracao((String) null);
    ArrayList<String> arrayList1 = destino0.getAtracoes();
    assertFalse(arrayList1.contains("CHUVOSO"));
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Integer integer0 = new Integer((-1106));
    Climas climas0 = Climas.AGRADAVEL;
    Double double0 = new Double((-982.9847914361264));
    Destino destino0 = new Destino("example.app.models.Cidade", integer0, climas0, double0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao((-635));
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(0.0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("", (Integer) null, climas0, double0, arrayList0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao((-1327));
    fail("Expecting exception: ArrayIndexOutOfBoundsException");
    
    } catch(ArrayIndexOutOfBoundsException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    Integer integer0 = new Integer(5317);
    Climas climas0 = Climas.VENTANIA;
    Double double0 = new Double(5317);
    Destino destino0 = null;
    try {
    destino0 = new Destino("", integer0, climas0, double0, (ArrayList<String>) null);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    ArrayList<String> arrayList0 = new ArrayList<String>();
    arrayList0.add("");
    arrayList0.add((String) null);
    arrayList0.add("");
    arrayList0.add("");
    arrayList0.add("~~LOk|W6");
    arrayList0.add("wx DbX(+a&Ud7[1Q");
    Climas climas0 = Climas.CHUVOSO;
    Destino destino0 = new Destino("wx DbX(+a&Ud7[1Q", (Integer) null, climas0, (Double) null, arrayList0);
    assertTrue(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao(0);
    fail("Expecting exception: IndexOutOfBoundsException");
    
    } catch(IndexOutOfBoundsException e) {
        //
        // Index: 1, Size: 0
        //
        verifyException("java.util.ArrayList", e);
    }
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    ArrayList<String> arrayList1 = destino0.getAtracoes();
    assertSame(arrayList0, arrayList1);
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    Integer integer0 = new Integer((-1592));
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double(0.0);
    Destino destino0 = new Destino("Cd1-v '", integer0, climas0, double0);
    // Undeclared exception!
    try { 
    destino0.adicionaAtracao("");
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(2084);
    Destino destino0 = new Destino("/|", (Integer) null, climas0, double0);
    Boolean boolean0 = destino0.getCidadeTuristica();
    assertFalse(boolean0);
}

@Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
      Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
      Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
      empresa0.adicionaCliente(cliente0);
      ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
      assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
      assertFalse(arrayList0.contains(cliente0));
  }

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("n[>;n,\"oV(UzKEMC.Z", 1285.07203100387, hashMap0);
    Carteira carteira0 = new Carteira(1285.07203100387, 1285.07203100387, 1285.07203100387);
    Cliente cliente0 = new Cliente("n[>;n,\"oV(UzKEMC.Z", 21, "n[>;n,\"oV(UzKEMC.Z", "n[>;n,\"oV(UzKEMC.Z", carteira0);
    Boolean boolean0 = Boolean.valueOf("n[>;n,\"oV(UzKEMC.Z");
    hashMap0.put(cliente0, boolean0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertFalse(arrayList0.contains(cliente0));
    assertEquals(1285.07203100387, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", hashMap0);
    HashMap<Cliente, Boolean> hashMap1 = new HashMap<Cliente, Boolean>(226, 226);
    empresa0.setClientes(hashMap1);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 0.0, hashMap0);
    empresa0.getNome();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", (-1900.3841), hashMap0);
    String string0 = empresa0.getNome();
    assertEquals((-1900.3841), empresa0.getCaixa(), 0.01);
    assertNotNull(string0);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Empresa empresa0 = new Empresa("", (Map<Cliente, Boolean>) null);
    empresa0.getClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    empresa0.adicionaCliente(cliente0);
    empresa0.getClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Empresa empresa0 = new Empresa("uULRcy-", (Map<Cliente, Boolean>) null);
    double double0 = empresa0.getCaixa();
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("P,#G", (-1.0), hashMap0);
    double double0 = empresa0.getCaixa();
    assertEquals((-1.0), double0, 0.01);
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    empresa0.buscaCliente(cliente0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Empresa empresa0 = new Empresa("S", 957.482814242, (Map<Cliente, Boolean>) null);
    Carteira carteira0 = new Carteira(0, 0, 0.0);
    Cliente cliente0 = new Cliente("}YR=,ddq.lk:(HQsj", 0, "3'1)DWuF!7xWhxZn>", "}YR=,ddq.lk:(HQsj", carteira0);
    // Undeclared exception!
    try { 
    empresa0.removeCliente(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", 0.0, hashMap0);
    Boolean boolean0 = new Boolean("example.app.models.Cliente");
    hashMap0.put((Cliente) null, boolean0);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientesAtivos();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Empresa empresa0 = new Empresa("]1)ZWIN|@j=", (-1249.0873), (Map<Cliente, Boolean>) null);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientes();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("`wAnG<PdzOk", hashMap0);
    Carteira carteira0 = new Carteira(0, 4618.8836, 4618.8836);
    Cliente cliente0 = new Cliente("^", 0, "^", "?K", carteira0);
    // Undeclared exception!
    try { 
    empresa0.buscaClienteAtivo(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    Empresa empresa0 = new Empresa("uULRcy-", (Map<Cliente, Boolean>) null);
    Carteira carteira0 = new Carteira(1274.862, 1.0, (-2609.2058285026246));
    Cliente cliente0 = new Cliente("uULRcy-", (-1), "uULRcy-", "uULRcy-", carteira0);
    // Undeclared exception!
    try { 
    empresa0.buscaCliente(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 0.0, hashMap0);
    // Undeclared exception!
    try { 
    empresa0.adicionaCliente((Cliente) null);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 20, "TB[E?\"W_wvfU", "");
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
    assertTrue(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
    assertFalse(arrayList0.contains(cliente0));
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 1.5874623117978444, hashMap0);
    Cliente cliente0 = new Cliente((String) null, (-6), (String) null, (String) null);
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertEquals(1.5874623117978444, empresa0.getCaixa(), 0.01);
    assertFalse(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test19()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("n:^1s:EBM'RLm7", hashMap0);
    Cliente cliente0 = new Cliente("n:^1s:EBM'RLm7", 20, "n:^1s:EBM'RLm7", "n:^1s:EBM'RLm7");
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    empresa0.listaTodosClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test20()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    empresa0.listaTodosClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test21()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    Boolean boolean1 = empresa0.buscaClienteAtivo(cliente0);
    assertTrue(boolean1);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test22()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, (-3457.176), hashMap0);
    Cliente cliente0 = new Cliente((String) null, (-177), (String) null, (String) null);
    Boolean boolean0 = empresa0.buscaCliente(cliente0);
    assertNotNull(boolean0);
    
    hashMap0.put(cliente0, boolean0);
    Boolean boolean1 = empresa0.buscaClienteAtivo(cliente0);
    assertFalse(boolean1);
    assertEquals((-3457.176), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test23()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("<q+ t*9k6", hashMap0);
    Boolean boolean0 = empresa0.buscaCliente((Cliente) null);
    hashMap0.put((Cliente) null, boolean0);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientesInativos();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test24()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
    assertTrue(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test25()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
    empresa0.removeCliente(cliente0);
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test26()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    String string0 = empresa0.getNome();
    assertNotNull(string0);
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test27()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    empresa0.setNome("TB[E?\"W_wvfU");
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test28()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
    
    empresa0.setCaixa(1.0);
    assertEquals(1.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test29()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 1.5874623117978444, hashMap0);
    double double0 = empresa0.getCaixa();
    assertEquals(1.5874623117978444, double0, 0.01);
}

@Test(timeout = 4000)
public void test30()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Map<Cliente, Boolean> map0 = empresa0.getClientes();
    assertNotNull(map0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}
@Test(timeout = 4000)
public void test00()  throws Throwable  {
    Carteira carteira0 = new Carteira((-650.538551823452), (-650.538551823452), 0.0);
    carteira0.compraNoDebito((-650.538551823452));
    assertEquals((-650.538551823452), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    Carteira carteira0 = new Carteira((-2355.999273853816), 1.0, (-2355.999273853816));
    carteira0.compraSaldo((-2355.999273853816));
    assertEquals((-4711.998547707632), carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 0.0, 0.0);
    double double0 = carteira0.saldoTotal();
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
    assertEquals(0.0, carteira0.getSaldo(), 0.01);
    assertEquals(0.0, double0, 0.01);
    assertEquals(0.0, carteira0.getLimiteCredito(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    Carteira carteira0 = new Carteira((-727.5563483680716), (-3650.3607966822), (-203.95121365749));
    double double0 = carteira0.saldoTotal();
    assertEquals((-4581.868358707762), double0, 0.01);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 1555.1866392665322, 417.7768413161);
    double double0 = carteira0.getSaldo();
    assertEquals(1972.9634805826322, carteira0.saldoTotal(), 0.01);
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    assertEquals(2324.018253662, carteira0.getSaldo(), 0.01);
    
    carteira0.adicionaSaldo((-2215.0));
    double double0 = carteira0.getSaldo();
    assertEquals((-2215.0), double0, 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.combinaSaldo();
    double double0 = carteira0.getLimiteDebito();
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Carteira carteira0 = new Carteira(648.0, 648.0, (-838.3974));
    double double0 = carteira0.getLimiteDebito();
    assertEquals((-838.3974), double0, 0.01);
    assertEquals(457.60260000000005, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 0.0, 0.0);
    double double0 = carteira0.getLimiteCredito();
    assertEquals(0.0, carteira0.getSaldo(), 0.01);
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Carteira carteira0 = new Carteira(6149.5508, 6149.5508, (-2952.19846496588));
    double double0 = carteira0.getLimiteCredito();
    assertEquals(6149.5508, double0, 0.01);
    assertEquals(9346.903135034121, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.setLimiteDebito((-1.0));
    assertEquals((-1.0), carteira0.getLimiteDebito(), 0.01);
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraNoDebito(0.0);
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.compraNoCredito((-2215.0));
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraNoCredito((-1.0));
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.compraSaldo((-922.6779147158));
    assertEquals(1401.3403389462, carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraSaldo(1.0);
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.setLimiteCredito((-736.0631747));
    carteira0.compraNoCredito((-2215.0));
    assertEquals((-2215.0), carteira0.getLimiteCredito(), 0.01);
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getLimiteDebito();
    assertEquals(2324.018253662, double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.combinaSaldo();
    carteira0.compraNoDebito(0.0);
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
}

@Test(timeout = 4000)
public void test19()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.setSaldo((-736.0631747));
    assertEquals((-736.0631747), carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test20()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getSaldo();
    assertEquals(2324.018253662, double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test21()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.saldoTotal();
    assertEquals(2433.036507324, double0, 0.01);
}

@Test(timeout = 4000)
public void test22()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getLimiteCredito();
    assertEquals((-2215.0), double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Cliente cliente0 = new Cliente("0GhM*h<_L", (-158), "0GhM*h<_L", "V");
      cliente0.fone = "WEd";
      cliente0.fone = null;
      String string0 = cliente0.getFone();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Cliente cliente0 = new Cliente("", 0, "", "");
      String string0 = cliente0.getFone();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Cliente cliente0 = new Cliente("Cw$sYN93Xw\"Y'Z", (-1233), "", "d(43f!u\"iA>gw|dWeD");
      String string0 = cliente0.getEmail();
      assertEquals("", string0);
      assertEquals("d(43f!u\"iA>gw|dWeD", cliente0.getFone());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Cliente cliente0 = new Cliente("", 0, "", "");
      Carteira carteira0 = cliente0.getCarteira();
      assertNull(carteira0);
  }

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Cliente cliente0 = new Cliente("example.app.models.Cliente", 2578, "n", "example.app.models.Cliente");
    Carteira carteira0 = new Carteira(0.0, (-1.0), 2578);
    cliente0.carteira = carteira0;
    Carteira carteira1 = new Carteira(2578, 2578, 2578);
    cliente0.carteira = carteira1;
    cliente0.getCarteira();
    assertEquals("n", cliente0.getEmail());
    assertEquals("example.app.models.Cliente", cliente0.getFone());
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Carteira carteira0 = new Carteira((-1), (-1), (-2515.202332146312));
    Cliente cliente0 = new Cliente("X`pJIm%lP4 7c<I", (-1), "X`pJIm%lP4 7c<I", "example.app.models.Cliente", carteira0);
    Carteira carteira1 = cliente0.getCarteira();
    assertEquals("example.app.models.Cliente", cliente0.getFone());
    assertNotNull(carteira1);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    cliente0.setCarteira(carteira0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
    assertEquals("Saldo insuficiente", cliente0.getEmail());
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
    
    cliente0.setFone("sgH,,");
    assertEquals("sgH,,", cliente0.getFone());
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    Carteira carteira1 = cliente0.getCarteira();
    assertNotNull(carteira1);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Cliente cliente0 = new Cliente((String) null, (-1), "", "");
    Carteira carteira0 = new Carteira(0.0, (-1), 191.0);
    cliente0.setCarteira(carteira0);
    assertEquals((-1), cliente0.getIdade());
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    String string0 = cliente0.getEmail();
    assertEquals("Saldo insuficiente", string0);
    assertNotNull(string0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    String string0 = cliente0.getFone();
    assertNotNull(string0);
    assertEquals("c9FBDOj26e9", string0);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
    
    cliente0.setEmail("sgH,,");
    cliente0.getEmail();
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test00()  throws Throwable  {
    Integer integer0 = new Integer(0);
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(1.0);
    Destino destino0 = new Destino("v?AN2Q/CTBc5qq", integer0, climas0, double0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    destino0.setAtracoes(arrayList0);
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    Double double1 = new Double(1);
    destino0.setPreco(double1);
    assertEquals((double)double1, (double)double0, 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    Integer integer0 = new Integer(898);
    Climas climas0 = Climas.AGRADAVEL;
    Double double0 = new Double(241.13417);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("5(`M2SL4][&MS", integer0, climas0, double0, arrayList0);
    destino0.adicionaAtracao("5(`M2SL4][&MS");
    destino0.removeAtracao((-1));
    assertEquals(241.13417, destino0.getPreco(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.VENTANIA;
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("+X<t_<&]", integer0, climas0, (Double) null, arrayList0);
    Double double0 = destino0.getPreco();
    assertNull(double0);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Integer integer0 = new Integer((-488));
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double((-488));
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("example.app.models.Destino", integer0, climas0, double0, arrayList0);
    Double double1 = destino0.getPreco();
    assertEquals((-488.0), (double)double1, 0.01);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Double double0 = new Double(0.0);
    Climas climas0 = Climas.CHUVOSO;
    Destino destino0 = new Destino("wx DbX(+a&Ud7[1Q", (Integer) null, climas0, (Double) null, arrayList0);
    destino0.preco = double0;
    Double double1 = destino0.getPreco();
    assertEquals(0.0, (double)double1, 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Integer integer0 = new Integer((-2376));
    Climas climas0 = Climas.VENTANIA;
    Double double0 = new Double(187.6725);
    Destino destino0 = new Destino((String) null, integer0, climas0, double0);
    Double double1 = destino0.getPreco();
    assertNotNull(double1);
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(0.0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("", (Integer) null, climas0, double0, arrayList0);
    Boolean boolean0 = destino0.getCidadeTuristica();
    assertNull(boolean0);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Integer integer0 = new Integer(662);
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double(0.0);
    Destino destino0 = new Destino((String) null, integer0, climas0, double0);
    assertFalse(destino0.getCidadeTuristica());
    
    Boolean boolean0 = Boolean.valueOf(true);
    destino0.setCidadeTuristica(boolean0);
    destino0.getCidadeTuristica();
    assertTrue(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(2084);
    Destino destino0 = new Destino("/|", (Integer) null, climas0, double0);
    destino0.getAtracoes();
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    destino0.adicionaAtracao((String) null);
    ArrayList<String> arrayList1 = destino0.getAtracoes();
    assertFalse(arrayList1.contains("CHUVOSO"));
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Integer integer0 = new Integer((-1106));
    Climas climas0 = Climas.AGRADAVEL;
    Double double0 = new Double((-982.9847914361264));
    Destino destino0 = new Destino("example.app.models.Cidade", integer0, climas0, double0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao((-635));
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(0.0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("", (Integer) null, climas0, double0, arrayList0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao((-1327));
    fail("Expecting exception: ArrayIndexOutOfBoundsException");
    
    } catch(ArrayIndexOutOfBoundsException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    Integer integer0 = new Integer(5317);
    Climas climas0 = Climas.VENTANIA;
    Double double0 = new Double(5317);
    Destino destino0 = null;
    try {
    destino0 = new Destino("", integer0, climas0, double0, (ArrayList<String>) null);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    ArrayList<String> arrayList0 = new ArrayList<String>();
    arrayList0.add("");
    arrayList0.add((String) null);
    arrayList0.add("");
    arrayList0.add("");
    arrayList0.add("~~LOk|W6");
    arrayList0.add("wx DbX(+a&Ud7[1Q");
    Climas climas0 = Climas.CHUVOSO;
    Destino destino0 = new Destino("wx DbX(+a&Ud7[1Q", (Integer) null, climas0, (Double) null, arrayList0);
    assertTrue(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao(0);
    fail("Expecting exception: IndexOutOfBoundsException");
    
    } catch(IndexOutOfBoundsException e) {
        //
        // Index: 1, Size: 0
        //
        verifyException("java.util.ArrayList", e);
    }
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    ArrayList<String> arrayList1 = destino0.getAtracoes();
    assertSame(arrayList0, arrayList1);
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    Integer integer0 = new Integer((-1592));
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double(0.0);
    Destino destino0 = new Destino("Cd1-v '", integer0, climas0, double0);
    // Undeclared exception!
    try { 
    destino0.adicionaAtracao("");
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(2084);
    Destino destino0 = new Destino("/|", (Integer) null, climas0, double0);
    Boolean boolean0 = destino0.getCidadeTuristica();
    assertFalse(boolean0);
}

@Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
      Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
      Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
      empresa0.adicionaCliente(cliente0);
      ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
      assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
      assertFalse(arrayList0.contains(cliente0));
  }

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("n[>;n,\"oV(UzKEMC.Z", 1285.07203100387, hashMap0);
    Carteira carteira0 = new Carteira(1285.07203100387, 1285.07203100387, 1285.07203100387);
    Cliente cliente0 = new Cliente("n[>;n,\"oV(UzKEMC.Z", 21, "n[>;n,\"oV(UzKEMC.Z", "n[>;n,\"oV(UzKEMC.Z", carteira0);
    Boolean boolean0 = Boolean.valueOf("n[>;n,\"oV(UzKEMC.Z");
    hashMap0.put(cliente0, boolean0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertFalse(arrayList0.contains(cliente0));
    assertEquals(1285.07203100387, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", hashMap0);
    HashMap<Cliente, Boolean> hashMap1 = new HashMap<Cliente, Boolean>(226, 226);
    empresa0.setClientes(hashMap1);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 0.0, hashMap0);
    empresa0.getNome();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", (-1900.3841), hashMap0);
    String string0 = empresa0.getNome();
    assertEquals((-1900.3841), empresa0.getCaixa(), 0.01);
    assertNotNull(string0);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Empresa empresa0 = new Empresa("", (Map<Cliente, Boolean>) null);
    empresa0.getClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    empresa0.adicionaCliente(cliente0);
    empresa0.getClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Empresa empresa0 = new Empresa("uULRcy-", (Map<Cliente, Boolean>) null);
    double double0 = empresa0.getCaixa();
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("P,#G", (-1.0), hashMap0);
    double double0 = empresa0.getCaixa();
    assertEquals((-1.0), double0, 0.01);
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    empresa0.buscaCliente(cliente0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Empresa empresa0 = new Empresa("S", 957.482814242, (Map<Cliente, Boolean>) null);
    Carteira carteira0 = new Carteira(0, 0, 0.0);
    Cliente cliente0 = new Cliente("}YR=,ddq.lk:(HQsj", 0, "3'1)DWuF!7xWhxZn>", "}YR=,ddq.lk:(HQsj", carteira0);
    // Undeclared exception!
    try { 
    empresa0.removeCliente(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", 0.0, hashMap0);
    Boolean boolean0 = new Boolean("example.app.models.Cliente");
    hashMap0.put((Cliente) null, boolean0);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientesAtivos();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Empresa empresa0 = new Empresa("]1)ZWIN|@j=", (-1249.0873), (Map<Cliente, Boolean>) null);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientes();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("`wAnG<PdzOk", hashMap0);
    Carteira carteira0 = new Carteira(0, 4618.8836, 4618.8836);
    Cliente cliente0 = new Cliente("^", 0, "^", "?K", carteira0);
    // Undeclared exception!
    try { 
    empresa0.buscaClienteAtivo(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    Empresa empresa0 = new Empresa("uULRcy-", (Map<Cliente, Boolean>) null);
    Carteira carteira0 = new Carteira(1274.862, 1.0, (-2609.2058285026246));
    Cliente cliente0 = new Cliente("uULRcy-", (-1), "uULRcy-", "uULRcy-", carteira0);
    // Undeclared exception!
    try { 
    empresa0.buscaCliente(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 0.0, hashMap0);
    // Undeclared exception!
    try { 
    empresa0.adicionaCliente((Cliente) null);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 20, "TB[E?\"W_wvfU", "");
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
    assertTrue(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
    assertFalse(arrayList0.contains(cliente0));
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 1.5874623117978444, hashMap0);
    Cliente cliente0 = new Cliente((String) null, (-6), (String) null, (String) null);
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertEquals(1.5874623117978444, empresa0.getCaixa(), 0.01);
    assertFalse(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test19()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("n:^1s:EBM'RLm7", hashMap0);
    Cliente cliente0 = new Cliente("n:^1s:EBM'RLm7", 20, "n:^1s:EBM'RLm7", "n:^1s:EBM'RLm7");
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    empresa0.listaTodosClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test20()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    empresa0.listaTodosClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test21()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    Boolean boolean1 = empresa0.buscaClienteAtivo(cliente0);
    assertTrue(boolean1);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test22()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, (-3457.176), hashMap0);
    Cliente cliente0 = new Cliente((String) null, (-177), (String) null, (String) null);
    Boolean boolean0 = empresa0.buscaCliente(cliente0);
    assertNotNull(boolean0);
    
    hashMap0.put(cliente0, boolean0);
    Boolean boolean1 = empresa0.buscaClienteAtivo(cliente0);
    assertFalse(boolean1);
    assertEquals((-3457.176), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test23()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("<q+ t*9k6", hashMap0);
    Boolean boolean0 = empresa0.buscaCliente((Cliente) null);
    hashMap0.put((Cliente) null, boolean0);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientesInativos();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test24()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
    assertTrue(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test25()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
    empresa0.removeCliente(cliente0);
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test26()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    String string0 = empresa0.getNome();
    assertNotNull(string0);
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test27()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    empresa0.setNome("TB[E?\"W_wvfU");
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test28()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
    
    empresa0.setCaixa(1.0);
    assertEquals(1.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test29()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 1.5874623117978444, hashMap0);
    double double0 = empresa0.getCaixa();
    assertEquals(1.5874623117978444, double0, 0.01);
}

@Test(timeout = 4000)
public void test30()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Map<Cliente, Boolean> map0 = empresa0.getClientes();
    assertNotNull(map0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}
@Test(timeout = 4000)
public void test00()  throws Throwable  {
    Carteira carteira0 = new Carteira((-650.538551823452), (-650.538551823452), 0.0);
    carteira0.compraNoDebito((-650.538551823452));
    assertEquals((-650.538551823452), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    Carteira carteira0 = new Carteira((-2355.999273853816), 1.0, (-2355.999273853816));
    carteira0.compraSaldo((-2355.999273853816));
    assertEquals((-4711.998547707632), carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 0.0, 0.0);
    double double0 = carteira0.saldoTotal();
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
    assertEquals(0.0, carteira0.getSaldo(), 0.01);
    assertEquals(0.0, double0, 0.01);
    assertEquals(0.0, carteira0.getLimiteCredito(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    Carteira carteira0 = new Carteira((-727.5563483680716), (-3650.3607966822), (-203.95121365749));
    double double0 = carteira0.saldoTotal();
    assertEquals((-4581.868358707762), double0, 0.01);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 1555.1866392665322, 417.7768413161);
    double double0 = carteira0.getSaldo();
    assertEquals(1972.9634805826322, carteira0.saldoTotal(), 0.01);
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    assertEquals(2324.018253662, carteira0.getSaldo(), 0.01);
    
    carteira0.adicionaSaldo((-2215.0));
    double double0 = carteira0.getSaldo();
    assertEquals((-2215.0), double0, 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.combinaSaldo();
    double double0 = carteira0.getLimiteDebito();
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Carteira carteira0 = new Carteira(648.0, 648.0, (-838.3974));
    double double0 = carteira0.getLimiteDebito();
    assertEquals((-838.3974), double0, 0.01);
    assertEquals(457.60260000000005, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 0.0, 0.0);
    double double0 = carteira0.getLimiteCredito();
    assertEquals(0.0, carteira0.getSaldo(), 0.01);
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Carteira carteira0 = new Carteira(6149.5508, 6149.5508, (-2952.19846496588));
    double double0 = carteira0.getLimiteCredito();
    assertEquals(6149.5508, double0, 0.01);
    assertEquals(9346.903135034121, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.setLimiteDebito((-1.0));
    assertEquals((-1.0), carteira0.getLimiteDebito(), 0.01);
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraNoDebito(0.0);
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.compraNoCredito((-2215.0));
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraNoCredito((-1.0));
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.compraSaldo((-922.6779147158));
    assertEquals(1401.3403389462, carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraSaldo(1.0);
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.setLimiteCredito((-736.0631747));
    carteira0.compraNoCredito((-2215.0));
    assertEquals((-2215.0), carteira0.getLimiteCredito(), 0.01);
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getLimiteDebito();
    assertEquals(2324.018253662, double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.combinaSaldo();
    carteira0.compraNoDebito(0.0);
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
}

@Test(timeout = 4000)
public void test19()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.setSaldo((-736.0631747));
    assertEquals((-736.0631747), carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test20()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getSaldo();
    assertEquals(2324.018253662, double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test21()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.saldoTotal();
    assertEquals(2433.036507324, double0, 0.01);
}

@Test(timeout = 4000)
public void test22()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getLimiteCredito();
    assertEquals((-2215.0), double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Cliente cliente0 = new Cliente("0GhM*h<_L", (-158), "0GhM*h<_L", "V");
      cliente0.fone = "WEd";
      cliente0.fone = null;
      String string0 = cliente0.getFone();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Cliente cliente0 = new Cliente("", 0, "", "");
      String string0 = cliente0.getFone();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Cliente cliente0 = new Cliente("Cw$sYN93Xw\"Y'Z", (-1233), "", "d(43f!u\"iA>gw|dWeD");
      String string0 = cliente0.getEmail();
      assertEquals("", string0);
      assertEquals("d(43f!u\"iA>gw|dWeD", cliente0.getFone());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Cliente cliente0 = new Cliente("", 0, "", "");
      Carteira carteira0 = cliente0.getCarteira();
      assertNull(carteira0);
  }

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Cliente cliente0 = new Cliente("example.app.models.Cliente", 2578, "n", "example.app.models.Cliente");
    Carteira carteira0 = new Carteira(0.0, (-1.0), 2578);
    cliente0.carteira = carteira0;
    Carteira carteira1 = new Carteira(2578, 2578, 2578);
    cliente0.carteira = carteira1;
    cliente0.getCarteira();
    assertEquals("n", cliente0.getEmail());
    assertEquals("example.app.models.Cliente", cliente0.getFone());
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Carteira carteira0 = new Carteira((-1), (-1), (-2515.202332146312));
    Cliente cliente0 = new Cliente("X`pJIm%lP4 7c<I", (-1), "X`pJIm%lP4 7c<I", "example.app.models.Cliente", carteira0);
    Carteira carteira1 = cliente0.getCarteira();
    assertEquals("example.app.models.Cliente", cliente0.getFone());
    assertNotNull(carteira1);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    cliente0.setCarteira(carteira0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
    assertEquals("Saldo insuficiente", cliente0.getEmail());
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
    
    cliente0.setFone("sgH,,");
    assertEquals("sgH,,", cliente0.getFone());
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    Carteira carteira1 = cliente0.getCarteira();
    assertNotNull(carteira1);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Cliente cliente0 = new Cliente((String) null, (-1), "", "");
    Carteira carteira0 = new Carteira(0.0, (-1), 191.0);
    cliente0.setCarteira(carteira0);
    assertEquals((-1), cliente0.getIdade());
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    String string0 = cliente0.getEmail();
    assertEquals("Saldo insuficiente", string0);
    assertNotNull(string0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    String string0 = cliente0.getFone();
    assertNotNull(string0);
    assertEquals("c9FBDOj26e9", string0);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
    
    cliente0.setEmail("sgH,,");
    cliente0.getEmail();
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test00()  throws Throwable  {
    Integer integer0 = new Integer(0);
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(1.0);
    Destino destino0 = new Destino("v?AN2Q/CTBc5qq", integer0, climas0, double0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    destino0.setAtracoes(arrayList0);
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    Double double1 = new Double(1);
    destino0.setPreco(double1);
    assertEquals((double)double1, (double)double0, 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    Integer integer0 = new Integer(898);
    Climas climas0 = Climas.AGRADAVEL;
    Double double0 = new Double(241.13417);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("5(`M2SL4][&MS", integer0, climas0, double0, arrayList0);
    destino0.adicionaAtracao("5(`M2SL4][&MS");
    destino0.removeAtracao((-1));
    assertEquals(241.13417, destino0.getPreco(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.VENTANIA;
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("+X<t_<&]", integer0, climas0, (Double) null, arrayList0);
    Double double0 = destino0.getPreco();
    assertNull(double0);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Integer integer0 = new Integer((-488));
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double((-488));
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("example.app.models.Destino", integer0, climas0, double0, arrayList0);
    Double double1 = destino0.getPreco();
    assertEquals((-488.0), (double)double1, 0.01);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Double double0 = new Double(0.0);
    Climas climas0 = Climas.CHUVOSO;
    Destino destino0 = new Destino("wx DbX(+a&Ud7[1Q", (Integer) null, climas0, (Double) null, arrayList0);
    destino0.preco = double0;
    Double double1 = destino0.getPreco();
    assertEquals(0.0, (double)double1, 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Integer integer0 = new Integer((-2376));
    Climas climas0 = Climas.VENTANIA;
    Double double0 = new Double(187.6725);
    Destino destino0 = new Destino((String) null, integer0, climas0, double0);
    Double double1 = destino0.getPreco();
    assertNotNull(double1);
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(0.0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("", (Integer) null, climas0, double0, arrayList0);
    Boolean boolean0 = destino0.getCidadeTuristica();
    assertNull(boolean0);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Integer integer0 = new Integer(662);
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double(0.0);
    Destino destino0 = new Destino((String) null, integer0, climas0, double0);
    assertFalse(destino0.getCidadeTuristica());
    
    Boolean boolean0 = Boolean.valueOf(true);
    destino0.setCidadeTuristica(boolean0);
    destino0.getCidadeTuristica();
    assertTrue(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(2084);
    Destino destino0 = new Destino("/|", (Integer) null, climas0, double0);
    destino0.getAtracoes();
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    destino0.adicionaAtracao((String) null);
    ArrayList<String> arrayList1 = destino0.getAtracoes();
    assertFalse(arrayList1.contains("CHUVOSO"));
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Integer integer0 = new Integer((-1106));
    Climas climas0 = Climas.AGRADAVEL;
    Double double0 = new Double((-982.9847914361264));
    Destino destino0 = new Destino("example.app.models.Cidade", integer0, climas0, double0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao((-635));
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(0.0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("", (Integer) null, climas0, double0, arrayList0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao((-1327));
    fail("Expecting exception: ArrayIndexOutOfBoundsException");
    
    } catch(ArrayIndexOutOfBoundsException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    Integer integer0 = new Integer(5317);
    Climas climas0 = Climas.VENTANIA;
    Double double0 = new Double(5317);
    Destino destino0 = null;
    try {
    destino0 = new Destino("", integer0, climas0, double0, (ArrayList<String>) null);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    ArrayList<String> arrayList0 = new ArrayList<String>();
    arrayList0.add("");
    arrayList0.add((String) null);
    arrayList0.add("");
    arrayList0.add("");
    arrayList0.add("~~LOk|W6");
    arrayList0.add("wx DbX(+a&Ud7[1Q");
    Climas climas0 = Climas.CHUVOSO;
    Destino destino0 = new Destino("wx DbX(+a&Ud7[1Q", (Integer) null, climas0, (Double) null, arrayList0);
    assertTrue(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao(0);
    fail("Expecting exception: IndexOutOfBoundsException");
    
    } catch(IndexOutOfBoundsException e) {
        //
        // Index: 1, Size: 0
        //
        verifyException("java.util.ArrayList", e);
    }
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    ArrayList<String> arrayList1 = destino0.getAtracoes();
    assertSame(arrayList0, arrayList1);
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    Integer integer0 = new Integer((-1592));
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double(0.0);
    Destino destino0 = new Destino("Cd1-v '", integer0, climas0, double0);
    // Undeclared exception!
    try { 
    destino0.adicionaAtracao("");
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(2084);
    Destino destino0 = new Destino("/|", (Integer) null, climas0, double0);
    Boolean boolean0 = destino0.getCidadeTuristica();
    assertFalse(boolean0);
}

@Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
      Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
      Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
      empresa0.adicionaCliente(cliente0);
      ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
      assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
      assertFalse(arrayList0.contains(cliente0));
  }

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("n[>;n,\"oV(UzKEMC.Z", 1285.07203100387, hashMap0);
    Carteira carteira0 = new Carteira(1285.07203100387, 1285.07203100387, 1285.07203100387);
    Cliente cliente0 = new Cliente("n[>;n,\"oV(UzKEMC.Z", 21, "n[>;n,\"oV(UzKEMC.Z", "n[>;n,\"oV(UzKEMC.Z", carteira0);
    Boolean boolean0 = Boolean.valueOf("n[>;n,\"oV(UzKEMC.Z");
    hashMap0.put(cliente0, boolean0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertFalse(arrayList0.contains(cliente0));
    assertEquals(1285.07203100387, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", hashMap0);
    HashMap<Cliente, Boolean> hashMap1 = new HashMap<Cliente, Boolean>(226, 226);
    empresa0.setClientes(hashMap1);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 0.0, hashMap0);
    empresa0.getNome();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", (-1900.3841), hashMap0);
    String string0 = empresa0.getNome();
    assertEquals((-1900.3841), empresa0.getCaixa(), 0.01);
    assertNotNull(string0);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Empresa empresa0 = new Empresa("", (Map<Cliente, Boolean>) null);
    empresa0.getClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    empresa0.adicionaCliente(cliente0);
    empresa0.getClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Empresa empresa0 = new Empresa("uULRcy-", (Map<Cliente, Boolean>) null);
    double double0 = empresa0.getCaixa();
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("P,#G", (-1.0), hashMap0);
    double double0 = empresa0.getCaixa();
    assertEquals((-1.0), double0, 0.01);
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    empresa0.buscaCliente(cliente0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Empresa empresa0 = new Empresa("S", 957.482814242, (Map<Cliente, Boolean>) null);
    Carteira carteira0 = new Carteira(0, 0, 0.0);
    Cliente cliente0 = new Cliente("}YR=,ddq.lk:(HQsj", 0, "3'1)DWuF!7xWhxZn>", "}YR=,ddq.lk:(HQsj", carteira0);
    // Undeclared exception!
    try { 
    empresa0.removeCliente(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", 0.0, hashMap0);
    Boolean boolean0 = new Boolean("example.app.models.Cliente");
    hashMap0.put((Cliente) null, boolean0);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientesAtivos();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Empresa empresa0 = new Empresa("]1)ZWIN|@j=", (-1249.0873), (Map<Cliente, Boolean>) null);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientes();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("`wAnG<PdzOk", hashMap0);
    Carteira carteira0 = new Carteira(0, 4618.8836, 4618.8836);
    Cliente cliente0 = new Cliente("^", 0, "^", "?K", carteira0);
    // Undeclared exception!
    try { 
    empresa0.buscaClienteAtivo(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    Empresa empresa0 = new Empresa("uULRcy-", (Map<Cliente, Boolean>) null);
    Carteira carteira0 = new Carteira(1274.862, 1.0, (-2609.2058285026246));
    Cliente cliente0 = new Cliente("uULRcy-", (-1), "uULRcy-", "uULRcy-", carteira0);
    // Undeclared exception!
    try { 
    empresa0.buscaCliente(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 0.0, hashMap0);
    // Undeclared exception!
    try { 
    empresa0.adicionaCliente((Cliente) null);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 20, "TB[E?\"W_wvfU", "");
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
    assertTrue(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
    assertFalse(arrayList0.contains(cliente0));
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 1.5874623117978444, hashMap0);
    Cliente cliente0 = new Cliente((String) null, (-6), (String) null, (String) null);
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertEquals(1.5874623117978444, empresa0.getCaixa(), 0.01);
    assertFalse(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test19()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("n:^1s:EBM'RLm7", hashMap0);
    Cliente cliente0 = new Cliente("n:^1s:EBM'RLm7", 20, "n:^1s:EBM'RLm7", "n:^1s:EBM'RLm7");
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    empresa0.listaTodosClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test20()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    empresa0.listaTodosClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test21()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    Boolean boolean1 = empresa0.buscaClienteAtivo(cliente0);
    assertTrue(boolean1);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test22()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, (-3457.176), hashMap0);
    Cliente cliente0 = new Cliente((String) null, (-177), (String) null, (String) null);
    Boolean boolean0 = empresa0.buscaCliente(cliente0);
    assertNotNull(boolean0);
    
    hashMap0.put(cliente0, boolean0);
    Boolean boolean1 = empresa0.buscaClienteAtivo(cliente0);
    assertFalse(boolean1);
    assertEquals((-3457.176), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test23()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("<q+ t*9k6", hashMap0);
    Boolean boolean0 = empresa0.buscaCliente((Cliente) null);
    hashMap0.put((Cliente) null, boolean0);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientesInativos();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test24()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
    assertTrue(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test25()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
    empresa0.removeCliente(cliente0);
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test26()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    String string0 = empresa0.getNome();
    assertNotNull(string0);
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test27()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    empresa0.setNome("TB[E?\"W_wvfU");
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test28()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
    
    empresa0.setCaixa(1.0);
    assertEquals(1.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test29()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 1.5874623117978444, hashMap0);
    double double0 = empresa0.getCaixa();
    assertEquals(1.5874623117978444, double0, 0.01);
}

@Test(timeout = 4000)
public void test30()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Map<Cliente, Boolean> map0 = empresa0.getClientes();
    assertNotNull(map0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}
@Test(timeout = 4000)
public void test00()  throws Throwable  {
    Carteira carteira0 = new Carteira((-650.538551823452), (-650.538551823452), 0.0);
    carteira0.compraNoDebito((-650.538551823452));
    assertEquals((-650.538551823452), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    Carteira carteira0 = new Carteira((-2355.999273853816), 1.0, (-2355.999273853816));
    carteira0.compraSaldo((-2355.999273853816));
    assertEquals((-4711.998547707632), carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 0.0, 0.0);
    double double0 = carteira0.saldoTotal();
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
    assertEquals(0.0, carteira0.getSaldo(), 0.01);
    assertEquals(0.0, double0, 0.01);
    assertEquals(0.0, carteira0.getLimiteCredito(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    Carteira carteira0 = new Carteira((-727.5563483680716), (-3650.3607966822), (-203.95121365749));
    double double0 = carteira0.saldoTotal();
    assertEquals((-4581.868358707762), double0, 0.01);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 1555.1866392665322, 417.7768413161);
    double double0 = carteira0.getSaldo();
    assertEquals(1972.9634805826322, carteira0.saldoTotal(), 0.01);
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    assertEquals(2324.018253662, carteira0.getSaldo(), 0.01);
    
    carteira0.adicionaSaldo((-2215.0));
    double double0 = carteira0.getSaldo();
    assertEquals((-2215.0), double0, 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.combinaSaldo();
    double double0 = carteira0.getLimiteDebito();
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Carteira carteira0 = new Carteira(648.0, 648.0, (-838.3974));
    double double0 = carteira0.getLimiteDebito();
    assertEquals((-838.3974), double0, 0.01);
    assertEquals(457.60260000000005, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 0.0, 0.0);
    double double0 = carteira0.getLimiteCredito();
    assertEquals(0.0, carteira0.getSaldo(), 0.01);
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Carteira carteira0 = new Carteira(6149.5508, 6149.5508, (-2952.19846496588));
    double double0 = carteira0.getLimiteCredito();
    assertEquals(6149.5508, double0, 0.01);
    assertEquals(9346.903135034121, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.setLimiteDebito((-1.0));
    assertEquals((-1.0), carteira0.getLimiteDebito(), 0.01);
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraNoDebito(0.0);
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.compraNoCredito((-2215.0));
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraNoCredito((-1.0));
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.compraSaldo((-922.6779147158));
    assertEquals(1401.3403389462, carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraSaldo(1.0);
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.setLimiteCredito((-736.0631747));
    carteira0.compraNoCredito((-2215.0));
    assertEquals((-2215.0), carteira0.getLimiteCredito(), 0.01);
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getLimiteDebito();
    assertEquals(2324.018253662, double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.combinaSaldo();
    carteira0.compraNoDebito(0.0);
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
}

@Test(timeout = 4000)
public void test19()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.setSaldo((-736.0631747));
    assertEquals((-736.0631747), carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test20()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getSaldo();
    assertEquals(2324.018253662, double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test21()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.saldoTotal();
    assertEquals(2433.036507324, double0, 0.01);
}

@Test(timeout = 4000)
public void test22()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getLimiteCredito();
    assertEquals((-2215.0), double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Cliente cliente0 = new Cliente("0GhM*h<_L", (-158), "0GhM*h<_L", "V");
      cliente0.fone = "WEd";
      cliente0.fone = null;
      String string0 = cliente0.getFone();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Cliente cliente0 = new Cliente("", 0, "", "");
      String string0 = cliente0.getFone();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Cliente cliente0 = new Cliente("Cw$sYN93Xw\"Y'Z", (-1233), "", "d(43f!u\"iA>gw|dWeD");
      String string0 = cliente0.getEmail();
      assertEquals("", string0);
      assertEquals("d(43f!u\"iA>gw|dWeD", cliente0.getFone());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Cliente cliente0 = new Cliente("", 0, "", "");
      Carteira carteira0 = cliente0.getCarteira();
      assertNull(carteira0);
  }

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Cliente cliente0 = new Cliente("example.app.models.Cliente", 2578, "n", "example.app.models.Cliente");
    Carteira carteira0 = new Carteira(0.0, (-1.0), 2578);
    cliente0.carteira = carteira0;
    Carteira carteira1 = new Carteira(2578, 2578, 2578);
    cliente0.carteira = carteira1;
    cliente0.getCarteira();
    assertEquals("n", cliente0.getEmail());
    assertEquals("example.app.models.Cliente", cliente0.getFone());
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Carteira carteira0 = new Carteira((-1), (-1), (-2515.202332146312));
    Cliente cliente0 = new Cliente("X`pJIm%lP4 7c<I", (-1), "X`pJIm%lP4 7c<I", "example.app.models.Cliente", carteira0);
    Carteira carteira1 = cliente0.getCarteira();
    assertEquals("example.app.models.Cliente", cliente0.getFone());
    assertNotNull(carteira1);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    cliente0.setCarteira(carteira0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
    assertEquals("Saldo insuficiente", cliente0.getEmail());
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
    
    cliente0.setFone("sgH,,");
    assertEquals("sgH,,", cliente0.getFone());
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    Carteira carteira1 = cliente0.getCarteira();
    assertNotNull(carteira1);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Cliente cliente0 = new Cliente((String) null, (-1), "", "");
    Carteira carteira0 = new Carteira(0.0, (-1), 191.0);
    cliente0.setCarteira(carteira0);
    assertEquals((-1), cliente0.getIdade());
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    String string0 = cliente0.getEmail();
    assertEquals("Saldo insuficiente", string0);
    assertNotNull(string0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    String string0 = cliente0.getFone();
    assertNotNull(string0);
    assertEquals("c9FBDOj26e9", string0);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
    
    cliente0.setEmail("sgH,,");
    cliente0.getEmail();
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test00()  throws Throwable  {
    Integer integer0 = new Integer(0);
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(1.0);
    Destino destino0 = new Destino("v?AN2Q/CTBc5qq", integer0, climas0, double0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    destino0.setAtracoes(arrayList0);
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    Double double1 = new Double(1);
    destino0.setPreco(double1);
    assertEquals((double)double1, (double)double0, 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    Integer integer0 = new Integer(898);
    Climas climas0 = Climas.AGRADAVEL;
    Double double0 = new Double(241.13417);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("5(`M2SL4][&MS", integer0, climas0, double0, arrayList0);
    destino0.adicionaAtracao("5(`M2SL4][&MS");
    destino0.removeAtracao((-1));
    assertEquals(241.13417, destino0.getPreco(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.VENTANIA;
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("+X<t_<&]", integer0, climas0, (Double) null, arrayList0);
    Double double0 = destino0.getPreco();
    assertNull(double0);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Integer integer0 = new Integer((-488));
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double((-488));
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("example.app.models.Destino", integer0, climas0, double0, arrayList0);
    Double double1 = destino0.getPreco();
    assertEquals((-488.0), (double)double1, 0.01);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Double double0 = new Double(0.0);
    Climas climas0 = Climas.CHUVOSO;
    Destino destino0 = new Destino("wx DbX(+a&Ud7[1Q", (Integer) null, climas0, (Double) null, arrayList0);
    destino0.preco = double0;
    Double double1 = destino0.getPreco();
    assertEquals(0.0, (double)double1, 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Integer integer0 = new Integer((-2376));
    Climas climas0 = Climas.VENTANIA;
    Double double0 = new Double(187.6725);
    Destino destino0 = new Destino((String) null, integer0, climas0, double0);
    Double double1 = destino0.getPreco();
    assertNotNull(double1);
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(0.0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("", (Integer) null, climas0, double0, arrayList0);
    Boolean boolean0 = destino0.getCidadeTuristica();
    assertNull(boolean0);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Integer integer0 = new Integer(662);
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double(0.0);
    Destino destino0 = new Destino((String) null, integer0, climas0, double0);
    assertFalse(destino0.getCidadeTuristica());
    
    Boolean boolean0 = Boolean.valueOf(true);
    destino0.setCidadeTuristica(boolean0);
    destino0.getCidadeTuristica();
    assertTrue(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(2084);
    Destino destino0 = new Destino("/|", (Integer) null, climas0, double0);
    destino0.getAtracoes();
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    destino0.adicionaAtracao((String) null);
    ArrayList<String> arrayList1 = destino0.getAtracoes();
    assertFalse(arrayList1.contains("CHUVOSO"));
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Integer integer0 = new Integer((-1106));
    Climas climas0 = Climas.AGRADAVEL;
    Double double0 = new Double((-982.9847914361264));
    Destino destino0 = new Destino("example.app.models.Cidade", integer0, climas0, double0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao((-635));
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(0.0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("", (Integer) null, climas0, double0, arrayList0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao((-1327));
    fail("Expecting exception: ArrayIndexOutOfBoundsException");
    
    } catch(ArrayIndexOutOfBoundsException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    Integer integer0 = new Integer(5317);
    Climas climas0 = Climas.VENTANIA;
    Double double0 = new Double(5317);
    Destino destino0 = null;
    try {
    destino0 = new Destino("", integer0, climas0, double0, (ArrayList<String>) null);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    ArrayList<String> arrayList0 = new ArrayList<String>();
    arrayList0.add("");
    arrayList0.add((String) null);
    arrayList0.add("");
    arrayList0.add("");
    arrayList0.add("~~LOk|W6");
    arrayList0.add("wx DbX(+a&Ud7[1Q");
    Climas climas0 = Climas.CHUVOSO;
    Destino destino0 = new Destino("wx DbX(+a&Ud7[1Q", (Integer) null, climas0, (Double) null, arrayList0);
    assertTrue(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao(0);
    fail("Expecting exception: IndexOutOfBoundsException");
    
    } catch(IndexOutOfBoundsException e) {
        //
        // Index: 1, Size: 0
        //
        verifyException("java.util.ArrayList", e);
    }
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    ArrayList<String> arrayList1 = destino0.getAtracoes();
    assertSame(arrayList0, arrayList1);
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    Integer integer0 = new Integer((-1592));
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double(0.0);
    Destino destino0 = new Destino("Cd1-v '", integer0, climas0, double0);
    // Undeclared exception!
    try { 
    destino0.adicionaAtracao("");
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(2084);
    Destino destino0 = new Destino("/|", (Integer) null, climas0, double0);
    Boolean boolean0 = destino0.getCidadeTuristica();
    assertFalse(boolean0);
}

@Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
      Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
      Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
      empresa0.adicionaCliente(cliente0);
      ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
      assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
      assertFalse(arrayList0.contains(cliente0));
  }

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("n[>;n,\"oV(UzKEMC.Z", 1285.07203100387, hashMap0);
    Carteira carteira0 = new Carteira(1285.07203100387, 1285.07203100387, 1285.07203100387);
    Cliente cliente0 = new Cliente("n[>;n,\"oV(UzKEMC.Z", 21, "n[>;n,\"oV(UzKEMC.Z", "n[>;n,\"oV(UzKEMC.Z", carteira0);
    Boolean boolean0 = Boolean.valueOf("n[>;n,\"oV(UzKEMC.Z");
    hashMap0.put(cliente0, boolean0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertFalse(arrayList0.contains(cliente0));
    assertEquals(1285.07203100387, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", hashMap0);
    HashMap<Cliente, Boolean> hashMap1 = new HashMap<Cliente, Boolean>(226, 226);
    empresa0.setClientes(hashMap1);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 0.0, hashMap0);
    empresa0.getNome();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", (-1900.3841), hashMap0);
    String string0 = empresa0.getNome();
    assertEquals((-1900.3841), empresa0.getCaixa(), 0.01);
    assertNotNull(string0);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Empresa empresa0 = new Empresa("", (Map<Cliente, Boolean>) null);
    empresa0.getClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    empresa0.adicionaCliente(cliente0);
    empresa0.getClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Empresa empresa0 = new Empresa("uULRcy-", (Map<Cliente, Boolean>) null);
    double double0 = empresa0.getCaixa();
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("P,#G", (-1.0), hashMap0);
    double double0 = empresa0.getCaixa();
    assertEquals((-1.0), double0, 0.01);
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    empresa0.buscaCliente(cliente0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Empresa empresa0 = new Empresa("S", 957.482814242, (Map<Cliente, Boolean>) null);
    Carteira carteira0 = new Carteira(0, 0, 0.0);
    Cliente cliente0 = new Cliente("}YR=,ddq.lk:(HQsj", 0, "3'1)DWuF!7xWhxZn>", "}YR=,ddq.lk:(HQsj", carteira0);
    // Undeclared exception!
    try { 
    empresa0.removeCliente(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", 0.0, hashMap0);
    Boolean boolean0 = new Boolean("example.app.models.Cliente");
    hashMap0.put((Cliente) null, boolean0);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientesAtivos();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Empresa empresa0 = new Empresa("]1)ZWIN|@j=", (-1249.0873), (Map<Cliente, Boolean>) null);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientes();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("`wAnG<PdzOk", hashMap0);
    Carteira carteira0 = new Carteira(0, 4618.8836, 4618.8836);
    Cliente cliente0 = new Cliente("^", 0, "^", "?K", carteira0);
    // Undeclared exception!
    try { 
    empresa0.buscaClienteAtivo(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    Empresa empresa0 = new Empresa("uULRcy-", (Map<Cliente, Boolean>) null);
    Carteira carteira0 = new Carteira(1274.862, 1.0, (-2609.2058285026246));
    Cliente cliente0 = new Cliente("uULRcy-", (-1), "uULRcy-", "uULRcy-", carteira0);
    // Undeclared exception!
    try { 
    empresa0.buscaCliente(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 0.0, hashMap0);
    // Undeclared exception!
    try { 
    empresa0.adicionaCliente((Cliente) null);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 20, "TB[E?\"W_wvfU", "");
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
    assertTrue(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
    assertFalse(arrayList0.contains(cliente0));
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 1.5874623117978444, hashMap0);
    Cliente cliente0 = new Cliente((String) null, (-6), (String) null, (String) null);
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertEquals(1.5874623117978444, empresa0.getCaixa(), 0.01);
    assertFalse(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test19()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("n:^1s:EBM'RLm7", hashMap0);
    Cliente cliente0 = new Cliente("n:^1s:EBM'RLm7", 20, "n:^1s:EBM'RLm7", "n:^1s:EBM'RLm7");
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    empresa0.listaTodosClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test20()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    empresa0.listaTodosClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test21()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    Boolean boolean1 = empresa0.buscaClienteAtivo(cliente0);
    assertTrue(boolean1);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test22()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, (-3457.176), hashMap0);
    Cliente cliente0 = new Cliente((String) null, (-177), (String) null, (String) null);
    Boolean boolean0 = empresa0.buscaCliente(cliente0);
    assertNotNull(boolean0);
    
    hashMap0.put(cliente0, boolean0);
    Boolean boolean1 = empresa0.buscaClienteAtivo(cliente0);
    assertFalse(boolean1);
    assertEquals((-3457.176), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test23()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("<q+ t*9k6", hashMap0);
    Boolean boolean0 = empresa0.buscaCliente((Cliente) null);
    hashMap0.put((Cliente) null, boolean0);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientesInativos();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test24()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
    assertTrue(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test25()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
    empresa0.removeCliente(cliente0);
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test26()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    String string0 = empresa0.getNome();
    assertNotNull(string0);
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test27()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    empresa0.setNome("TB[E?\"W_wvfU");
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test28()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
    
    empresa0.setCaixa(1.0);
    assertEquals(1.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test29()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 1.5874623117978444, hashMap0);
    double double0 = empresa0.getCaixa();
    assertEquals(1.5874623117978444, double0, 0.01);
}

@Test(timeout = 4000)
public void test30()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Map<Cliente, Boolean> map0 = empresa0.getClientes();
    assertNotNull(map0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}
@Test(timeout = 4000)
public void test00()  throws Throwable  {
    Carteira carteira0 = new Carteira((-650.538551823452), (-650.538551823452), 0.0);
    carteira0.compraNoDebito((-650.538551823452));
    assertEquals((-650.538551823452), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    Carteira carteira0 = new Carteira((-2355.999273853816), 1.0, (-2355.999273853816));
    carteira0.compraSaldo((-2355.999273853816));
    assertEquals((-4711.998547707632), carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 0.0, 0.0);
    double double0 = carteira0.saldoTotal();
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
    assertEquals(0.0, carteira0.getSaldo(), 0.01);
    assertEquals(0.0, double0, 0.01);
    assertEquals(0.0, carteira0.getLimiteCredito(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    Carteira carteira0 = new Carteira((-727.5563483680716), (-3650.3607966822), (-203.95121365749));
    double double0 = carteira0.saldoTotal();
    assertEquals((-4581.868358707762), double0, 0.01);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 1555.1866392665322, 417.7768413161);
    double double0 = carteira0.getSaldo();
    assertEquals(1972.9634805826322, carteira0.saldoTotal(), 0.01);
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    assertEquals(2324.018253662, carteira0.getSaldo(), 0.01);
    
    carteira0.adicionaSaldo((-2215.0));
    double double0 = carteira0.getSaldo();
    assertEquals((-2215.0), double0, 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.combinaSaldo();
    double double0 = carteira0.getLimiteDebito();
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Carteira carteira0 = new Carteira(648.0, 648.0, (-838.3974));
    double double0 = carteira0.getLimiteDebito();
    assertEquals((-838.3974), double0, 0.01);
    assertEquals(457.60260000000005, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 0.0, 0.0);
    double double0 = carteira0.getLimiteCredito();
    assertEquals(0.0, carteira0.getSaldo(), 0.01);
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Carteira carteira0 = new Carteira(6149.5508, 6149.5508, (-2952.19846496588));
    double double0 = carteira0.getLimiteCredito();
    assertEquals(6149.5508, double0, 0.01);
    assertEquals(9346.903135034121, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.setLimiteDebito((-1.0));
    assertEquals((-1.0), carteira0.getLimiteDebito(), 0.01);
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraNoDebito(0.0);
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.compraNoCredito((-2215.0));
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraNoCredito((-1.0));
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.compraSaldo((-922.6779147158));
    assertEquals(1401.3403389462, carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraSaldo(1.0);
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.setLimiteCredito((-736.0631747));
    carteira0.compraNoCredito((-2215.0));
    assertEquals((-2215.0), carteira0.getLimiteCredito(), 0.01);
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getLimiteDebito();
    assertEquals(2324.018253662, double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.combinaSaldo();
    carteira0.compraNoDebito(0.0);
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
}

@Test(timeout = 4000)
public void test19()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.setSaldo((-736.0631747));
    assertEquals((-736.0631747), carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test20()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getSaldo();
    assertEquals(2324.018253662, double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test21()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.saldoTotal();
    assertEquals(2433.036507324, double0, 0.01);
}

@Test(timeout = 4000)
public void test22()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getLimiteCredito();
    assertEquals((-2215.0), double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Cliente cliente0 = new Cliente("0GhM*h<_L", (-158), "0GhM*h<_L", "V");
      cliente0.fone = "WEd";
      cliente0.fone = null;
      String string0 = cliente0.getFone();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Cliente cliente0 = new Cliente("", 0, "", "");
      String string0 = cliente0.getFone();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Cliente cliente0 = new Cliente("Cw$sYN93Xw\"Y'Z", (-1233), "", "d(43f!u\"iA>gw|dWeD");
      String string0 = cliente0.getEmail();
      assertEquals("", string0);
      assertEquals("d(43f!u\"iA>gw|dWeD", cliente0.getFone());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Cliente cliente0 = new Cliente("", 0, "", "");
      Carteira carteira0 = cliente0.getCarteira();
      assertNull(carteira0);
  }

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Cliente cliente0 = new Cliente("example.app.models.Cliente", 2578, "n", "example.app.models.Cliente");
    Carteira carteira0 = new Carteira(0.0, (-1.0), 2578);
    cliente0.carteira = carteira0;
    Carteira carteira1 = new Carteira(2578, 2578, 2578);
    cliente0.carteira = carteira1;
    cliente0.getCarteira();
    assertEquals("n", cliente0.getEmail());
    assertEquals("example.app.models.Cliente", cliente0.getFone());
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Carteira carteira0 = new Carteira((-1), (-1), (-2515.202332146312));
    Cliente cliente0 = new Cliente("X`pJIm%lP4 7c<I", (-1), "X`pJIm%lP4 7c<I", "example.app.models.Cliente", carteira0);
    Carteira carteira1 = cliente0.getCarteira();
    assertEquals("example.app.models.Cliente", cliente0.getFone());
    assertNotNull(carteira1);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    cliente0.setCarteira(carteira0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
    assertEquals("Saldo insuficiente", cliente0.getEmail());
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
    
    cliente0.setFone("sgH,,");
    assertEquals("sgH,,", cliente0.getFone());
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    Carteira carteira1 = cliente0.getCarteira();
    assertNotNull(carteira1);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Cliente cliente0 = new Cliente((String) null, (-1), "", "");
    Carteira carteira0 = new Carteira(0.0, (-1), 191.0);
    cliente0.setCarteira(carteira0);
    assertEquals((-1), cliente0.getIdade());
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    String string0 = cliente0.getEmail();
    assertEquals("Saldo insuficiente", string0);
    assertNotNull(string0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    String string0 = cliente0.getFone();
    assertNotNull(string0);
    assertEquals("c9FBDOj26e9", string0);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
    
    cliente0.setEmail("sgH,,");
    cliente0.getEmail();
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test00()  throws Throwable  {
    Integer integer0 = new Integer(0);
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(1.0);
    Destino destino0 = new Destino("v?AN2Q/CTBc5qq", integer0, climas0, double0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    destino0.setAtracoes(arrayList0);
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    Double double1 = new Double(1);
    destino0.setPreco(double1);
    assertEquals((double)double1, (double)double0, 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    Integer integer0 = new Integer(898);
    Climas climas0 = Climas.AGRADAVEL;
    Double double0 = new Double(241.13417);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("5(`M2SL4][&MS", integer0, climas0, double0, arrayList0);
    destino0.adicionaAtracao("5(`M2SL4][&MS");
    destino0.removeAtracao((-1));
    assertEquals(241.13417, destino0.getPreco(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.VENTANIA;
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("+X<t_<&]", integer0, climas0, (Double) null, arrayList0);
    Double double0 = destino0.getPreco();
    assertNull(double0);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Integer integer0 = new Integer((-488));
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double((-488));
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("example.app.models.Destino", integer0, climas0, double0, arrayList0);
    Double double1 = destino0.getPreco();
    assertEquals((-488.0), (double)double1, 0.01);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Double double0 = new Double(0.0);
    Climas climas0 = Climas.CHUVOSO;
    Destino destino0 = new Destino("wx DbX(+a&Ud7[1Q", (Integer) null, climas0, (Double) null, arrayList0);
    destino0.preco = double0;
    Double double1 = destino0.getPreco();
    assertEquals(0.0, (double)double1, 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Integer integer0 = new Integer((-2376));
    Climas climas0 = Climas.VENTANIA;
    Double double0 = new Double(187.6725);
    Destino destino0 = new Destino((String) null, integer0, climas0, double0);
    Double double1 = destino0.getPreco();
    assertNotNull(double1);
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(0.0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("", (Integer) null, climas0, double0, arrayList0);
    Boolean boolean0 = destino0.getCidadeTuristica();
    assertNull(boolean0);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Integer integer0 = new Integer(662);
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double(0.0);
    Destino destino0 = new Destino((String) null, integer0, climas0, double0);
    assertFalse(destino0.getCidadeTuristica());
    
    Boolean boolean0 = Boolean.valueOf(true);
    destino0.setCidadeTuristica(boolean0);
    destino0.getCidadeTuristica();
    assertTrue(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(2084);
    Destino destino0 = new Destino("/|", (Integer) null, climas0, double0);
    destino0.getAtracoes();
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    destino0.adicionaAtracao((String) null);
    ArrayList<String> arrayList1 = destino0.getAtracoes();
    assertFalse(arrayList1.contains("CHUVOSO"));
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Integer integer0 = new Integer((-1106));
    Climas climas0 = Climas.AGRADAVEL;
    Double double0 = new Double((-982.9847914361264));
    Destino destino0 = new Destino("example.app.models.Cidade", integer0, climas0, double0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao((-635));
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(0.0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("", (Integer) null, climas0, double0, arrayList0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao((-1327));
    fail("Expecting exception: ArrayIndexOutOfBoundsException");
    
    } catch(ArrayIndexOutOfBoundsException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    Integer integer0 = new Integer(5317);
    Climas climas0 = Climas.VENTANIA;
    Double double0 = new Double(5317);
    Destino destino0 = null;
    try {
    destino0 = new Destino("", integer0, climas0, double0, (ArrayList<String>) null);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    ArrayList<String> arrayList0 = new ArrayList<String>();
    arrayList0.add("");
    arrayList0.add((String) null);
    arrayList0.add("");
    arrayList0.add("");
    arrayList0.add("~~LOk|W6");
    arrayList0.add("wx DbX(+a&Ud7[1Q");
    Climas climas0 = Climas.CHUVOSO;
    Destino destino0 = new Destino("wx DbX(+a&Ud7[1Q", (Integer) null, climas0, (Double) null, arrayList0);
    assertTrue(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao(0);
    fail("Expecting exception: IndexOutOfBoundsException");
    
    } catch(IndexOutOfBoundsException e) {
        //
        // Index: 1, Size: 0
        //
        verifyException("java.util.ArrayList", e);
    }
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    ArrayList<String> arrayList1 = destino0.getAtracoes();
    assertSame(arrayList0, arrayList1);
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    Integer integer0 = new Integer((-1592));
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double(0.0);
    Destino destino0 = new Destino("Cd1-v '", integer0, climas0, double0);
    // Undeclared exception!
    try { 
    destino0.adicionaAtracao("");
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(2084);
    Destino destino0 = new Destino("/|", (Integer) null, climas0, double0);
    Boolean boolean0 = destino0.getCidadeTuristica();
    assertFalse(boolean0);
}

@Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
      Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
      Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
      empresa0.adicionaCliente(cliente0);
      ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
      assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
      assertFalse(arrayList0.contains(cliente0));
  }

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("n[>;n,\"oV(UzKEMC.Z", 1285.07203100387, hashMap0);
    Carteira carteira0 = new Carteira(1285.07203100387, 1285.07203100387, 1285.07203100387);
    Cliente cliente0 = new Cliente("n[>;n,\"oV(UzKEMC.Z", 21, "n[>;n,\"oV(UzKEMC.Z", "n[>;n,\"oV(UzKEMC.Z", carteira0);
    Boolean boolean0 = Boolean.valueOf("n[>;n,\"oV(UzKEMC.Z");
    hashMap0.put(cliente0, boolean0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertFalse(arrayList0.contains(cliente0));
    assertEquals(1285.07203100387, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", hashMap0);
    HashMap<Cliente, Boolean> hashMap1 = new HashMap<Cliente, Boolean>(226, 226);
    empresa0.setClientes(hashMap1);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 0.0, hashMap0);
    empresa0.getNome();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", (-1900.3841), hashMap0);
    String string0 = empresa0.getNome();
    assertEquals((-1900.3841), empresa0.getCaixa(), 0.01);
    assertNotNull(string0);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Empresa empresa0 = new Empresa("", (Map<Cliente, Boolean>) null);
    empresa0.getClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    empresa0.adicionaCliente(cliente0);
    empresa0.getClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Empresa empresa0 = new Empresa("uULRcy-", (Map<Cliente, Boolean>) null);
    double double0 = empresa0.getCaixa();
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("P,#G", (-1.0), hashMap0);
    double double0 = empresa0.getCaixa();
    assertEquals((-1.0), double0, 0.01);
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    empresa0.buscaCliente(cliente0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Empresa empresa0 = new Empresa("S", 957.482814242, (Map<Cliente, Boolean>) null);
    Carteira carteira0 = new Carteira(0, 0, 0.0);
    Cliente cliente0 = new Cliente("}YR=,ddq.lk:(HQsj", 0, "3'1)DWuF!7xWhxZn>", "}YR=,ddq.lk:(HQsj", carteira0);
    // Undeclared exception!
    try { 
    empresa0.removeCliente(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", 0.0, hashMap0);
    Boolean boolean0 = new Boolean("example.app.models.Cliente");
    hashMap0.put((Cliente) null, boolean0);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientesAtivos();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Empresa empresa0 = new Empresa("]1)ZWIN|@j=", (-1249.0873), (Map<Cliente, Boolean>) null);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientes();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("`wAnG<PdzOk", hashMap0);
    Carteira carteira0 = new Carteira(0, 4618.8836, 4618.8836);
    Cliente cliente0 = new Cliente("^", 0, "^", "?K", carteira0);
    // Undeclared exception!
    try { 
    empresa0.buscaClienteAtivo(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    Empresa empresa0 = new Empresa("uULRcy-", (Map<Cliente, Boolean>) null);
    Carteira carteira0 = new Carteira(1274.862, 1.0, (-2609.2058285026246));
    Cliente cliente0 = new Cliente("uULRcy-", (-1), "uULRcy-", "uULRcy-", carteira0);
    // Undeclared exception!
    try { 
    empresa0.buscaCliente(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 0.0, hashMap0);
    // Undeclared exception!
    try { 
    empresa0.adicionaCliente((Cliente) null);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 20, "TB[E?\"W_wvfU", "");
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
    assertTrue(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
    assertFalse(arrayList0.contains(cliente0));
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 1.5874623117978444, hashMap0);
    Cliente cliente0 = new Cliente((String) null, (-6), (String) null, (String) null);
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertEquals(1.5874623117978444, empresa0.getCaixa(), 0.01);
    assertFalse(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test19()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("n:^1s:EBM'RLm7", hashMap0);
    Cliente cliente0 = new Cliente("n:^1s:EBM'RLm7", 20, "n:^1s:EBM'RLm7", "n:^1s:EBM'RLm7");
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    empresa0.listaTodosClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test20()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    empresa0.listaTodosClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test21()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    Boolean boolean1 = empresa0.buscaClienteAtivo(cliente0);
    assertTrue(boolean1);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test22()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, (-3457.176), hashMap0);
    Cliente cliente0 = new Cliente((String) null, (-177), (String) null, (String) null);
    Boolean boolean0 = empresa0.buscaCliente(cliente0);
    assertNotNull(boolean0);
    
    hashMap0.put(cliente0, boolean0);
    Boolean boolean1 = empresa0.buscaClienteAtivo(cliente0);
    assertFalse(boolean1);
    assertEquals((-3457.176), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test23()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("<q+ t*9k6", hashMap0);
    Boolean boolean0 = empresa0.buscaCliente((Cliente) null);
    hashMap0.put((Cliente) null, boolean0);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientesInativos();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test24()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
    assertTrue(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test25()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
    empresa0.removeCliente(cliente0);
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test26()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    String string0 = empresa0.getNome();
    assertNotNull(string0);
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test27()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    empresa0.setNome("TB[E?\"W_wvfU");
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test28()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
    
    empresa0.setCaixa(1.0);
    assertEquals(1.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test29()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 1.5874623117978444, hashMap0);
    double double0 = empresa0.getCaixa();
    assertEquals(1.5874623117978444, double0, 0.01);
}

@Test(timeout = 4000)
public void test30()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Map<Cliente, Boolean> map0 = empresa0.getClientes();
    assertNotNull(map0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}
@Test(timeout = 4000)
public void test00()  throws Throwable  {
    Carteira carteira0 = new Carteira((-650.538551823452), (-650.538551823452), 0.0);
    carteira0.compraNoDebito((-650.538551823452));
    assertEquals((-650.538551823452), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    Carteira carteira0 = new Carteira((-2355.999273853816), 1.0, (-2355.999273853816));
    carteira0.compraSaldo((-2355.999273853816));
    assertEquals((-4711.998547707632), carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 0.0, 0.0);
    double double0 = carteira0.saldoTotal();
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
    assertEquals(0.0, carteira0.getSaldo(), 0.01);
    assertEquals(0.0, double0, 0.01);
    assertEquals(0.0, carteira0.getLimiteCredito(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    Carteira carteira0 = new Carteira((-727.5563483680716), (-3650.3607966822), (-203.95121365749));
    double double0 = carteira0.saldoTotal();
    assertEquals((-4581.868358707762), double0, 0.01);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 1555.1866392665322, 417.7768413161);
    double double0 = carteira0.getSaldo();
    assertEquals(1972.9634805826322, carteira0.saldoTotal(), 0.01);
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    assertEquals(2324.018253662, carteira0.getSaldo(), 0.01);
    
    carteira0.adicionaSaldo((-2215.0));
    double double0 = carteira0.getSaldo();
    assertEquals((-2215.0), double0, 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.combinaSaldo();
    double double0 = carteira0.getLimiteDebito();
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Carteira carteira0 = new Carteira(648.0, 648.0, (-838.3974));
    double double0 = carteira0.getLimiteDebito();
    assertEquals((-838.3974), double0, 0.01);
    assertEquals(457.60260000000005, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 0.0, 0.0);
    double double0 = carteira0.getLimiteCredito();
    assertEquals(0.0, carteira0.getSaldo(), 0.01);
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Carteira carteira0 = new Carteira(6149.5508, 6149.5508, (-2952.19846496588));
    double double0 = carteira0.getLimiteCredito();
    assertEquals(6149.5508, double0, 0.01);
    assertEquals(9346.903135034121, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.setLimiteDebito((-1.0));
    assertEquals((-1.0), carteira0.getLimiteDebito(), 0.01);
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraNoDebito(0.0);
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.compraNoCredito((-2215.0));
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraNoCredito((-1.0));
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.compraSaldo((-922.6779147158));
    assertEquals(1401.3403389462, carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraSaldo(1.0);
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.setLimiteCredito((-736.0631747));
    carteira0.compraNoCredito((-2215.0));
    assertEquals((-2215.0), carteira0.getLimiteCredito(), 0.01);
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getLimiteDebito();
    assertEquals(2324.018253662, double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.combinaSaldo();
    carteira0.compraNoDebito(0.0);
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
}

@Test(timeout = 4000)
public void test19()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.setSaldo((-736.0631747));
    assertEquals((-736.0631747), carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test20()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getSaldo();
    assertEquals(2324.018253662, double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test21()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.saldoTotal();
    assertEquals(2433.036507324, double0, 0.01);
}

@Test(timeout = 4000)
public void test22()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getLimiteCredito();
    assertEquals((-2215.0), double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Cliente cliente0 = new Cliente("0GhM*h<_L", (-158), "0GhM*h<_L", "V");
      cliente0.fone = "WEd";
      cliente0.fone = null;
      String string0 = cliente0.getFone();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Cliente cliente0 = new Cliente("", 0, "", "");
      String string0 = cliente0.getFone();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Cliente cliente0 = new Cliente("Cw$sYN93Xw\"Y'Z", (-1233), "", "d(43f!u\"iA>gw|dWeD");
      String string0 = cliente0.getEmail();
      assertEquals("", string0);
      assertEquals("d(43f!u\"iA>gw|dWeD", cliente0.getFone());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Cliente cliente0 = new Cliente("", 0, "", "");
      Carteira carteira0 = cliente0.getCarteira();
      assertNull(carteira0);
  }

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Cliente cliente0 = new Cliente("example.app.models.Cliente", 2578, "n", "example.app.models.Cliente");
    Carteira carteira0 = new Carteira(0.0, (-1.0), 2578);
    cliente0.carteira = carteira0;
    Carteira carteira1 = new Carteira(2578, 2578, 2578);
    cliente0.carteira = carteira1;
    cliente0.getCarteira();
    assertEquals("n", cliente0.getEmail());
    assertEquals("example.app.models.Cliente", cliente0.getFone());
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Carteira carteira0 = new Carteira((-1), (-1), (-2515.202332146312));
    Cliente cliente0 = new Cliente("X`pJIm%lP4 7c<I", (-1), "X`pJIm%lP4 7c<I", "example.app.models.Cliente", carteira0);
    Carteira carteira1 = cliente0.getCarteira();
    assertEquals("example.app.models.Cliente", cliente0.getFone());
    assertNotNull(carteira1);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    cliente0.setCarteira(carteira0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
    assertEquals("Saldo insuficiente", cliente0.getEmail());
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
    
    cliente0.setFone("sgH,,");
    assertEquals("sgH,,", cliente0.getFone());
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    Carteira carteira1 = cliente0.getCarteira();
    assertNotNull(carteira1);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Cliente cliente0 = new Cliente((String) null, (-1), "", "");
    Carteira carteira0 = new Carteira(0.0, (-1), 191.0);
    cliente0.setCarteira(carteira0);
    assertEquals((-1), cliente0.getIdade());
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    String string0 = cliente0.getEmail();
    assertEquals("Saldo insuficiente", string0);
    assertNotNull(string0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    String string0 = cliente0.getFone();
    assertNotNull(string0);
    assertEquals("c9FBDOj26e9", string0);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
    
    cliente0.setEmail("sgH,,");
    cliente0.getEmail();
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test00()  throws Throwable  {
    Integer integer0 = new Integer(0);
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(1.0);
    Destino destino0 = new Destino("v?AN2Q/CTBc5qq", integer0, climas0, double0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    destino0.setAtracoes(arrayList0);
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    Double double1 = new Double(1);
    destino0.setPreco(double1);
    assertEquals((double)double1, (double)double0, 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    Integer integer0 = new Integer(898);
    Climas climas0 = Climas.AGRADAVEL;
    Double double0 = new Double(241.13417);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("5(`M2SL4][&MS", integer0, climas0, double0, arrayList0);
    destino0.adicionaAtracao("5(`M2SL4][&MS");
    destino0.removeAtracao((-1));
    assertEquals(241.13417, destino0.getPreco(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.VENTANIA;
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("+X<t_<&]", integer0, climas0, (Double) null, arrayList0);
    Double double0 = destino0.getPreco();
    assertNull(double0);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Integer integer0 = new Integer((-488));
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double((-488));
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("example.app.models.Destino", integer0, climas0, double0, arrayList0);
    Double double1 = destino0.getPreco();
    assertEquals((-488.0), (double)double1, 0.01);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Double double0 = new Double(0.0);
    Climas climas0 = Climas.CHUVOSO;
    Destino destino0 = new Destino("wx DbX(+a&Ud7[1Q", (Integer) null, climas0, (Double) null, arrayList0);
    destino0.preco = double0;
    Double double1 = destino0.getPreco();
    assertEquals(0.0, (double)double1, 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Integer integer0 = new Integer((-2376));
    Climas climas0 = Climas.VENTANIA;
    Double double0 = new Double(187.6725);
    Destino destino0 = new Destino((String) null, integer0, climas0, double0);
    Double double1 = destino0.getPreco();
    assertNotNull(double1);
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(0.0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("", (Integer) null, climas0, double0, arrayList0);
    Boolean boolean0 = destino0.getCidadeTuristica();
    assertNull(boolean0);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Integer integer0 = new Integer(662);
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double(0.0);
    Destino destino0 = new Destino((String) null, integer0, climas0, double0);
    assertFalse(destino0.getCidadeTuristica());
    
    Boolean boolean0 = Boolean.valueOf(true);
    destino0.setCidadeTuristica(boolean0);
    destino0.getCidadeTuristica();
    assertTrue(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(2084);
    Destino destino0 = new Destino("/|", (Integer) null, climas0, double0);
    destino0.getAtracoes();
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    destino0.adicionaAtracao((String) null);
    ArrayList<String> arrayList1 = destino0.getAtracoes();
    assertFalse(arrayList1.contains("CHUVOSO"));
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Integer integer0 = new Integer((-1106));
    Climas climas0 = Climas.AGRADAVEL;
    Double double0 = new Double((-982.9847914361264));
    Destino destino0 = new Destino("example.app.models.Cidade", integer0, climas0, double0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao((-635));
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(0.0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("", (Integer) null, climas0, double0, arrayList0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao((-1327));
    fail("Expecting exception: ArrayIndexOutOfBoundsException");
    
    } catch(ArrayIndexOutOfBoundsException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    Integer integer0 = new Integer(5317);
    Climas climas0 = Climas.VENTANIA;
    Double double0 = new Double(5317);
    Destino destino0 = null;
    try {
    destino0 = new Destino("", integer0, climas0, double0, (ArrayList<String>) null);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    ArrayList<String> arrayList0 = new ArrayList<String>();
    arrayList0.add("");
    arrayList0.add((String) null);
    arrayList0.add("");
    arrayList0.add("");
    arrayList0.add("~~LOk|W6");
    arrayList0.add("wx DbX(+a&Ud7[1Q");
    Climas climas0 = Climas.CHUVOSO;
    Destino destino0 = new Destino("wx DbX(+a&Ud7[1Q", (Integer) null, climas0, (Double) null, arrayList0);
    assertTrue(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao(0);
    fail("Expecting exception: IndexOutOfBoundsException");
    
    } catch(IndexOutOfBoundsException e) {
        //
        // Index: 1, Size: 0
        //
        verifyException("java.util.ArrayList", e);
    }
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    ArrayList<String> arrayList1 = destino0.getAtracoes();
    assertSame(arrayList0, arrayList1);
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    Integer integer0 = new Integer((-1592));
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double(0.0);
    Destino destino0 = new Destino("Cd1-v '", integer0, climas0, double0);
    // Undeclared exception!
    try { 
    destino0.adicionaAtracao("");
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(2084);
    Destino destino0 = new Destino("/|", (Integer) null, climas0, double0);
    Boolean boolean0 = destino0.getCidadeTuristica();
    assertFalse(boolean0);
}

@Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
      Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
      Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
      empresa0.adicionaCliente(cliente0);
      ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
      assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
      assertFalse(arrayList0.contains(cliente0));
  }

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("n[>;n,\"oV(UzKEMC.Z", 1285.07203100387, hashMap0);
    Carteira carteira0 = new Carteira(1285.07203100387, 1285.07203100387, 1285.07203100387);
    Cliente cliente0 = new Cliente("n[>;n,\"oV(UzKEMC.Z", 21, "n[>;n,\"oV(UzKEMC.Z", "n[>;n,\"oV(UzKEMC.Z", carteira0);
    Boolean boolean0 = Boolean.valueOf("n[>;n,\"oV(UzKEMC.Z");
    hashMap0.put(cliente0, boolean0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertFalse(arrayList0.contains(cliente0));
    assertEquals(1285.07203100387, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", hashMap0);
    HashMap<Cliente, Boolean> hashMap1 = new HashMap<Cliente, Boolean>(226, 226);
    empresa0.setClientes(hashMap1);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 0.0, hashMap0);
    empresa0.getNome();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", (-1900.3841), hashMap0);
    String string0 = empresa0.getNome();
    assertEquals((-1900.3841), empresa0.getCaixa(), 0.01);
    assertNotNull(string0);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Empresa empresa0 = new Empresa("", (Map<Cliente, Boolean>) null);
    empresa0.getClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    empresa0.adicionaCliente(cliente0);
    empresa0.getClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Empresa empresa0 = new Empresa("uULRcy-", (Map<Cliente, Boolean>) null);
    double double0 = empresa0.getCaixa();
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("P,#G", (-1.0), hashMap0);
    double double0 = empresa0.getCaixa();
    assertEquals((-1.0), double0, 0.01);
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    empresa0.buscaCliente(cliente0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Empresa empresa0 = new Empresa("S", 957.482814242, (Map<Cliente, Boolean>) null);
    Carteira carteira0 = new Carteira(0, 0, 0.0);
    Cliente cliente0 = new Cliente("}YR=,ddq.lk:(HQsj", 0, "3'1)DWuF!7xWhxZn>", "}YR=,ddq.lk:(HQsj", carteira0);
    // Undeclared exception!
    try { 
    empresa0.removeCliente(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", 0.0, hashMap0);
    Boolean boolean0 = new Boolean("example.app.models.Cliente");
    hashMap0.put((Cliente) null, boolean0);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientesAtivos();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Empresa empresa0 = new Empresa("]1)ZWIN|@j=", (-1249.0873), (Map<Cliente, Boolean>) null);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientes();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("`wAnG<PdzOk", hashMap0);
    Carteira carteira0 = new Carteira(0, 4618.8836, 4618.8836);
    Cliente cliente0 = new Cliente("^", 0, "^", "?K", carteira0);
    // Undeclared exception!
    try { 
    empresa0.buscaClienteAtivo(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    Empresa empresa0 = new Empresa("uULRcy-", (Map<Cliente, Boolean>) null);
    Carteira carteira0 = new Carteira(1274.862, 1.0, (-2609.2058285026246));
    Cliente cliente0 = new Cliente("uULRcy-", (-1), "uULRcy-", "uULRcy-", carteira0);
    // Undeclared exception!
    try { 
    empresa0.buscaCliente(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 0.0, hashMap0);
    // Undeclared exception!
    try { 
    empresa0.adicionaCliente((Cliente) null);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 20, "TB[E?\"W_wvfU", "");
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
    assertTrue(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
    assertFalse(arrayList0.contains(cliente0));
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 1.5874623117978444, hashMap0);
    Cliente cliente0 = new Cliente((String) null, (-6), (String) null, (String) null);
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertEquals(1.5874623117978444, empresa0.getCaixa(), 0.01);
    assertFalse(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test19()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("n:^1s:EBM'RLm7", hashMap0);
    Cliente cliente0 = new Cliente("n:^1s:EBM'RLm7", 20, "n:^1s:EBM'RLm7", "n:^1s:EBM'RLm7");
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    empresa0.listaTodosClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test20()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    empresa0.listaTodosClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test21()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    Boolean boolean1 = empresa0.buscaClienteAtivo(cliente0);
    assertTrue(boolean1);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test22()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, (-3457.176), hashMap0);
    Cliente cliente0 = new Cliente((String) null, (-177), (String) null, (String) null);
    Boolean boolean0 = empresa0.buscaCliente(cliente0);
    assertNotNull(boolean0);
    
    hashMap0.put(cliente0, boolean0);
    Boolean boolean1 = empresa0.buscaClienteAtivo(cliente0);
    assertFalse(boolean1);
    assertEquals((-3457.176), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test23()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("<q+ t*9k6", hashMap0);
    Boolean boolean0 = empresa0.buscaCliente((Cliente) null);
    hashMap0.put((Cliente) null, boolean0);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientesInativos();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test24()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
    assertTrue(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test25()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
    empresa0.removeCliente(cliente0);
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test26()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    String string0 = empresa0.getNome();
    assertNotNull(string0);
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test27()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    empresa0.setNome("TB[E?\"W_wvfU");
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test28()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
    
    empresa0.setCaixa(1.0);
    assertEquals(1.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test29()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 1.5874623117978444, hashMap0);
    double double0 = empresa0.getCaixa();
    assertEquals(1.5874623117978444, double0, 0.01);
}

@Test(timeout = 4000)
public void test30()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Map<Cliente, Boolean> map0 = empresa0.getClientes();
    assertNotNull(map0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}
@Test(timeout = 4000)
public void test00()  throws Throwable  {
    Carteira carteira0 = new Carteira((-650.538551823452), (-650.538551823452), 0.0);
    carteira0.compraNoDebito((-650.538551823452));
    assertEquals((-650.538551823452), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    Carteira carteira0 = new Carteira((-2355.999273853816), 1.0, (-2355.999273853816));
    carteira0.compraSaldo((-2355.999273853816));
    assertEquals((-4711.998547707632), carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 0.0, 0.0);
    double double0 = carteira0.saldoTotal();
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
    assertEquals(0.0, carteira0.getSaldo(), 0.01);
    assertEquals(0.0, double0, 0.01);
    assertEquals(0.0, carteira0.getLimiteCredito(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    Carteira carteira0 = new Carteira((-727.5563483680716), (-3650.3607966822), (-203.95121365749));
    double double0 = carteira0.saldoTotal();
    assertEquals((-4581.868358707762), double0, 0.01);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 1555.1866392665322, 417.7768413161);
    double double0 = carteira0.getSaldo();
    assertEquals(1972.9634805826322, carteira0.saldoTotal(), 0.01);
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    assertEquals(2324.018253662, carteira0.getSaldo(), 0.01);
    
    carteira0.adicionaSaldo((-2215.0));
    double double0 = carteira0.getSaldo();
    assertEquals((-2215.0), double0, 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.combinaSaldo();
    double double0 = carteira0.getLimiteDebito();
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Carteira carteira0 = new Carteira(648.0, 648.0, (-838.3974));
    double double0 = carteira0.getLimiteDebito();
    assertEquals((-838.3974), double0, 0.01);
    assertEquals(457.60260000000005, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 0.0, 0.0);
    double double0 = carteira0.getLimiteCredito();
    assertEquals(0.0, carteira0.getSaldo(), 0.01);
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Carteira carteira0 = new Carteira(6149.5508, 6149.5508, (-2952.19846496588));
    double double0 = carteira0.getLimiteCredito();
    assertEquals(6149.5508, double0, 0.01);
    assertEquals(9346.903135034121, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.setLimiteDebito((-1.0));
    assertEquals((-1.0), carteira0.getLimiteDebito(), 0.01);
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraNoDebito(0.0);
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.compraNoCredito((-2215.0));
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraNoCredito((-1.0));
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.compraSaldo((-922.6779147158));
    assertEquals(1401.3403389462, carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraSaldo(1.0);
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.setLimiteCredito((-736.0631747));
    carteira0.compraNoCredito((-2215.0));
    assertEquals((-2215.0), carteira0.getLimiteCredito(), 0.01);
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getLimiteDebito();
    assertEquals(2324.018253662, double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.combinaSaldo();
    carteira0.compraNoDebito(0.0);
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
}

@Test(timeout = 4000)
public void test19()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.setSaldo((-736.0631747));
    assertEquals((-736.0631747), carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test20()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getSaldo();
    assertEquals(2324.018253662, double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test21()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.saldoTotal();
    assertEquals(2433.036507324, double0, 0.01);
}

@Test(timeout = 4000)
public void test22()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getLimiteCredito();
    assertEquals((-2215.0), double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Cliente cliente0 = new Cliente("0GhM*h<_L", (-158), "0GhM*h<_L", "V");
      cliente0.fone = "WEd";
      cliente0.fone = null;
      String string0 = cliente0.getFone();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Cliente cliente0 = new Cliente("", 0, "", "");
      String string0 = cliente0.getFone();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Cliente cliente0 = new Cliente("Cw$sYN93Xw\"Y'Z", (-1233), "", "d(43f!u\"iA>gw|dWeD");
      String string0 = cliente0.getEmail();
      assertEquals("", string0);
      assertEquals("d(43f!u\"iA>gw|dWeD", cliente0.getFone());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Cliente cliente0 = new Cliente("", 0, "", "");
      Carteira carteira0 = cliente0.getCarteira();
      assertNull(carteira0);
  }

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Cliente cliente0 = new Cliente("example.app.models.Cliente", 2578, "n", "example.app.models.Cliente");
    Carteira carteira0 = new Carteira(0.0, (-1.0), 2578);
    cliente0.carteira = carteira0;
    Carteira carteira1 = new Carteira(2578, 2578, 2578);
    cliente0.carteira = carteira1;
    cliente0.getCarteira();
    assertEquals("n", cliente0.getEmail());
    assertEquals("example.app.models.Cliente", cliente0.getFone());
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Carteira carteira0 = new Carteira((-1), (-1), (-2515.202332146312));
    Cliente cliente0 = new Cliente("X`pJIm%lP4 7c<I", (-1), "X`pJIm%lP4 7c<I", "example.app.models.Cliente", carteira0);
    Carteira carteira1 = cliente0.getCarteira();
    assertEquals("example.app.models.Cliente", cliente0.getFone());
    assertNotNull(carteira1);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    cliente0.setCarteira(carteira0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
    assertEquals("Saldo insuficiente", cliente0.getEmail());
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
    
    cliente0.setFone("sgH,,");
    assertEquals("sgH,,", cliente0.getFone());
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    Carteira carteira1 = cliente0.getCarteira();
    assertNotNull(carteira1);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Cliente cliente0 = new Cliente((String) null, (-1), "", "");
    Carteira carteira0 = new Carteira(0.0, (-1), 191.0);
    cliente0.setCarteira(carteira0);
    assertEquals((-1), cliente0.getIdade());
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    String string0 = cliente0.getEmail();
    assertEquals("Saldo insuficiente", string0);
    assertNotNull(string0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    String string0 = cliente0.getFone();
    assertNotNull(string0);
    assertEquals("c9FBDOj26e9", string0);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
    
    cliente0.setEmail("sgH,,");
    cliente0.getEmail();
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test00()  throws Throwable  {
    Integer integer0 = new Integer(0);
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(1.0);
    Destino destino0 = new Destino("v?AN2Q/CTBc5qq", integer0, climas0, double0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    destino0.setAtracoes(arrayList0);
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    Double double1 = new Double(1);
    destino0.setPreco(double1);
    assertEquals((double)double1, (double)double0, 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    Integer integer0 = new Integer(898);
    Climas climas0 = Climas.AGRADAVEL;
    Double double0 = new Double(241.13417);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("5(`M2SL4][&MS", integer0, climas0, double0, arrayList0);
    destino0.adicionaAtracao("5(`M2SL4][&MS");
    destino0.removeAtracao((-1));
    assertEquals(241.13417, destino0.getPreco(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.VENTANIA;
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("+X<t_<&]", integer0, climas0, (Double) null, arrayList0);
    Double double0 = destino0.getPreco();
    assertNull(double0);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Integer integer0 = new Integer((-488));
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double((-488));
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("example.app.models.Destino", integer0, climas0, double0, arrayList0);
    Double double1 = destino0.getPreco();
    assertEquals((-488.0), (double)double1, 0.01);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Double double0 = new Double(0.0);
    Climas climas0 = Climas.CHUVOSO;
    Destino destino0 = new Destino("wx DbX(+a&Ud7[1Q", (Integer) null, climas0, (Double) null, arrayList0);
    destino0.preco = double0;
    Double double1 = destino0.getPreco();
    assertEquals(0.0, (double)double1, 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Integer integer0 = new Integer((-2376));
    Climas climas0 = Climas.VENTANIA;
    Double double0 = new Double(187.6725);
    Destino destino0 = new Destino((String) null, integer0, climas0, double0);
    Double double1 = destino0.getPreco();
    assertNotNull(double1);
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(0.0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("", (Integer) null, climas0, double0, arrayList0);
    Boolean boolean0 = destino0.getCidadeTuristica();
    assertNull(boolean0);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Integer integer0 = new Integer(662);
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double(0.0);
    Destino destino0 = new Destino((String) null, integer0, climas0, double0);
    assertFalse(destino0.getCidadeTuristica());
    
    Boolean boolean0 = Boolean.valueOf(true);
    destino0.setCidadeTuristica(boolean0);
    destino0.getCidadeTuristica();
    assertTrue(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(2084);
    Destino destino0 = new Destino("/|", (Integer) null, climas0, double0);
    destino0.getAtracoes();
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    destino0.adicionaAtracao((String) null);
    ArrayList<String> arrayList1 = destino0.getAtracoes();
    assertFalse(arrayList1.contains("CHUVOSO"));
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Integer integer0 = new Integer((-1106));
    Climas climas0 = Climas.AGRADAVEL;
    Double double0 = new Double((-982.9847914361264));
    Destino destino0 = new Destino("example.app.models.Cidade", integer0, climas0, double0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao((-635));
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(0.0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("", (Integer) null, climas0, double0, arrayList0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao((-1327));
    fail("Expecting exception: ArrayIndexOutOfBoundsException");
    
    } catch(ArrayIndexOutOfBoundsException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    Integer integer0 = new Integer(5317);
    Climas climas0 = Climas.VENTANIA;
    Double double0 = new Double(5317);
    Destino destino0 = null;
    try {
    destino0 = new Destino("", integer0, climas0, double0, (ArrayList<String>) null);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    ArrayList<String> arrayList0 = new ArrayList<String>();
    arrayList0.add("");
    arrayList0.add((String) null);
    arrayList0.add("");
    arrayList0.add("");
    arrayList0.add("~~LOk|W6");
    arrayList0.add("wx DbX(+a&Ud7[1Q");
    Climas climas0 = Climas.CHUVOSO;
    Destino destino0 = new Destino("wx DbX(+a&Ud7[1Q", (Integer) null, climas0, (Double) null, arrayList0);
    assertTrue(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao(0);
    fail("Expecting exception: IndexOutOfBoundsException");
    
    } catch(IndexOutOfBoundsException e) {
        //
        // Index: 1, Size: 0
        //
        verifyException("java.util.ArrayList", e);
    }
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    ArrayList<String> arrayList1 = destino0.getAtracoes();
    assertSame(arrayList0, arrayList1);
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    Integer integer0 = new Integer((-1592));
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double(0.0);
    Destino destino0 = new Destino("Cd1-v '", integer0, climas0, double0);
    // Undeclared exception!
    try { 
    destino0.adicionaAtracao("");
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(2084);
    Destino destino0 = new Destino("/|", (Integer) null, climas0, double0);
    Boolean boolean0 = destino0.getCidadeTuristica();
    assertFalse(boolean0);
}

@Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
      Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
      Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
      empresa0.adicionaCliente(cliente0);
      ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
      assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
      assertFalse(arrayList0.contains(cliente0));
  }

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("n[>;n,\"oV(UzKEMC.Z", 1285.07203100387, hashMap0);
    Carteira carteira0 = new Carteira(1285.07203100387, 1285.07203100387, 1285.07203100387);
    Cliente cliente0 = new Cliente("n[>;n,\"oV(UzKEMC.Z", 21, "n[>;n,\"oV(UzKEMC.Z", "n[>;n,\"oV(UzKEMC.Z", carteira0);
    Boolean boolean0 = Boolean.valueOf("n[>;n,\"oV(UzKEMC.Z");
    hashMap0.put(cliente0, boolean0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertFalse(arrayList0.contains(cliente0));
    assertEquals(1285.07203100387, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", hashMap0);
    HashMap<Cliente, Boolean> hashMap1 = new HashMap<Cliente, Boolean>(226, 226);
    empresa0.setClientes(hashMap1);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 0.0, hashMap0);
    empresa0.getNome();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", (-1900.3841), hashMap0);
    String string0 = empresa0.getNome();
    assertEquals((-1900.3841), empresa0.getCaixa(), 0.01);
    assertNotNull(string0);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Empresa empresa0 = new Empresa("", (Map<Cliente, Boolean>) null);
    empresa0.getClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    empresa0.adicionaCliente(cliente0);
    empresa0.getClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Empresa empresa0 = new Empresa("uULRcy-", (Map<Cliente, Boolean>) null);
    double double0 = empresa0.getCaixa();
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("P,#G", (-1.0), hashMap0);
    double double0 = empresa0.getCaixa();
    assertEquals((-1.0), double0, 0.01);
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    empresa0.buscaCliente(cliente0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Empresa empresa0 = new Empresa("S", 957.482814242, (Map<Cliente, Boolean>) null);
    Carteira carteira0 = new Carteira(0, 0, 0.0);
    Cliente cliente0 = new Cliente("}YR=,ddq.lk:(HQsj", 0, "3'1)DWuF!7xWhxZn>", "}YR=,ddq.lk:(HQsj", carteira0);
    // Undeclared exception!
    try { 
    empresa0.removeCliente(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", 0.0, hashMap0);
    Boolean boolean0 = new Boolean("example.app.models.Cliente");
    hashMap0.put((Cliente) null, boolean0);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientesAtivos();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Empresa empresa0 = new Empresa("]1)ZWIN|@j=", (-1249.0873), (Map<Cliente, Boolean>) null);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientes();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("`wAnG<PdzOk", hashMap0);
    Carteira carteira0 = new Carteira(0, 4618.8836, 4618.8836);
    Cliente cliente0 = new Cliente("^", 0, "^", "?K", carteira0);
    // Undeclared exception!
    try { 
    empresa0.buscaClienteAtivo(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    Empresa empresa0 = new Empresa("uULRcy-", (Map<Cliente, Boolean>) null);
    Carteira carteira0 = new Carteira(1274.862, 1.0, (-2609.2058285026246));
    Cliente cliente0 = new Cliente("uULRcy-", (-1), "uULRcy-", "uULRcy-", carteira0);
    // Undeclared exception!
    try { 
    empresa0.buscaCliente(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 0.0, hashMap0);
    // Undeclared exception!
    try { 
    empresa0.adicionaCliente((Cliente) null);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 20, "TB[E?\"W_wvfU", "");
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
    assertTrue(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
    assertFalse(arrayList0.contains(cliente0));
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 1.5874623117978444, hashMap0);
    Cliente cliente0 = new Cliente((String) null, (-6), (String) null, (String) null);
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertEquals(1.5874623117978444, empresa0.getCaixa(), 0.01);
    assertFalse(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test19()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("n:^1s:EBM'RLm7", hashMap0);
    Cliente cliente0 = new Cliente("n:^1s:EBM'RLm7", 20, "n:^1s:EBM'RLm7", "n:^1s:EBM'RLm7");
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    empresa0.listaTodosClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test20()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    empresa0.listaTodosClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test21()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    Boolean boolean1 = empresa0.buscaClienteAtivo(cliente0);
    assertTrue(boolean1);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test22()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, (-3457.176), hashMap0);
    Cliente cliente0 = new Cliente((String) null, (-177), (String) null, (String) null);
    Boolean boolean0 = empresa0.buscaCliente(cliente0);
    assertNotNull(boolean0);
    
    hashMap0.put(cliente0, boolean0);
    Boolean boolean1 = empresa0.buscaClienteAtivo(cliente0);
    assertFalse(boolean1);
    assertEquals((-3457.176), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test23()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("<q+ t*9k6", hashMap0);
    Boolean boolean0 = empresa0.buscaCliente((Cliente) null);
    hashMap0.put((Cliente) null, boolean0);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientesInativos();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test24()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
    assertTrue(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test25()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
    empresa0.removeCliente(cliente0);
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test26()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    String string0 = empresa0.getNome();
    assertNotNull(string0);
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test27()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    empresa0.setNome("TB[E?\"W_wvfU");
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test28()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
    
    empresa0.setCaixa(1.0);
    assertEquals(1.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test29()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 1.5874623117978444, hashMap0);
    double double0 = empresa0.getCaixa();
    assertEquals(1.5874623117978444, double0, 0.01);
}

@Test(timeout = 4000)
public void test30()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Map<Cliente, Boolean> map0 = empresa0.getClientes();
    assertNotNull(map0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}
@Test(timeout = 4000)
public void test00()  throws Throwable  {
    Carteira carteira0 = new Carteira((-650.538551823452), (-650.538551823452), 0.0);
    carteira0.compraNoDebito((-650.538551823452));
    assertEquals((-650.538551823452), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    Carteira carteira0 = new Carteira((-2355.999273853816), 1.0, (-2355.999273853816));
    carteira0.compraSaldo((-2355.999273853816));
    assertEquals((-4711.998547707632), carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 0.0, 0.0);
    double double0 = carteira0.saldoTotal();
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
    assertEquals(0.0, carteira0.getSaldo(), 0.01);
    assertEquals(0.0, double0, 0.01);
    assertEquals(0.0, carteira0.getLimiteCredito(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    Carteira carteira0 = new Carteira((-727.5563483680716), (-3650.3607966822), (-203.95121365749));
    double double0 = carteira0.saldoTotal();
    assertEquals((-4581.868358707762), double0, 0.01);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 1555.1866392665322, 417.7768413161);
    double double0 = carteira0.getSaldo();
    assertEquals(1972.9634805826322, carteira0.saldoTotal(), 0.01);
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    assertEquals(2324.018253662, carteira0.getSaldo(), 0.01);
    
    carteira0.adicionaSaldo((-2215.0));
    double double0 = carteira0.getSaldo();
    assertEquals((-2215.0), double0, 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.combinaSaldo();
    double double0 = carteira0.getLimiteDebito();
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Carteira carteira0 = new Carteira(648.0, 648.0, (-838.3974));
    double double0 = carteira0.getLimiteDebito();
    assertEquals((-838.3974), double0, 0.01);
    assertEquals(457.60260000000005, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 0.0, 0.0);
    double double0 = carteira0.getLimiteCredito();
    assertEquals(0.0, carteira0.getSaldo(), 0.01);
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Carteira carteira0 = new Carteira(6149.5508, 6149.5508, (-2952.19846496588));
    double double0 = carteira0.getLimiteCredito();
    assertEquals(6149.5508, double0, 0.01);
    assertEquals(9346.903135034121, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.setLimiteDebito((-1.0));
    assertEquals((-1.0), carteira0.getLimiteDebito(), 0.01);
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraNoDebito(0.0);
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.compraNoCredito((-2215.0));
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraNoCredito((-1.0));
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.compraSaldo((-922.6779147158));
    assertEquals(1401.3403389462, carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraSaldo(1.0);
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.setLimiteCredito((-736.0631747));
    carteira0.compraNoCredito((-2215.0));
    assertEquals((-2215.0), carteira0.getLimiteCredito(), 0.01);
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getLimiteDebito();
    assertEquals(2324.018253662, double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.combinaSaldo();
    carteira0.compraNoDebito(0.0);
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
}

@Test(timeout = 4000)
public void test19()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.setSaldo((-736.0631747));
    assertEquals((-736.0631747), carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test20()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getSaldo();
    assertEquals(2324.018253662, double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test21()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.saldoTotal();
    assertEquals(2433.036507324, double0, 0.01);
}

@Test(timeout = 4000)
public void test22()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getLimiteCredito();
    assertEquals((-2215.0), double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Cliente cliente0 = new Cliente("0GhM*h<_L", (-158), "0GhM*h<_L", "V");
      cliente0.fone = "WEd";
      cliente0.fone = null;
      String string0 = cliente0.getFone();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Cliente cliente0 = new Cliente("", 0, "", "");
      String string0 = cliente0.getFone();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Cliente cliente0 = new Cliente("Cw$sYN93Xw\"Y'Z", (-1233), "", "d(43f!u\"iA>gw|dWeD");
      String string0 = cliente0.getEmail();
      assertEquals("", string0);
      assertEquals("d(43f!u\"iA>gw|dWeD", cliente0.getFone());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Cliente cliente0 = new Cliente("", 0, "", "");
      Carteira carteira0 = cliente0.getCarteira();
      assertNull(carteira0);
  }

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Cliente cliente0 = new Cliente("example.app.models.Cliente", 2578, "n", "example.app.models.Cliente");
    Carteira carteira0 = new Carteira(0.0, (-1.0), 2578);
    cliente0.carteira = carteira0;
    Carteira carteira1 = new Carteira(2578, 2578, 2578);
    cliente0.carteira = carteira1;
    cliente0.getCarteira();
    assertEquals("n", cliente0.getEmail());
    assertEquals("example.app.models.Cliente", cliente0.getFone());
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Carteira carteira0 = new Carteira((-1), (-1), (-2515.202332146312));
    Cliente cliente0 = new Cliente("X`pJIm%lP4 7c<I", (-1), "X`pJIm%lP4 7c<I", "example.app.models.Cliente", carteira0);
    Carteira carteira1 = cliente0.getCarteira();
    assertEquals("example.app.models.Cliente", cliente0.getFone());
    assertNotNull(carteira1);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    cliente0.setCarteira(carteira0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
    assertEquals("Saldo insuficiente", cliente0.getEmail());
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
    
    cliente0.setFone("sgH,,");
    assertEquals("sgH,,", cliente0.getFone());
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    Carteira carteira1 = cliente0.getCarteira();
    assertNotNull(carteira1);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Cliente cliente0 = new Cliente((String) null, (-1), "", "");
    Carteira carteira0 = new Carteira(0.0, (-1), 191.0);
    cliente0.setCarteira(carteira0);
    assertEquals((-1), cliente0.getIdade());
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    String string0 = cliente0.getEmail();
    assertEquals("Saldo insuficiente", string0);
    assertNotNull(string0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    String string0 = cliente0.getFone();
    assertNotNull(string0);
    assertEquals("c9FBDOj26e9", string0);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
    
    cliente0.setEmail("sgH,,");
    cliente0.getEmail();
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test00()  throws Throwable  {
    Integer integer0 = new Integer(0);
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(1.0);
    Destino destino0 = new Destino("v?AN2Q/CTBc5qq", integer0, climas0, double0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    destino0.setAtracoes(arrayList0);
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    Double double1 = new Double(1);
    destino0.setPreco(double1);
    assertEquals((double)double1, (double)double0, 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    Integer integer0 = new Integer(898);
    Climas climas0 = Climas.AGRADAVEL;
    Double double0 = new Double(241.13417);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("5(`M2SL4][&MS", integer0, climas0, double0, arrayList0);
    destino0.adicionaAtracao("5(`M2SL4][&MS");
    destino0.removeAtracao((-1));
    assertEquals(241.13417, destino0.getPreco(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.VENTANIA;
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("+X<t_<&]", integer0, climas0, (Double) null, arrayList0);
    Double double0 = destino0.getPreco();
    assertNull(double0);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Integer integer0 = new Integer((-488));
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double((-488));
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("example.app.models.Destino", integer0, climas0, double0, arrayList0);
    Double double1 = destino0.getPreco();
    assertEquals((-488.0), (double)double1, 0.01);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Double double0 = new Double(0.0);
    Climas climas0 = Climas.CHUVOSO;
    Destino destino0 = new Destino("wx DbX(+a&Ud7[1Q", (Integer) null, climas0, (Double) null, arrayList0);
    destino0.preco = double0;
    Double double1 = destino0.getPreco();
    assertEquals(0.0, (double)double1, 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Integer integer0 = new Integer((-2376));
    Climas climas0 = Climas.VENTANIA;
    Double double0 = new Double(187.6725);
    Destino destino0 = new Destino((String) null, integer0, climas0, double0);
    Double double1 = destino0.getPreco();
    assertNotNull(double1);
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(0.0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("", (Integer) null, climas0, double0, arrayList0);
    Boolean boolean0 = destino0.getCidadeTuristica();
    assertNull(boolean0);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Integer integer0 = new Integer(662);
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double(0.0);
    Destino destino0 = new Destino((String) null, integer0, climas0, double0);
    assertFalse(destino0.getCidadeTuristica());
    
    Boolean boolean0 = Boolean.valueOf(true);
    destino0.setCidadeTuristica(boolean0);
    destino0.getCidadeTuristica();
    assertTrue(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(2084);
    Destino destino0 = new Destino("/|", (Integer) null, climas0, double0);
    destino0.getAtracoes();
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    destino0.adicionaAtracao((String) null);
    ArrayList<String> arrayList1 = destino0.getAtracoes();
    assertFalse(arrayList1.contains("CHUVOSO"));
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Integer integer0 = new Integer((-1106));
    Climas climas0 = Climas.AGRADAVEL;
    Double double0 = new Double((-982.9847914361264));
    Destino destino0 = new Destino("example.app.models.Cidade", integer0, climas0, double0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao((-635));
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(0.0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("", (Integer) null, climas0, double0, arrayList0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao((-1327));
    fail("Expecting exception: ArrayIndexOutOfBoundsException");
    
    } catch(ArrayIndexOutOfBoundsException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    Integer integer0 = new Integer(5317);
    Climas climas0 = Climas.VENTANIA;
    Double double0 = new Double(5317);
    Destino destino0 = null;
    try {
    destino0 = new Destino("", integer0, climas0, double0, (ArrayList<String>) null);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    ArrayList<String> arrayList0 = new ArrayList<String>();
    arrayList0.add("");
    arrayList0.add((String) null);
    arrayList0.add("");
    arrayList0.add("");
    arrayList0.add("~~LOk|W6");
    arrayList0.add("wx DbX(+a&Ud7[1Q");
    Climas climas0 = Climas.CHUVOSO;
    Destino destino0 = new Destino("wx DbX(+a&Ud7[1Q", (Integer) null, climas0, (Double) null, arrayList0);
    assertTrue(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao(0);
    fail("Expecting exception: IndexOutOfBoundsException");
    
    } catch(IndexOutOfBoundsException e) {
        //
        // Index: 1, Size: 0
        //
        verifyException("java.util.ArrayList", e);
    }
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    ArrayList<String> arrayList1 = destino0.getAtracoes();
    assertSame(arrayList0, arrayList1);
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    Integer integer0 = new Integer((-1592));
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double(0.0);
    Destino destino0 = new Destino("Cd1-v '", integer0, climas0, double0);
    // Undeclared exception!
    try { 
    destino0.adicionaAtracao("");
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(2084);
    Destino destino0 = new Destino("/|", (Integer) null, climas0, double0);
    Boolean boolean0 = destino0.getCidadeTuristica();
    assertFalse(boolean0);
}

@Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
      Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
      Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
      empresa0.adicionaCliente(cliente0);
      ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
      assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
      assertFalse(arrayList0.contains(cliente0));
  }

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("n[>;n,\"oV(UzKEMC.Z", 1285.07203100387, hashMap0);
    Carteira carteira0 = new Carteira(1285.07203100387, 1285.07203100387, 1285.07203100387);
    Cliente cliente0 = new Cliente("n[>;n,\"oV(UzKEMC.Z", 21, "n[>;n,\"oV(UzKEMC.Z", "n[>;n,\"oV(UzKEMC.Z", carteira0);
    Boolean boolean0 = Boolean.valueOf("n[>;n,\"oV(UzKEMC.Z");
    hashMap0.put(cliente0, boolean0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertFalse(arrayList0.contains(cliente0));
    assertEquals(1285.07203100387, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", hashMap0);
    HashMap<Cliente, Boolean> hashMap1 = new HashMap<Cliente, Boolean>(226, 226);
    empresa0.setClientes(hashMap1);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 0.0, hashMap0);
    empresa0.getNome();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", (-1900.3841), hashMap0);
    String string0 = empresa0.getNome();
    assertEquals((-1900.3841), empresa0.getCaixa(), 0.01);
    assertNotNull(string0);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Empresa empresa0 = new Empresa("", (Map<Cliente, Boolean>) null);
    empresa0.getClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    empresa0.adicionaCliente(cliente0);
    empresa0.getClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Empresa empresa0 = new Empresa("uULRcy-", (Map<Cliente, Boolean>) null);
    double double0 = empresa0.getCaixa();
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("P,#G", (-1.0), hashMap0);
    double double0 = empresa0.getCaixa();
    assertEquals((-1.0), double0, 0.01);
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    empresa0.buscaCliente(cliente0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Empresa empresa0 = new Empresa("S", 957.482814242, (Map<Cliente, Boolean>) null);
    Carteira carteira0 = new Carteira(0, 0, 0.0);
    Cliente cliente0 = new Cliente("}YR=,ddq.lk:(HQsj", 0, "3'1)DWuF!7xWhxZn>", "}YR=,ddq.lk:(HQsj", carteira0);
    // Undeclared exception!
    try { 
    empresa0.removeCliente(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", 0.0, hashMap0);
    Boolean boolean0 = new Boolean("example.app.models.Cliente");
    hashMap0.put((Cliente) null, boolean0);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientesAtivos();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Empresa empresa0 = new Empresa("]1)ZWIN|@j=", (-1249.0873), (Map<Cliente, Boolean>) null);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientes();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("`wAnG<PdzOk", hashMap0);
    Carteira carteira0 = new Carteira(0, 4618.8836, 4618.8836);
    Cliente cliente0 = new Cliente("^", 0, "^", "?K", carteira0);
    // Undeclared exception!
    try { 
    empresa0.buscaClienteAtivo(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    Empresa empresa0 = new Empresa("uULRcy-", (Map<Cliente, Boolean>) null);
    Carteira carteira0 = new Carteira(1274.862, 1.0, (-2609.2058285026246));
    Cliente cliente0 = new Cliente("uULRcy-", (-1), "uULRcy-", "uULRcy-", carteira0);
    // Undeclared exception!
    try { 
    empresa0.buscaCliente(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 0.0, hashMap0);
    // Undeclared exception!
    try { 
    empresa0.adicionaCliente((Cliente) null);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 20, "TB[E?\"W_wvfU", "");
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
    assertTrue(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
    assertFalse(arrayList0.contains(cliente0));
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 1.5874623117978444, hashMap0);
    Cliente cliente0 = new Cliente((String) null, (-6), (String) null, (String) null);
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertEquals(1.5874623117978444, empresa0.getCaixa(), 0.01);
    assertFalse(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test19()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("n:^1s:EBM'RLm7", hashMap0);
    Cliente cliente0 = new Cliente("n:^1s:EBM'RLm7", 20, "n:^1s:EBM'RLm7", "n:^1s:EBM'RLm7");
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    empresa0.listaTodosClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test20()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    empresa0.listaTodosClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test21()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    Boolean boolean1 = empresa0.buscaClienteAtivo(cliente0);
    assertTrue(boolean1);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test22()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, (-3457.176), hashMap0);
    Cliente cliente0 = new Cliente((String) null, (-177), (String) null, (String) null);
    Boolean boolean0 = empresa0.buscaCliente(cliente0);
    assertNotNull(boolean0);
    
    hashMap0.put(cliente0, boolean0);
    Boolean boolean1 = empresa0.buscaClienteAtivo(cliente0);
    assertFalse(boolean1);
    assertEquals((-3457.176), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test23()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("<q+ t*9k6", hashMap0);
    Boolean boolean0 = empresa0.buscaCliente((Cliente) null);
    hashMap0.put((Cliente) null, boolean0);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientesInativos();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test24()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
    assertTrue(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test25()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
    empresa0.removeCliente(cliente0);
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test26()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    String string0 = empresa0.getNome();
    assertNotNull(string0);
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test27()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    empresa0.setNome("TB[E?\"W_wvfU");
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test28()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
    
    empresa0.setCaixa(1.0);
    assertEquals(1.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test29()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 1.5874623117978444, hashMap0);
    double double0 = empresa0.getCaixa();
    assertEquals(1.5874623117978444, double0, 0.01);
}

@Test(timeout = 4000)
public void test30()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Map<Cliente, Boolean> map0 = empresa0.getClientes();
    assertNotNull(map0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}
@Test(timeout = 4000)
public void test00()  throws Throwable  {
    Carteira carteira0 = new Carteira((-650.538551823452), (-650.538551823452), 0.0);
    carteira0.compraNoDebito((-650.538551823452));
    assertEquals((-650.538551823452), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    Carteira carteira0 = new Carteira((-2355.999273853816), 1.0, (-2355.999273853816));
    carteira0.compraSaldo((-2355.999273853816));
    assertEquals((-4711.998547707632), carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 0.0, 0.0);
    double double0 = carteira0.saldoTotal();
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
    assertEquals(0.0, carteira0.getSaldo(), 0.01);
    assertEquals(0.0, double0, 0.01);
    assertEquals(0.0, carteira0.getLimiteCredito(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    Carteira carteira0 = new Carteira((-727.5563483680716), (-3650.3607966822), (-203.95121365749));
    double double0 = carteira0.saldoTotal();
    assertEquals((-4581.868358707762), double0, 0.01);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 1555.1866392665322, 417.7768413161);
    double double0 = carteira0.getSaldo();
    assertEquals(1972.9634805826322, carteira0.saldoTotal(), 0.01);
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    assertEquals(2324.018253662, carteira0.getSaldo(), 0.01);
    
    carteira0.adicionaSaldo((-2215.0));
    double double0 = carteira0.getSaldo();
    assertEquals((-2215.0), double0, 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.combinaSaldo();
    double double0 = carteira0.getLimiteDebito();
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Carteira carteira0 = new Carteira(648.0, 648.0, (-838.3974));
    double double0 = carteira0.getLimiteDebito();
    assertEquals((-838.3974), double0, 0.01);
    assertEquals(457.60260000000005, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 0.0, 0.0);
    double double0 = carteira0.getLimiteCredito();
    assertEquals(0.0, carteira0.getSaldo(), 0.01);
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Carteira carteira0 = new Carteira(6149.5508, 6149.5508, (-2952.19846496588));
    double double0 = carteira0.getLimiteCredito();
    assertEquals(6149.5508, double0, 0.01);
    assertEquals(9346.903135034121, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.setLimiteDebito((-1.0));
    assertEquals((-1.0), carteira0.getLimiteDebito(), 0.01);
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraNoDebito(0.0);
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.compraNoCredito((-2215.0));
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraNoCredito((-1.0));
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.compraSaldo((-922.6779147158));
    assertEquals(1401.3403389462, carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraSaldo(1.0);
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.setLimiteCredito((-736.0631747));
    carteira0.compraNoCredito((-2215.0));
    assertEquals((-2215.0), carteira0.getLimiteCredito(), 0.01);
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getLimiteDebito();
    assertEquals(2324.018253662, double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.combinaSaldo();
    carteira0.compraNoDebito(0.0);
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
}

@Test(timeout = 4000)
public void test19()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.setSaldo((-736.0631747));
    assertEquals((-736.0631747), carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test20()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getSaldo();
    assertEquals(2324.018253662, double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test21()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.saldoTotal();
    assertEquals(2433.036507324, double0, 0.01);
}

@Test(timeout = 4000)
public void test22()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getLimiteCredito();
    assertEquals((-2215.0), double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Cliente cliente0 = new Cliente("0GhM*h<_L", (-158), "0GhM*h<_L", "V");
      cliente0.fone = "WEd";
      cliente0.fone = null;
      String string0 = cliente0.getFone();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Cliente cliente0 = new Cliente("", 0, "", "");
      String string0 = cliente0.getFone();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Cliente cliente0 = new Cliente("Cw$sYN93Xw\"Y'Z", (-1233), "", "d(43f!u\"iA>gw|dWeD");
      String string0 = cliente0.getEmail();
      assertEquals("", string0);
      assertEquals("d(43f!u\"iA>gw|dWeD", cliente0.getFone());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Cliente cliente0 = new Cliente("", 0, "", "");
      Carteira carteira0 = cliente0.getCarteira();
      assertNull(carteira0);
  }

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Cliente cliente0 = new Cliente("example.app.models.Cliente", 2578, "n", "example.app.models.Cliente");
    Carteira carteira0 = new Carteira(0.0, (-1.0), 2578);
    cliente0.carteira = carteira0;
    Carteira carteira1 = new Carteira(2578, 2578, 2578);
    cliente0.carteira = carteira1;
    cliente0.getCarteira();
    assertEquals("n", cliente0.getEmail());
    assertEquals("example.app.models.Cliente", cliente0.getFone());
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Carteira carteira0 = new Carteira((-1), (-1), (-2515.202332146312));
    Cliente cliente0 = new Cliente("X`pJIm%lP4 7c<I", (-1), "X`pJIm%lP4 7c<I", "example.app.models.Cliente", carteira0);
    Carteira carteira1 = cliente0.getCarteira();
    assertEquals("example.app.models.Cliente", cliente0.getFone());
    assertNotNull(carteira1);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    cliente0.setCarteira(carteira0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
    assertEquals("Saldo insuficiente", cliente0.getEmail());
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
    
    cliente0.setFone("sgH,,");
    assertEquals("sgH,,", cliente0.getFone());
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    Carteira carteira1 = cliente0.getCarteira();
    assertNotNull(carteira1);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Cliente cliente0 = new Cliente((String) null, (-1), "", "");
    Carteira carteira0 = new Carteira(0.0, (-1), 191.0);
    cliente0.setCarteira(carteira0);
    assertEquals((-1), cliente0.getIdade());
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    String string0 = cliente0.getEmail();
    assertEquals("Saldo insuficiente", string0);
    assertNotNull(string0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    String string0 = cliente0.getFone();
    assertNotNull(string0);
    assertEquals("c9FBDOj26e9", string0);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
    
    cliente0.setEmail("sgH,,");
    cliente0.getEmail();
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test00()  throws Throwable  {
    Integer integer0 = new Integer(0);
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(1.0);
    Destino destino0 = new Destino("v?AN2Q/CTBc5qq", integer0, climas0, double0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    destino0.setAtracoes(arrayList0);
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    Double double1 = new Double(1);
    destino0.setPreco(double1);
    assertEquals((double)double1, (double)double0, 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    Integer integer0 = new Integer(898);
    Climas climas0 = Climas.AGRADAVEL;
    Double double0 = new Double(241.13417);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("5(`M2SL4][&MS", integer0, climas0, double0, arrayList0);
    destino0.adicionaAtracao("5(`M2SL4][&MS");
    destino0.removeAtracao((-1));
    assertEquals(241.13417, destino0.getPreco(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.VENTANIA;
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("+X<t_<&]", integer0, climas0, (Double) null, arrayList0);
    Double double0 = destino0.getPreco();
    assertNull(double0);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Integer integer0 = new Integer((-488));
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double((-488));
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("example.app.models.Destino", integer0, climas0, double0, arrayList0);
    Double double1 = destino0.getPreco();
    assertEquals((-488.0), (double)double1, 0.01);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Double double0 = new Double(0.0);
    Climas climas0 = Climas.CHUVOSO;
    Destino destino0 = new Destino("wx DbX(+a&Ud7[1Q", (Integer) null, climas0, (Double) null, arrayList0);
    destino0.preco = double0;
    Double double1 = destino0.getPreco();
    assertEquals(0.0, (double)double1, 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Integer integer0 = new Integer((-2376));
    Climas climas0 = Climas.VENTANIA;
    Double double0 = new Double(187.6725);
    Destino destino0 = new Destino((String) null, integer0, climas0, double0);
    Double double1 = destino0.getPreco();
    assertNotNull(double1);
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(0.0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("", (Integer) null, climas0, double0, arrayList0);
    Boolean boolean0 = destino0.getCidadeTuristica();
    assertNull(boolean0);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Integer integer0 = new Integer(662);
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double(0.0);
    Destino destino0 = new Destino((String) null, integer0, climas0, double0);
    assertFalse(destino0.getCidadeTuristica());
    
    Boolean boolean0 = Boolean.valueOf(true);
    destino0.setCidadeTuristica(boolean0);
    destino0.getCidadeTuristica();
    assertTrue(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(2084);
    Destino destino0 = new Destino("/|", (Integer) null, climas0, double0);
    destino0.getAtracoes();
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    destino0.adicionaAtracao((String) null);
    ArrayList<String> arrayList1 = destino0.getAtracoes();
    assertFalse(arrayList1.contains("CHUVOSO"));
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Integer integer0 = new Integer((-1106));
    Climas climas0 = Climas.AGRADAVEL;
    Double double0 = new Double((-982.9847914361264));
    Destino destino0 = new Destino("example.app.models.Cidade", integer0, climas0, double0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao((-635));
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(0.0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("", (Integer) null, climas0, double0, arrayList0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao((-1327));
    fail("Expecting exception: ArrayIndexOutOfBoundsException");
    
    } catch(ArrayIndexOutOfBoundsException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    Integer integer0 = new Integer(5317);
    Climas climas0 = Climas.VENTANIA;
    Double double0 = new Double(5317);
    Destino destino0 = null;
    try {
    destino0 = new Destino("", integer0, climas0, double0, (ArrayList<String>) null);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    ArrayList<String> arrayList0 = new ArrayList<String>();
    arrayList0.add("");
    arrayList0.add((String) null);
    arrayList0.add("");
    arrayList0.add("");
    arrayList0.add("~~LOk|W6");
    arrayList0.add("wx DbX(+a&Ud7[1Q");
    Climas climas0 = Climas.CHUVOSO;
    Destino destino0 = new Destino("wx DbX(+a&Ud7[1Q", (Integer) null, climas0, (Double) null, arrayList0);
    assertTrue(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao(0);
    fail("Expecting exception: IndexOutOfBoundsException");
    
    } catch(IndexOutOfBoundsException e) {
        //
        // Index: 1, Size: 0
        //
        verifyException("java.util.ArrayList", e);
    }
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    ArrayList<String> arrayList1 = destino0.getAtracoes();
    assertSame(arrayList0, arrayList1);
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    Integer integer0 = new Integer((-1592));
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double(0.0);
    Destino destino0 = new Destino("Cd1-v '", integer0, climas0, double0);
    // Undeclared exception!
    try { 
    destino0.adicionaAtracao("");
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(2084);
    Destino destino0 = new Destino("/|", (Integer) null, climas0, double0);
    Boolean boolean0 = destino0.getCidadeTuristica();
    assertFalse(boolean0);
}

@Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
      Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
      Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
      empresa0.adicionaCliente(cliente0);
      ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
      assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
      assertFalse(arrayList0.contains(cliente0));
  }

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("n[>;n,\"oV(UzKEMC.Z", 1285.07203100387, hashMap0);
    Carteira carteira0 = new Carteira(1285.07203100387, 1285.07203100387, 1285.07203100387);
    Cliente cliente0 = new Cliente("n[>;n,\"oV(UzKEMC.Z", 21, "n[>;n,\"oV(UzKEMC.Z", "n[>;n,\"oV(UzKEMC.Z", carteira0);
    Boolean boolean0 = Boolean.valueOf("n[>;n,\"oV(UzKEMC.Z");
    hashMap0.put(cliente0, boolean0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertFalse(arrayList0.contains(cliente0));
    assertEquals(1285.07203100387, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", hashMap0);
    HashMap<Cliente, Boolean> hashMap1 = new HashMap<Cliente, Boolean>(226, 226);
    empresa0.setClientes(hashMap1);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 0.0, hashMap0);
    empresa0.getNome();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", (-1900.3841), hashMap0);
    String string0 = empresa0.getNome();
    assertEquals((-1900.3841), empresa0.getCaixa(), 0.01);
    assertNotNull(string0);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Empresa empresa0 = new Empresa("", (Map<Cliente, Boolean>) null);
    empresa0.getClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    empresa0.adicionaCliente(cliente0);
    empresa0.getClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Empresa empresa0 = new Empresa("uULRcy-", (Map<Cliente, Boolean>) null);
    double double0 = empresa0.getCaixa();
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("P,#G", (-1.0), hashMap0);
    double double0 = empresa0.getCaixa();
    assertEquals((-1.0), double0, 0.01);
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    empresa0.buscaCliente(cliente0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Empresa empresa0 = new Empresa("S", 957.482814242, (Map<Cliente, Boolean>) null);
    Carteira carteira0 = new Carteira(0, 0, 0.0);
    Cliente cliente0 = new Cliente("}YR=,ddq.lk:(HQsj", 0, "3'1)DWuF!7xWhxZn>", "}YR=,ddq.lk:(HQsj", carteira0);
    // Undeclared exception!
    try { 
    empresa0.removeCliente(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", 0.0, hashMap0);
    Boolean boolean0 = new Boolean("example.app.models.Cliente");
    hashMap0.put((Cliente) null, boolean0);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientesAtivos();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Empresa empresa0 = new Empresa("]1)ZWIN|@j=", (-1249.0873), (Map<Cliente, Boolean>) null);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientes();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("`wAnG<PdzOk", hashMap0);
    Carteira carteira0 = new Carteira(0, 4618.8836, 4618.8836);
    Cliente cliente0 = new Cliente("^", 0, "^", "?K", carteira0);
    // Undeclared exception!
    try { 
    empresa0.buscaClienteAtivo(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    Empresa empresa0 = new Empresa("uULRcy-", (Map<Cliente, Boolean>) null);
    Carteira carteira0 = new Carteira(1274.862, 1.0, (-2609.2058285026246));
    Cliente cliente0 = new Cliente("uULRcy-", (-1), "uULRcy-", "uULRcy-", carteira0);
    // Undeclared exception!
    try { 
    empresa0.buscaCliente(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 0.0, hashMap0);
    // Undeclared exception!
    try { 
    empresa0.adicionaCliente((Cliente) null);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 20, "TB[E?\"W_wvfU", "");
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
    assertTrue(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
    assertFalse(arrayList0.contains(cliente0));
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 1.5874623117978444, hashMap0);
    Cliente cliente0 = new Cliente((String) null, (-6), (String) null, (String) null);
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertEquals(1.5874623117978444, empresa0.getCaixa(), 0.01);
    assertFalse(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test19()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("n:^1s:EBM'RLm7", hashMap0);
    Cliente cliente0 = new Cliente("n:^1s:EBM'RLm7", 20, "n:^1s:EBM'RLm7", "n:^1s:EBM'RLm7");
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    empresa0.listaTodosClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test20()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    empresa0.listaTodosClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test21()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    Boolean boolean1 = empresa0.buscaClienteAtivo(cliente0);
    assertTrue(boolean1);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test22()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, (-3457.176), hashMap0);
    Cliente cliente0 = new Cliente((String) null, (-177), (String) null, (String) null);
    Boolean boolean0 = empresa0.buscaCliente(cliente0);
    assertNotNull(boolean0);
    
    hashMap0.put(cliente0, boolean0);
    Boolean boolean1 = empresa0.buscaClienteAtivo(cliente0);
    assertFalse(boolean1);
    assertEquals((-3457.176), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test23()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("<q+ t*9k6", hashMap0);
    Boolean boolean0 = empresa0.buscaCliente((Cliente) null);
    hashMap0.put((Cliente) null, boolean0);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientesInativos();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test24()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
    assertTrue(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test25()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
    empresa0.removeCliente(cliente0);
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test26()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    String string0 = empresa0.getNome();
    assertNotNull(string0);
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test27()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    empresa0.setNome("TB[E?\"W_wvfU");
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test28()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
    
    empresa0.setCaixa(1.0);
    assertEquals(1.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test29()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 1.5874623117978444, hashMap0);
    double double0 = empresa0.getCaixa();
    assertEquals(1.5874623117978444, double0, 0.01);
}

@Test(timeout = 4000)
public void test30()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Map<Cliente, Boolean> map0 = empresa0.getClientes();
    assertNotNull(map0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}
@Test(timeout = 4000)
public void test00()  throws Throwable  {
    Carteira carteira0 = new Carteira((-650.538551823452), (-650.538551823452), 0.0);
    carteira0.compraNoDebito((-650.538551823452));
    assertEquals((-650.538551823452), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    Carteira carteira0 = new Carteira((-2355.999273853816), 1.0, (-2355.999273853816));
    carteira0.compraSaldo((-2355.999273853816));
    assertEquals((-4711.998547707632), carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 0.0, 0.0);
    double double0 = carteira0.saldoTotal();
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
    assertEquals(0.0, carteira0.getSaldo(), 0.01);
    assertEquals(0.0, double0, 0.01);
    assertEquals(0.0, carteira0.getLimiteCredito(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    Carteira carteira0 = new Carteira((-727.5563483680716), (-3650.3607966822), (-203.95121365749));
    double double0 = carteira0.saldoTotal();
    assertEquals((-4581.868358707762), double0, 0.01);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 1555.1866392665322, 417.7768413161);
    double double0 = carteira0.getSaldo();
    assertEquals(1972.9634805826322, carteira0.saldoTotal(), 0.01);
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    assertEquals(2324.018253662, carteira0.getSaldo(), 0.01);
    
    carteira0.adicionaSaldo((-2215.0));
    double double0 = carteira0.getSaldo();
    assertEquals((-2215.0), double0, 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.combinaSaldo();
    double double0 = carteira0.getLimiteDebito();
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Carteira carteira0 = new Carteira(648.0, 648.0, (-838.3974));
    double double0 = carteira0.getLimiteDebito();
    assertEquals((-838.3974), double0, 0.01);
    assertEquals(457.60260000000005, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 0.0, 0.0);
    double double0 = carteira0.getLimiteCredito();
    assertEquals(0.0, carteira0.getSaldo(), 0.01);
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Carteira carteira0 = new Carteira(6149.5508, 6149.5508, (-2952.19846496588));
    double double0 = carteira0.getLimiteCredito();
    assertEquals(6149.5508, double0, 0.01);
    assertEquals(9346.903135034121, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.setLimiteDebito((-1.0));
    assertEquals((-1.0), carteira0.getLimiteDebito(), 0.01);
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraNoDebito(0.0);
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.compraNoCredito((-2215.0));
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraNoCredito((-1.0));
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.compraSaldo((-922.6779147158));
    assertEquals(1401.3403389462, carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraSaldo(1.0);
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.setLimiteCredito((-736.0631747));
    carteira0.compraNoCredito((-2215.0));
    assertEquals((-2215.0), carteira0.getLimiteCredito(), 0.01);
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getLimiteDebito();
    assertEquals(2324.018253662, double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.combinaSaldo();
    carteira0.compraNoDebito(0.0);
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
}

@Test(timeout = 4000)
public void test19()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.setSaldo((-736.0631747));
    assertEquals((-736.0631747), carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test20()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getSaldo();
    assertEquals(2324.018253662, double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test21()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.saldoTotal();
    assertEquals(2433.036507324, double0, 0.01);
}

@Test(timeout = 4000)
public void test22()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getLimiteCredito();
    assertEquals((-2215.0), double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Cliente cliente0 = new Cliente("0GhM*h<_L", (-158), "0GhM*h<_L", "V");
      cliente0.fone = "WEd";
      cliente0.fone = null;
      String string0 = cliente0.getFone();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Cliente cliente0 = new Cliente("", 0, "", "");
      String string0 = cliente0.getFone();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Cliente cliente0 = new Cliente("Cw$sYN93Xw\"Y'Z", (-1233), "", "d(43f!u\"iA>gw|dWeD");
      String string0 = cliente0.getEmail();
      assertEquals("", string0);
      assertEquals("d(43f!u\"iA>gw|dWeD", cliente0.getFone());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Cliente cliente0 = new Cliente("", 0, "", "");
      Carteira carteira0 = cliente0.getCarteira();
      assertNull(carteira0);
  }

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Cliente cliente0 = new Cliente("example.app.models.Cliente", 2578, "n", "example.app.models.Cliente");
    Carteira carteira0 = new Carteira(0.0, (-1.0), 2578);
    cliente0.carteira = carteira0;
    Carteira carteira1 = new Carteira(2578, 2578, 2578);
    cliente0.carteira = carteira1;
    cliente0.getCarteira();
    assertEquals("n", cliente0.getEmail());
    assertEquals("example.app.models.Cliente", cliente0.getFone());
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Carteira carteira0 = new Carteira((-1), (-1), (-2515.202332146312));
    Cliente cliente0 = new Cliente("X`pJIm%lP4 7c<I", (-1), "X`pJIm%lP4 7c<I", "example.app.models.Cliente", carteira0);
    Carteira carteira1 = cliente0.getCarteira();
    assertEquals("example.app.models.Cliente", cliente0.getFone());
    assertNotNull(carteira1);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    cliente0.setCarteira(carteira0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
    assertEquals("Saldo insuficiente", cliente0.getEmail());
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
    
    cliente0.setFone("sgH,,");
    assertEquals("sgH,,", cliente0.getFone());
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    Carteira carteira1 = cliente0.getCarteira();
    assertNotNull(carteira1);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Cliente cliente0 = new Cliente((String) null, (-1), "", "");
    Carteira carteira0 = new Carteira(0.0, (-1), 191.0);
    cliente0.setCarteira(carteira0);
    assertEquals((-1), cliente0.getIdade());
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    String string0 = cliente0.getEmail();
    assertEquals("Saldo insuficiente", string0);
    assertNotNull(string0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    String string0 = cliente0.getFone();
    assertNotNull(string0);
    assertEquals("c9FBDOj26e9", string0);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
    
    cliente0.setEmail("sgH,,");
    cliente0.getEmail();
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test00()  throws Throwable  {
    Integer integer0 = new Integer(0);
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(1.0);
    Destino destino0 = new Destino("v?AN2Q/CTBc5qq", integer0, climas0, double0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    destino0.setAtracoes(arrayList0);
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    Double double1 = new Double(1);
    destino0.setPreco(double1);
    assertEquals((double)double1, (double)double0, 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    Integer integer0 = new Integer(898);
    Climas climas0 = Climas.AGRADAVEL;
    Double double0 = new Double(241.13417);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("5(`M2SL4][&MS", integer0, climas0, double0, arrayList0);
    destino0.adicionaAtracao("5(`M2SL4][&MS");
    destino0.removeAtracao((-1));
    assertEquals(241.13417, destino0.getPreco(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.VENTANIA;
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("+X<t_<&]", integer0, climas0, (Double) null, arrayList0);
    Double double0 = destino0.getPreco();
    assertNull(double0);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Integer integer0 = new Integer((-488));
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double((-488));
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("example.app.models.Destino", integer0, climas0, double0, arrayList0);
    Double double1 = destino0.getPreco();
    assertEquals((-488.0), (double)double1, 0.01);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Double double0 = new Double(0.0);
    Climas climas0 = Climas.CHUVOSO;
    Destino destino0 = new Destino("wx DbX(+a&Ud7[1Q", (Integer) null, climas0, (Double) null, arrayList0);
    destino0.preco = double0;
    Double double1 = destino0.getPreco();
    assertEquals(0.0, (double)double1, 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Integer integer0 = new Integer((-2376));
    Climas climas0 = Climas.VENTANIA;
    Double double0 = new Double(187.6725);
    Destino destino0 = new Destino((String) null, integer0, climas0, double0);
    Double double1 = destino0.getPreco();
    assertNotNull(double1);
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(0.0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("", (Integer) null, climas0, double0, arrayList0);
    Boolean boolean0 = destino0.getCidadeTuristica();
    assertNull(boolean0);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Integer integer0 = new Integer(662);
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double(0.0);
    Destino destino0 = new Destino((String) null, integer0, climas0, double0);
    assertFalse(destino0.getCidadeTuristica());
    
    Boolean boolean0 = Boolean.valueOf(true);
    destino0.setCidadeTuristica(boolean0);
    destino0.getCidadeTuristica();
    assertTrue(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(2084);
    Destino destino0 = new Destino("/|", (Integer) null, climas0, double0);
    destino0.getAtracoes();
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    destino0.adicionaAtracao((String) null);
    ArrayList<String> arrayList1 = destino0.getAtracoes();
    assertFalse(arrayList1.contains("CHUVOSO"));
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Integer integer0 = new Integer((-1106));
    Climas climas0 = Climas.AGRADAVEL;
    Double double0 = new Double((-982.9847914361264));
    Destino destino0 = new Destino("example.app.models.Cidade", integer0, climas0, double0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao((-635));
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(0.0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("", (Integer) null, climas0, double0, arrayList0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao((-1327));
    fail("Expecting exception: ArrayIndexOutOfBoundsException");
    
    } catch(ArrayIndexOutOfBoundsException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    Integer integer0 = new Integer(5317);
    Climas climas0 = Climas.VENTANIA;
    Double double0 = new Double(5317);
    Destino destino0 = null;
    try {
    destino0 = new Destino("", integer0, climas0, double0, (ArrayList<String>) null);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    ArrayList<String> arrayList0 = new ArrayList<String>();
    arrayList0.add("");
    arrayList0.add((String) null);
    arrayList0.add("");
    arrayList0.add("");
    arrayList0.add("~~LOk|W6");
    arrayList0.add("wx DbX(+a&Ud7[1Q");
    Climas climas0 = Climas.CHUVOSO;
    Destino destino0 = new Destino("wx DbX(+a&Ud7[1Q", (Integer) null, climas0, (Double) null, arrayList0);
    assertTrue(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao(0);
    fail("Expecting exception: IndexOutOfBoundsException");
    
    } catch(IndexOutOfBoundsException e) {
        //
        // Index: 1, Size: 0
        //
        verifyException("java.util.ArrayList", e);
    }
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    ArrayList<String> arrayList1 = destino0.getAtracoes();
    assertSame(arrayList0, arrayList1);
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    Integer integer0 = new Integer((-1592));
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double(0.0);
    Destino destino0 = new Destino("Cd1-v '", integer0, climas0, double0);
    // Undeclared exception!
    try { 
    destino0.adicionaAtracao("");
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(2084);
    Destino destino0 = new Destino("/|", (Integer) null, climas0, double0);
    Boolean boolean0 = destino0.getCidadeTuristica();
    assertFalse(boolean0);
}

@Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
      Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
      Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
      empresa0.adicionaCliente(cliente0);
      ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
      assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
      assertFalse(arrayList0.contains(cliente0));
  }

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("n[>;n,\"oV(UzKEMC.Z", 1285.07203100387, hashMap0);
    Carteira carteira0 = new Carteira(1285.07203100387, 1285.07203100387, 1285.07203100387);
    Cliente cliente0 = new Cliente("n[>;n,\"oV(UzKEMC.Z", 21, "n[>;n,\"oV(UzKEMC.Z", "n[>;n,\"oV(UzKEMC.Z", carteira0);
    Boolean boolean0 = Boolean.valueOf("n[>;n,\"oV(UzKEMC.Z");
    hashMap0.put(cliente0, boolean0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertFalse(arrayList0.contains(cliente0));
    assertEquals(1285.07203100387, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", hashMap0);
    HashMap<Cliente, Boolean> hashMap1 = new HashMap<Cliente, Boolean>(226, 226);
    empresa0.setClientes(hashMap1);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 0.0, hashMap0);
    empresa0.getNome();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", (-1900.3841), hashMap0);
    String string0 = empresa0.getNome();
    assertEquals((-1900.3841), empresa0.getCaixa(), 0.01);
    assertNotNull(string0);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Empresa empresa0 = new Empresa("", (Map<Cliente, Boolean>) null);
    empresa0.getClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    empresa0.adicionaCliente(cliente0);
    empresa0.getClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Empresa empresa0 = new Empresa("uULRcy-", (Map<Cliente, Boolean>) null);
    double double0 = empresa0.getCaixa();
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("P,#G", (-1.0), hashMap0);
    double double0 = empresa0.getCaixa();
    assertEquals((-1.0), double0, 0.01);
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    empresa0.buscaCliente(cliente0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Empresa empresa0 = new Empresa("S", 957.482814242, (Map<Cliente, Boolean>) null);
    Carteira carteira0 = new Carteira(0, 0, 0.0);
    Cliente cliente0 = new Cliente("}YR=,ddq.lk:(HQsj", 0, "3'1)DWuF!7xWhxZn>", "}YR=,ddq.lk:(HQsj", carteira0);
    // Undeclared exception!
    try { 
    empresa0.removeCliente(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", 0.0, hashMap0);
    Boolean boolean0 = new Boolean("example.app.models.Cliente");
    hashMap0.put((Cliente) null, boolean0);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientesAtivos();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Empresa empresa0 = new Empresa("]1)ZWIN|@j=", (-1249.0873), (Map<Cliente, Boolean>) null);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientes();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("`wAnG<PdzOk", hashMap0);
    Carteira carteira0 = new Carteira(0, 4618.8836, 4618.8836);
    Cliente cliente0 = new Cliente("^", 0, "^", "?K", carteira0);
    // Undeclared exception!
    try { 
    empresa0.buscaClienteAtivo(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    Empresa empresa0 = new Empresa("uULRcy-", (Map<Cliente, Boolean>) null);
    Carteira carteira0 = new Carteira(1274.862, 1.0, (-2609.2058285026246));
    Cliente cliente0 = new Cliente("uULRcy-", (-1), "uULRcy-", "uULRcy-", carteira0);
    // Undeclared exception!
    try { 
    empresa0.buscaCliente(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 0.0, hashMap0);
    // Undeclared exception!
    try { 
    empresa0.adicionaCliente((Cliente) null);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 20, "TB[E?\"W_wvfU", "");
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
    assertTrue(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
    assertFalse(arrayList0.contains(cliente0));
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 1.5874623117978444, hashMap0);
    Cliente cliente0 = new Cliente((String) null, (-6), (String) null, (String) null);
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertEquals(1.5874623117978444, empresa0.getCaixa(), 0.01);
    assertFalse(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test19()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("n:^1s:EBM'RLm7", hashMap0);
    Cliente cliente0 = new Cliente("n:^1s:EBM'RLm7", 20, "n:^1s:EBM'RLm7", "n:^1s:EBM'RLm7");
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    empresa0.listaTodosClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test20()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    empresa0.listaTodosClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test21()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    Boolean boolean1 = empresa0.buscaClienteAtivo(cliente0);
    assertTrue(boolean1);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test22()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, (-3457.176), hashMap0);
    Cliente cliente0 = new Cliente((String) null, (-177), (String) null, (String) null);
    Boolean boolean0 = empresa0.buscaCliente(cliente0);
    assertNotNull(boolean0);
    
    hashMap0.put(cliente0, boolean0);
    Boolean boolean1 = empresa0.buscaClienteAtivo(cliente0);
    assertFalse(boolean1);
    assertEquals((-3457.176), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test23()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("<q+ t*9k6", hashMap0);
    Boolean boolean0 = empresa0.buscaCliente((Cliente) null);
    hashMap0.put((Cliente) null, boolean0);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientesInativos();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test24()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
    assertTrue(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test25()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
    empresa0.removeCliente(cliente0);
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test26()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    String string0 = empresa0.getNome();
    assertNotNull(string0);
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test27()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    empresa0.setNome("TB[E?\"W_wvfU");
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test28()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
    
    empresa0.setCaixa(1.0);
    assertEquals(1.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test29()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 1.5874623117978444, hashMap0);
    double double0 = empresa0.getCaixa();
    assertEquals(1.5874623117978444, double0, 0.01);
}

@Test(timeout = 4000)
public void test30()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Map<Cliente, Boolean> map0 = empresa0.getClientes();
    assertNotNull(map0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}
@Test(timeout = 4000)
public void test00()  throws Throwable  {
    Carteira carteira0 = new Carteira((-650.538551823452), (-650.538551823452), 0.0);
    carteira0.compraNoDebito((-650.538551823452));
    assertEquals((-650.538551823452), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    Carteira carteira0 = new Carteira((-2355.999273853816), 1.0, (-2355.999273853816));
    carteira0.compraSaldo((-2355.999273853816));
    assertEquals((-4711.998547707632), carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 0.0, 0.0);
    double double0 = carteira0.saldoTotal();
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
    assertEquals(0.0, carteira0.getSaldo(), 0.01);
    assertEquals(0.0, double0, 0.01);
    assertEquals(0.0, carteira0.getLimiteCredito(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    Carteira carteira0 = new Carteira((-727.5563483680716), (-3650.3607966822), (-203.95121365749));
    double double0 = carteira0.saldoTotal();
    assertEquals((-4581.868358707762), double0, 0.01);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 1555.1866392665322, 417.7768413161);
    double double0 = carteira0.getSaldo();
    assertEquals(1972.9634805826322, carteira0.saldoTotal(), 0.01);
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    assertEquals(2324.018253662, carteira0.getSaldo(), 0.01);
    
    carteira0.adicionaSaldo((-2215.0));
    double double0 = carteira0.getSaldo();
    assertEquals((-2215.0), double0, 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.combinaSaldo();
    double double0 = carteira0.getLimiteDebito();
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Carteira carteira0 = new Carteira(648.0, 648.0, (-838.3974));
    double double0 = carteira0.getLimiteDebito();
    assertEquals((-838.3974), double0, 0.01);
    assertEquals(457.60260000000005, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 0.0, 0.0);
    double double0 = carteira0.getLimiteCredito();
    assertEquals(0.0, carteira0.getSaldo(), 0.01);
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Carteira carteira0 = new Carteira(6149.5508, 6149.5508, (-2952.19846496588));
    double double0 = carteira0.getLimiteCredito();
    assertEquals(6149.5508, double0, 0.01);
    assertEquals(9346.903135034121, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.setLimiteDebito((-1.0));
    assertEquals((-1.0), carteira0.getLimiteDebito(), 0.01);
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraNoDebito(0.0);
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.compraNoCredito((-2215.0));
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraNoCredito((-1.0));
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.compraSaldo((-922.6779147158));
    assertEquals(1401.3403389462, carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraSaldo(1.0);
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.setLimiteCredito((-736.0631747));
    carteira0.compraNoCredito((-2215.0));
    assertEquals((-2215.0), carteira0.getLimiteCredito(), 0.01);
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getLimiteDebito();
    assertEquals(2324.018253662, double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.combinaSaldo();
    carteira0.compraNoDebito(0.0);
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
}

@Test(timeout = 4000)
public void test19()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.setSaldo((-736.0631747));
    assertEquals((-736.0631747), carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test20()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getSaldo();
    assertEquals(2324.018253662, double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test21()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.saldoTotal();
    assertEquals(2433.036507324, double0, 0.01);
}

@Test(timeout = 4000)
public void test22()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getLimiteCredito();
    assertEquals((-2215.0), double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Cliente cliente0 = new Cliente("0GhM*h<_L", (-158), "0GhM*h<_L", "V");
      cliente0.fone = "WEd";
      cliente0.fone = null;
      String string0 = cliente0.getFone();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Cliente cliente0 = new Cliente("", 0, "", "");
      String string0 = cliente0.getFone();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Cliente cliente0 = new Cliente("Cw$sYN93Xw\"Y'Z", (-1233), "", "d(43f!u\"iA>gw|dWeD");
      String string0 = cliente0.getEmail();
      assertEquals("", string0);
      assertEquals("d(43f!u\"iA>gw|dWeD", cliente0.getFone());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Cliente cliente0 = new Cliente("", 0, "", "");
      Carteira carteira0 = cliente0.getCarteira();
      assertNull(carteira0);
  }

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Cliente cliente0 = new Cliente("example.app.models.Cliente", 2578, "n", "example.app.models.Cliente");
    Carteira carteira0 = new Carteira(0.0, (-1.0), 2578);
    cliente0.carteira = carteira0;
    Carteira carteira1 = new Carteira(2578, 2578, 2578);
    cliente0.carteira = carteira1;
    cliente0.getCarteira();
    assertEquals("n", cliente0.getEmail());
    assertEquals("example.app.models.Cliente", cliente0.getFone());
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Carteira carteira0 = new Carteira((-1), (-1), (-2515.202332146312));
    Cliente cliente0 = new Cliente("X`pJIm%lP4 7c<I", (-1), "X`pJIm%lP4 7c<I", "example.app.models.Cliente", carteira0);
    Carteira carteira1 = cliente0.getCarteira();
    assertEquals("example.app.models.Cliente", cliente0.getFone());
    assertNotNull(carteira1);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    cliente0.setCarteira(carteira0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
    assertEquals("Saldo insuficiente", cliente0.getEmail());
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
    
    cliente0.setFone("sgH,,");
    assertEquals("sgH,,", cliente0.getFone());
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    Carteira carteira1 = cliente0.getCarteira();
    assertNotNull(carteira1);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Cliente cliente0 = new Cliente((String) null, (-1), "", "");
    Carteira carteira0 = new Carteira(0.0, (-1), 191.0);
    cliente0.setCarteira(carteira0);
    assertEquals((-1), cliente0.getIdade());
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    String string0 = cliente0.getEmail();
    assertEquals("Saldo insuficiente", string0);
    assertNotNull(string0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    String string0 = cliente0.getFone();
    assertNotNull(string0);
    assertEquals("c9FBDOj26e9", string0);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
    
    cliente0.setEmail("sgH,,");
    cliente0.getEmail();
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test00()  throws Throwable  {
    Integer integer0 = new Integer(0);
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(1.0);
    Destino destino0 = new Destino("v?AN2Q/CTBc5qq", integer0, climas0, double0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    destino0.setAtracoes(arrayList0);
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    Double double1 = new Double(1);
    destino0.setPreco(double1);
    assertEquals((double)double1, (double)double0, 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    Integer integer0 = new Integer(898);
    Climas climas0 = Climas.AGRADAVEL;
    Double double0 = new Double(241.13417);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("5(`M2SL4][&MS", integer0, climas0, double0, arrayList0);
    destino0.adicionaAtracao("5(`M2SL4][&MS");
    destino0.removeAtracao((-1));
    assertEquals(241.13417, destino0.getPreco(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.VENTANIA;
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("+X<t_<&]", integer0, climas0, (Double) null, arrayList0);
    Double double0 = destino0.getPreco();
    assertNull(double0);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Integer integer0 = new Integer((-488));
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double((-488));
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("example.app.models.Destino", integer0, climas0, double0, arrayList0);
    Double double1 = destino0.getPreco();
    assertEquals((-488.0), (double)double1, 0.01);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Double double0 = new Double(0.0);
    Climas climas0 = Climas.CHUVOSO;
    Destino destino0 = new Destino("wx DbX(+a&Ud7[1Q", (Integer) null, climas0, (Double) null, arrayList0);
    destino0.preco = double0;
    Double double1 = destino0.getPreco();
    assertEquals(0.0, (double)double1, 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Integer integer0 = new Integer((-2376));
    Climas climas0 = Climas.VENTANIA;
    Double double0 = new Double(187.6725);
    Destino destino0 = new Destino((String) null, integer0, climas0, double0);
    Double double1 = destino0.getPreco();
    assertNotNull(double1);
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(0.0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("", (Integer) null, climas0, double0, arrayList0);
    Boolean boolean0 = destino0.getCidadeTuristica();
    assertNull(boolean0);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Integer integer0 = new Integer(662);
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double(0.0);
    Destino destino0 = new Destino((String) null, integer0, climas0, double0);
    assertFalse(destino0.getCidadeTuristica());
    
    Boolean boolean0 = Boolean.valueOf(true);
    destino0.setCidadeTuristica(boolean0);
    destino0.getCidadeTuristica();
    assertTrue(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(2084);
    Destino destino0 = new Destino("/|", (Integer) null, climas0, double0);
    destino0.getAtracoes();
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    destino0.adicionaAtracao((String) null);
    ArrayList<String> arrayList1 = destino0.getAtracoes();
    assertFalse(arrayList1.contains("CHUVOSO"));
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Integer integer0 = new Integer((-1106));
    Climas climas0 = Climas.AGRADAVEL;
    Double double0 = new Double((-982.9847914361264));
    Destino destino0 = new Destino("example.app.models.Cidade", integer0, climas0, double0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao((-635));
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(0.0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("", (Integer) null, climas0, double0, arrayList0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao((-1327));
    fail("Expecting exception: ArrayIndexOutOfBoundsException");
    
    } catch(ArrayIndexOutOfBoundsException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    Integer integer0 = new Integer(5317);
    Climas climas0 = Climas.VENTANIA;
    Double double0 = new Double(5317);
    Destino destino0 = null;
    try {
    destino0 = new Destino("", integer0, climas0, double0, (ArrayList<String>) null);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    ArrayList<String> arrayList0 = new ArrayList<String>();
    arrayList0.add("");
    arrayList0.add((String) null);
    arrayList0.add("");
    arrayList0.add("");
    arrayList0.add("~~LOk|W6");
    arrayList0.add("wx DbX(+a&Ud7[1Q");
    Climas climas0 = Climas.CHUVOSO;
    Destino destino0 = new Destino("wx DbX(+a&Ud7[1Q", (Integer) null, climas0, (Double) null, arrayList0);
    assertTrue(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao(0);
    fail("Expecting exception: IndexOutOfBoundsException");
    
    } catch(IndexOutOfBoundsException e) {
        //
        // Index: 1, Size: 0
        //
        verifyException("java.util.ArrayList", e);
    }
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    ArrayList<String> arrayList1 = destino0.getAtracoes();
    assertSame(arrayList0, arrayList1);
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    Integer integer0 = new Integer((-1592));
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double(0.0);
    Destino destino0 = new Destino("Cd1-v '", integer0, climas0, double0);
    // Undeclared exception!
    try { 
    destino0.adicionaAtracao("");
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(2084);
    Destino destino0 = new Destino("/|", (Integer) null, climas0, double0);
    Boolean boolean0 = destino0.getCidadeTuristica();
    assertFalse(boolean0);
}

@Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
      Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
      Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
      empresa0.adicionaCliente(cliente0);
      ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
      assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
      assertFalse(arrayList0.contains(cliente0));
  }

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("n[>;n,\"oV(UzKEMC.Z", 1285.07203100387, hashMap0);
    Carteira carteira0 = new Carteira(1285.07203100387, 1285.07203100387, 1285.07203100387);
    Cliente cliente0 = new Cliente("n[>;n,\"oV(UzKEMC.Z", 21, "n[>;n,\"oV(UzKEMC.Z", "n[>;n,\"oV(UzKEMC.Z", carteira0);
    Boolean boolean0 = Boolean.valueOf("n[>;n,\"oV(UzKEMC.Z");
    hashMap0.put(cliente0, boolean0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertFalse(arrayList0.contains(cliente0));
    assertEquals(1285.07203100387, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", hashMap0);
    HashMap<Cliente, Boolean> hashMap1 = new HashMap<Cliente, Boolean>(226, 226);
    empresa0.setClientes(hashMap1);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 0.0, hashMap0);
    empresa0.getNome();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", (-1900.3841), hashMap0);
    String string0 = empresa0.getNome();
    assertEquals((-1900.3841), empresa0.getCaixa(), 0.01);
    assertNotNull(string0);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Empresa empresa0 = new Empresa("", (Map<Cliente, Boolean>) null);
    empresa0.getClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    empresa0.adicionaCliente(cliente0);
    empresa0.getClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Empresa empresa0 = new Empresa("uULRcy-", (Map<Cliente, Boolean>) null);
    double double0 = empresa0.getCaixa();
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("P,#G", (-1.0), hashMap0);
    double double0 = empresa0.getCaixa();
    assertEquals((-1.0), double0, 0.01);
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    empresa0.buscaCliente(cliente0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Empresa empresa0 = new Empresa("S", 957.482814242, (Map<Cliente, Boolean>) null);
    Carteira carteira0 = new Carteira(0, 0, 0.0);
    Cliente cliente0 = new Cliente("}YR=,ddq.lk:(HQsj", 0, "3'1)DWuF!7xWhxZn>", "}YR=,ddq.lk:(HQsj", carteira0);
    // Undeclared exception!
    try { 
    empresa0.removeCliente(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", 0.0, hashMap0);
    Boolean boolean0 = new Boolean("example.app.models.Cliente");
    hashMap0.put((Cliente) null, boolean0);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientesAtivos();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Empresa empresa0 = new Empresa("]1)ZWIN|@j=", (-1249.0873), (Map<Cliente, Boolean>) null);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientes();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("`wAnG<PdzOk", hashMap0);
    Carteira carteira0 = new Carteira(0, 4618.8836, 4618.8836);
    Cliente cliente0 = new Cliente("^", 0, "^", "?K", carteira0);
    // Undeclared exception!
    try { 
    empresa0.buscaClienteAtivo(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    Empresa empresa0 = new Empresa("uULRcy-", (Map<Cliente, Boolean>) null);
    Carteira carteira0 = new Carteira(1274.862, 1.0, (-2609.2058285026246));
    Cliente cliente0 = new Cliente("uULRcy-", (-1), "uULRcy-", "uULRcy-", carteira0);
    // Undeclared exception!
    try { 
    empresa0.buscaCliente(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 0.0, hashMap0);
    // Undeclared exception!
    try { 
    empresa0.adicionaCliente((Cliente) null);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 20, "TB[E?\"W_wvfU", "");
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
    assertTrue(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
    assertFalse(arrayList0.contains(cliente0));
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 1.5874623117978444, hashMap0);
    Cliente cliente0 = new Cliente((String) null, (-6), (String) null, (String) null);
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertEquals(1.5874623117978444, empresa0.getCaixa(), 0.01);
    assertFalse(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test19()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("n:^1s:EBM'RLm7", hashMap0);
    Cliente cliente0 = new Cliente("n:^1s:EBM'RLm7", 20, "n:^1s:EBM'RLm7", "n:^1s:EBM'RLm7");
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    empresa0.listaTodosClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test20()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    empresa0.listaTodosClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test21()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    Boolean boolean1 = empresa0.buscaClienteAtivo(cliente0);
    assertTrue(boolean1);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test22()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, (-3457.176), hashMap0);
    Cliente cliente0 = new Cliente((String) null, (-177), (String) null, (String) null);
    Boolean boolean0 = empresa0.buscaCliente(cliente0);
    assertNotNull(boolean0);
    
    hashMap0.put(cliente0, boolean0);
    Boolean boolean1 = empresa0.buscaClienteAtivo(cliente0);
    assertFalse(boolean1);
    assertEquals((-3457.176), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test23()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("<q+ t*9k6", hashMap0);
    Boolean boolean0 = empresa0.buscaCliente((Cliente) null);
    hashMap0.put((Cliente) null, boolean0);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientesInativos();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test24()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
    assertTrue(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test25()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
    empresa0.removeCliente(cliente0);
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test26()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    String string0 = empresa0.getNome();
    assertNotNull(string0);
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test27()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    empresa0.setNome("TB[E?\"W_wvfU");
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test28()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
    
    empresa0.setCaixa(1.0);
    assertEquals(1.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test29()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 1.5874623117978444, hashMap0);
    double double0 = empresa0.getCaixa();
    assertEquals(1.5874623117978444, double0, 0.01);
}

@Test(timeout = 4000)
public void test30()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Map<Cliente, Boolean> map0 = empresa0.getClientes();
    assertNotNull(map0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}
@Test(timeout = 4000)
public void test00()  throws Throwable  {
    Carteira carteira0 = new Carteira((-650.538551823452), (-650.538551823452), 0.0);
    carteira0.compraNoDebito((-650.538551823452));
    assertEquals((-650.538551823452), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    Carteira carteira0 = new Carteira((-2355.999273853816), 1.0, (-2355.999273853816));
    carteira0.compraSaldo((-2355.999273853816));
    assertEquals((-4711.998547707632), carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 0.0, 0.0);
    double double0 = carteira0.saldoTotal();
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
    assertEquals(0.0, carteira0.getSaldo(), 0.01);
    assertEquals(0.0, double0, 0.01);
    assertEquals(0.0, carteira0.getLimiteCredito(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    Carteira carteira0 = new Carteira((-727.5563483680716), (-3650.3607966822), (-203.95121365749));
    double double0 = carteira0.saldoTotal();
    assertEquals((-4581.868358707762), double0, 0.01);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 1555.1866392665322, 417.7768413161);
    double double0 = carteira0.getSaldo();
    assertEquals(1972.9634805826322, carteira0.saldoTotal(), 0.01);
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    assertEquals(2324.018253662, carteira0.getSaldo(), 0.01);
    
    carteira0.adicionaSaldo((-2215.0));
    double double0 = carteira0.getSaldo();
    assertEquals((-2215.0), double0, 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.combinaSaldo();
    double double0 = carteira0.getLimiteDebito();
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Carteira carteira0 = new Carteira(648.0, 648.0, (-838.3974));
    double double0 = carteira0.getLimiteDebito();
    assertEquals((-838.3974), double0, 0.01);
    assertEquals(457.60260000000005, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 0.0, 0.0);
    double double0 = carteira0.getLimiteCredito();
    assertEquals(0.0, carteira0.getSaldo(), 0.01);
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Carteira carteira0 = new Carteira(6149.5508, 6149.5508, (-2952.19846496588));
    double double0 = carteira0.getLimiteCredito();
    assertEquals(6149.5508, double0, 0.01);
    assertEquals(9346.903135034121, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.setLimiteDebito((-1.0));
    assertEquals((-1.0), carteira0.getLimiteDebito(), 0.01);
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraNoDebito(0.0);
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.compraNoCredito((-2215.0));
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraNoCredito((-1.0));
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.compraSaldo((-922.6779147158));
    assertEquals(1401.3403389462, carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraSaldo(1.0);
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.setLimiteCredito((-736.0631747));
    carteira0.compraNoCredito((-2215.0));
    assertEquals((-2215.0), carteira0.getLimiteCredito(), 0.01);
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getLimiteDebito();
    assertEquals(2324.018253662, double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.combinaSaldo();
    carteira0.compraNoDebito(0.0);
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
}

@Test(timeout = 4000)
public void test19()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.setSaldo((-736.0631747));
    assertEquals((-736.0631747), carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test20()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getSaldo();
    assertEquals(2324.018253662, double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test21()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.saldoTotal();
    assertEquals(2433.036507324, double0, 0.01);
}

@Test(timeout = 4000)
public void test22()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getLimiteCredito();
    assertEquals((-2215.0), double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Cliente cliente0 = new Cliente("0GhM*h<_L", (-158), "0GhM*h<_L", "V");
      cliente0.fone = "WEd";
      cliente0.fone = null;
      String string0 = cliente0.getFone();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Cliente cliente0 = new Cliente("", 0, "", "");
      String string0 = cliente0.getFone();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Cliente cliente0 = new Cliente("Cw$sYN93Xw\"Y'Z", (-1233), "", "d(43f!u\"iA>gw|dWeD");
      String string0 = cliente0.getEmail();
      assertEquals("", string0);
      assertEquals("d(43f!u\"iA>gw|dWeD", cliente0.getFone());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Cliente cliente0 = new Cliente("", 0, "", "");
      Carteira carteira0 = cliente0.getCarteira();
      assertNull(carteira0);
  }

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Cliente cliente0 = new Cliente("example.app.models.Cliente", 2578, "n", "example.app.models.Cliente");
    Carteira carteira0 = new Carteira(0.0, (-1.0), 2578);
    cliente0.carteira = carteira0;
    Carteira carteira1 = new Carteira(2578, 2578, 2578);
    cliente0.carteira = carteira1;
    cliente0.getCarteira();
    assertEquals("n", cliente0.getEmail());
    assertEquals("example.app.models.Cliente", cliente0.getFone());
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Carteira carteira0 = new Carteira((-1), (-1), (-2515.202332146312));
    Cliente cliente0 = new Cliente("X`pJIm%lP4 7c<I", (-1), "X`pJIm%lP4 7c<I", "example.app.models.Cliente", carteira0);
    Carteira carteira1 = cliente0.getCarteira();
    assertEquals("example.app.models.Cliente", cliente0.getFone());
    assertNotNull(carteira1);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    cliente0.setCarteira(carteira0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
    assertEquals("Saldo insuficiente", cliente0.getEmail());
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
    
    cliente0.setFone("sgH,,");
    assertEquals("sgH,,", cliente0.getFone());
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    Carteira carteira1 = cliente0.getCarteira();
    assertNotNull(carteira1);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Cliente cliente0 = new Cliente((String) null, (-1), "", "");
    Carteira carteira0 = new Carteira(0.0, (-1), 191.0);
    cliente0.setCarteira(carteira0);
    assertEquals((-1), cliente0.getIdade());
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    String string0 = cliente0.getEmail();
    assertEquals("Saldo insuficiente", string0);
    assertNotNull(string0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    String string0 = cliente0.getFone();
    assertNotNull(string0);
    assertEquals("c9FBDOj26e9", string0);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
    
    cliente0.setEmail("sgH,,");
    cliente0.getEmail();
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test00()  throws Throwable  {
    Integer integer0 = new Integer(0);
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(1.0);
    Destino destino0 = new Destino("v?AN2Q/CTBc5qq", integer0, climas0, double0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    destino0.setAtracoes(arrayList0);
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    Double double1 = new Double(1);
    destino0.setPreco(double1);
    assertEquals((double)double1, (double)double0, 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    Integer integer0 = new Integer(898);
    Climas climas0 = Climas.AGRADAVEL;
    Double double0 = new Double(241.13417);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("5(`M2SL4][&MS", integer0, climas0, double0, arrayList0);
    destino0.adicionaAtracao("5(`M2SL4][&MS");
    destino0.removeAtracao((-1));
    assertEquals(241.13417, destino0.getPreco(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.VENTANIA;
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("+X<t_<&]", integer0, climas0, (Double) null, arrayList0);
    Double double0 = destino0.getPreco();
    assertNull(double0);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Integer integer0 = new Integer((-488));
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double((-488));
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("example.app.models.Destino", integer0, climas0, double0, arrayList0);
    Double double1 = destino0.getPreco();
    assertEquals((-488.0), (double)double1, 0.01);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Double double0 = new Double(0.0);
    Climas climas0 = Climas.CHUVOSO;
    Destino destino0 = new Destino("wx DbX(+a&Ud7[1Q", (Integer) null, climas0, (Double) null, arrayList0);
    destino0.preco = double0;
    Double double1 = destino0.getPreco();
    assertEquals(0.0, (double)double1, 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Integer integer0 = new Integer((-2376));
    Climas climas0 = Climas.VENTANIA;
    Double double0 = new Double(187.6725);
    Destino destino0 = new Destino((String) null, integer0, climas0, double0);
    Double double1 = destino0.getPreco();
    assertNotNull(double1);
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(0.0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("", (Integer) null, climas0, double0, arrayList0);
    Boolean boolean0 = destino0.getCidadeTuristica();
    assertNull(boolean0);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Integer integer0 = new Integer(662);
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double(0.0);
    Destino destino0 = new Destino((String) null, integer0, climas0, double0);
    assertFalse(destino0.getCidadeTuristica());
    
    Boolean boolean0 = Boolean.valueOf(true);
    destino0.setCidadeTuristica(boolean0);
    destino0.getCidadeTuristica();
    assertTrue(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(2084);
    Destino destino0 = new Destino("/|", (Integer) null, climas0, double0);
    destino0.getAtracoes();
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    destino0.adicionaAtracao((String) null);
    ArrayList<String> arrayList1 = destino0.getAtracoes();
    assertFalse(arrayList1.contains("CHUVOSO"));
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Integer integer0 = new Integer((-1106));
    Climas climas0 = Climas.AGRADAVEL;
    Double double0 = new Double((-982.9847914361264));
    Destino destino0 = new Destino("example.app.models.Cidade", integer0, climas0, double0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao((-635));
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(0.0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("", (Integer) null, climas0, double0, arrayList0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao((-1327));
    fail("Expecting exception: ArrayIndexOutOfBoundsException");
    
    } catch(ArrayIndexOutOfBoundsException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    Integer integer0 = new Integer(5317);
    Climas climas0 = Climas.VENTANIA;
    Double double0 = new Double(5317);
    Destino destino0 = null;
    try {
    destino0 = new Destino("", integer0, climas0, double0, (ArrayList<String>) null);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    ArrayList<String> arrayList0 = new ArrayList<String>();
    arrayList0.add("");
    arrayList0.add((String) null);
    arrayList0.add("");
    arrayList0.add("");
    arrayList0.add("~~LOk|W6");
    arrayList0.add("wx DbX(+a&Ud7[1Q");
    Climas climas0 = Climas.CHUVOSO;
    Destino destino0 = new Destino("wx DbX(+a&Ud7[1Q", (Integer) null, climas0, (Double) null, arrayList0);
    assertTrue(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao(0);
    fail("Expecting exception: IndexOutOfBoundsException");
    
    } catch(IndexOutOfBoundsException e) {
        //
        // Index: 1, Size: 0
        //
        verifyException("java.util.ArrayList", e);
    }
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    ArrayList<String> arrayList1 = destino0.getAtracoes();
    assertSame(arrayList0, arrayList1);
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    Integer integer0 = new Integer((-1592));
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double(0.0);
    Destino destino0 = new Destino("Cd1-v '", integer0, climas0, double0);
    // Undeclared exception!
    try { 
    destino0.adicionaAtracao("");
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(2084);
    Destino destino0 = new Destino("/|", (Integer) null, climas0, double0);
    Boolean boolean0 = destino0.getCidadeTuristica();
    assertFalse(boolean0);
}

@Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
      Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
      Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
      empresa0.adicionaCliente(cliente0);
      ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
      assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
      assertFalse(arrayList0.contains(cliente0));
  }

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("n[>;n,\"oV(UzKEMC.Z", 1285.07203100387, hashMap0);
    Carteira carteira0 = new Carteira(1285.07203100387, 1285.07203100387, 1285.07203100387);
    Cliente cliente0 = new Cliente("n[>;n,\"oV(UzKEMC.Z", 21, "n[>;n,\"oV(UzKEMC.Z", "n[>;n,\"oV(UzKEMC.Z", carteira0);
    Boolean boolean0 = Boolean.valueOf("n[>;n,\"oV(UzKEMC.Z");
    hashMap0.put(cliente0, boolean0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertFalse(arrayList0.contains(cliente0));
    assertEquals(1285.07203100387, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", hashMap0);
    HashMap<Cliente, Boolean> hashMap1 = new HashMap<Cliente, Boolean>(226, 226);
    empresa0.setClientes(hashMap1);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 0.0, hashMap0);
    empresa0.getNome();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", (-1900.3841), hashMap0);
    String string0 = empresa0.getNome();
    assertEquals((-1900.3841), empresa0.getCaixa(), 0.01);
    assertNotNull(string0);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Empresa empresa0 = new Empresa("", (Map<Cliente, Boolean>) null);
    empresa0.getClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    empresa0.adicionaCliente(cliente0);
    empresa0.getClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Empresa empresa0 = new Empresa("uULRcy-", (Map<Cliente, Boolean>) null);
    double double0 = empresa0.getCaixa();
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("P,#G", (-1.0), hashMap0);
    double double0 = empresa0.getCaixa();
    assertEquals((-1.0), double0, 0.01);
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    empresa0.buscaCliente(cliente0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Empresa empresa0 = new Empresa("S", 957.482814242, (Map<Cliente, Boolean>) null);
    Carteira carteira0 = new Carteira(0, 0, 0.0);
    Cliente cliente0 = new Cliente("}YR=,ddq.lk:(HQsj", 0, "3'1)DWuF!7xWhxZn>", "}YR=,ddq.lk:(HQsj", carteira0);
    // Undeclared exception!
    try { 
    empresa0.removeCliente(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", 0.0, hashMap0);
    Boolean boolean0 = new Boolean("example.app.models.Cliente");
    hashMap0.put((Cliente) null, boolean0);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientesAtivos();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Empresa empresa0 = new Empresa("]1)ZWIN|@j=", (-1249.0873), (Map<Cliente, Boolean>) null);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientes();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("`wAnG<PdzOk", hashMap0);
    Carteira carteira0 = new Carteira(0, 4618.8836, 4618.8836);
    Cliente cliente0 = new Cliente("^", 0, "^", "?K", carteira0);
    // Undeclared exception!
    try { 
    empresa0.buscaClienteAtivo(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    Empresa empresa0 = new Empresa("uULRcy-", (Map<Cliente, Boolean>) null);
    Carteira carteira0 = new Carteira(1274.862, 1.0, (-2609.2058285026246));
    Cliente cliente0 = new Cliente("uULRcy-", (-1), "uULRcy-", "uULRcy-", carteira0);
    // Undeclared exception!
    try { 
    empresa0.buscaCliente(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 0.0, hashMap0);
    // Undeclared exception!
    try { 
    empresa0.adicionaCliente((Cliente) null);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 20, "TB[E?\"W_wvfU", "");
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
    assertTrue(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
    assertFalse(arrayList0.contains(cliente0));
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 1.5874623117978444, hashMap0);
    Cliente cliente0 = new Cliente((String) null, (-6), (String) null, (String) null);
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertEquals(1.5874623117978444, empresa0.getCaixa(), 0.01);
    assertFalse(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test19()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("n:^1s:EBM'RLm7", hashMap0);
    Cliente cliente0 = new Cliente("n:^1s:EBM'RLm7", 20, "n:^1s:EBM'RLm7", "n:^1s:EBM'RLm7");
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    empresa0.listaTodosClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test20()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    empresa0.listaTodosClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test21()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    Boolean boolean1 = empresa0.buscaClienteAtivo(cliente0);
    assertTrue(boolean1);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test22()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, (-3457.176), hashMap0);
    Cliente cliente0 = new Cliente((String) null, (-177), (String) null, (String) null);
    Boolean boolean0 = empresa0.buscaCliente(cliente0);
    assertNotNull(boolean0);
    
    hashMap0.put(cliente0, boolean0);
    Boolean boolean1 = empresa0.buscaClienteAtivo(cliente0);
    assertFalse(boolean1);
    assertEquals((-3457.176), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test23()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("<q+ t*9k6", hashMap0);
    Boolean boolean0 = empresa0.buscaCliente((Cliente) null);
    hashMap0.put((Cliente) null, boolean0);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientesInativos();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test24()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
    assertTrue(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test25()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
    empresa0.removeCliente(cliente0);
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test26()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    String string0 = empresa0.getNome();
    assertNotNull(string0);
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test27()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    empresa0.setNome("TB[E?\"W_wvfU");
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test28()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
    
    empresa0.setCaixa(1.0);
    assertEquals(1.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test29()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 1.5874623117978444, hashMap0);
    double double0 = empresa0.getCaixa();
    assertEquals(1.5874623117978444, double0, 0.01);
}

@Test(timeout = 4000)
public void test30()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Map<Cliente, Boolean> map0 = empresa0.getClientes();
    assertNotNull(map0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}
@Test(timeout = 4000)
public void test00()  throws Throwable  {
    Carteira carteira0 = new Carteira((-650.538551823452), (-650.538551823452), 0.0);
    carteira0.compraNoDebito((-650.538551823452));
    assertEquals((-650.538551823452), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    Carteira carteira0 = new Carteira((-2355.999273853816), 1.0, (-2355.999273853816));
    carteira0.compraSaldo((-2355.999273853816));
    assertEquals((-4711.998547707632), carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 0.0, 0.0);
    double double0 = carteira0.saldoTotal();
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
    assertEquals(0.0, carteira0.getSaldo(), 0.01);
    assertEquals(0.0, double0, 0.01);
    assertEquals(0.0, carteira0.getLimiteCredito(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    Carteira carteira0 = new Carteira((-727.5563483680716), (-3650.3607966822), (-203.95121365749));
    double double0 = carteira0.saldoTotal();
    assertEquals((-4581.868358707762), double0, 0.01);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 1555.1866392665322, 417.7768413161);
    double double0 = carteira0.getSaldo();
    assertEquals(1972.9634805826322, carteira0.saldoTotal(), 0.01);
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    assertEquals(2324.018253662, carteira0.getSaldo(), 0.01);
    
    carteira0.adicionaSaldo((-2215.0));
    double double0 = carteira0.getSaldo();
    assertEquals((-2215.0), double0, 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.combinaSaldo();
    double double0 = carteira0.getLimiteDebito();
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Carteira carteira0 = new Carteira(648.0, 648.0, (-838.3974));
    double double0 = carteira0.getLimiteDebito();
    assertEquals((-838.3974), double0, 0.01);
    assertEquals(457.60260000000005, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 0.0, 0.0);
    double double0 = carteira0.getLimiteCredito();
    assertEquals(0.0, carteira0.getSaldo(), 0.01);
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Carteira carteira0 = new Carteira(6149.5508, 6149.5508, (-2952.19846496588));
    double double0 = carteira0.getLimiteCredito();
    assertEquals(6149.5508, double0, 0.01);
    assertEquals(9346.903135034121, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.setLimiteDebito((-1.0));
    assertEquals((-1.0), carteira0.getLimiteDebito(), 0.01);
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraNoDebito(0.0);
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.compraNoCredito((-2215.0));
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraNoCredito((-1.0));
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.compraSaldo((-922.6779147158));
    assertEquals(1401.3403389462, carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraSaldo(1.0);
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.setLimiteCredito((-736.0631747));
    carteira0.compraNoCredito((-2215.0));
    assertEquals((-2215.0), carteira0.getLimiteCredito(), 0.01);
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getLimiteDebito();
    assertEquals(2324.018253662, double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.combinaSaldo();
    carteira0.compraNoDebito(0.0);
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
}

@Test(timeout = 4000)
public void test19()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.setSaldo((-736.0631747));
    assertEquals((-736.0631747), carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test20()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getSaldo();
    assertEquals(2324.018253662, double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test21()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.saldoTotal();
    assertEquals(2433.036507324, double0, 0.01);
}

@Test(timeout = 4000)
public void test22()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getLimiteCredito();
    assertEquals((-2215.0), double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Cliente cliente0 = new Cliente("0GhM*h<_L", (-158), "0GhM*h<_L", "V");
      cliente0.fone = "WEd";
      cliente0.fone = null;
      String string0 = cliente0.getFone();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Cliente cliente0 = new Cliente("", 0, "", "");
      String string0 = cliente0.getFone();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Cliente cliente0 = new Cliente("Cw$sYN93Xw\"Y'Z", (-1233), "", "d(43f!u\"iA>gw|dWeD");
      String string0 = cliente0.getEmail();
      assertEquals("", string0);
      assertEquals("d(43f!u\"iA>gw|dWeD", cliente0.getFone());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Cliente cliente0 = new Cliente("", 0, "", "");
      Carteira carteira0 = cliente0.getCarteira();
      assertNull(carteira0);
  }

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Cliente cliente0 = new Cliente("example.app.models.Cliente", 2578, "n", "example.app.models.Cliente");
    Carteira carteira0 = new Carteira(0.0, (-1.0), 2578);
    cliente0.carteira = carteira0;
    Carteira carteira1 = new Carteira(2578, 2578, 2578);
    cliente0.carteira = carteira1;
    cliente0.getCarteira();
    assertEquals("n", cliente0.getEmail());
    assertEquals("example.app.models.Cliente", cliente0.getFone());
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Carteira carteira0 = new Carteira((-1), (-1), (-2515.202332146312));
    Cliente cliente0 = new Cliente("X`pJIm%lP4 7c<I", (-1), "X`pJIm%lP4 7c<I", "example.app.models.Cliente", carteira0);
    Carteira carteira1 = cliente0.getCarteira();
    assertEquals("example.app.models.Cliente", cliente0.getFone());
    assertNotNull(carteira1);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    cliente0.setCarteira(carteira0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
    assertEquals("Saldo insuficiente", cliente0.getEmail());
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
    
    cliente0.setFone("sgH,,");
    assertEquals("sgH,,", cliente0.getFone());
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    Carteira carteira1 = cliente0.getCarteira();
    assertNotNull(carteira1);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Cliente cliente0 = new Cliente((String) null, (-1), "", "");
    Carteira carteira0 = new Carteira(0.0, (-1), 191.0);
    cliente0.setCarteira(carteira0);
    assertEquals((-1), cliente0.getIdade());
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    String string0 = cliente0.getEmail();
    assertEquals("Saldo insuficiente", string0);
    assertNotNull(string0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    String string0 = cliente0.getFone();
    assertNotNull(string0);
    assertEquals("c9FBDOj26e9", string0);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
    
    cliente0.setEmail("sgH,,");
    cliente0.getEmail();
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test00()  throws Throwable  {
    Integer integer0 = new Integer(0);
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(1.0);
    Destino destino0 = new Destino("v?AN2Q/CTBc5qq", integer0, climas0, double0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    destino0.setAtracoes(arrayList0);
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    Double double1 = new Double(1);
    destino0.setPreco(double1);
    assertEquals((double)double1, (double)double0, 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    Integer integer0 = new Integer(898);
    Climas climas0 = Climas.AGRADAVEL;
    Double double0 = new Double(241.13417);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("5(`M2SL4][&MS", integer0, climas0, double0, arrayList0);
    destino0.adicionaAtracao("5(`M2SL4][&MS");
    destino0.removeAtracao((-1));
    assertEquals(241.13417, destino0.getPreco(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.VENTANIA;
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("+X<t_<&]", integer0, climas0, (Double) null, arrayList0);
    Double double0 = destino0.getPreco();
    assertNull(double0);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Integer integer0 = new Integer((-488));
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double((-488));
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("example.app.models.Destino", integer0, climas0, double0, arrayList0);
    Double double1 = destino0.getPreco();
    assertEquals((-488.0), (double)double1, 0.01);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Double double0 = new Double(0.0);
    Climas climas0 = Climas.CHUVOSO;
    Destino destino0 = new Destino("wx DbX(+a&Ud7[1Q", (Integer) null, climas0, (Double) null, arrayList0);
    destino0.preco = double0;
    Double double1 = destino0.getPreco();
    assertEquals(0.0, (double)double1, 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Integer integer0 = new Integer((-2376));
    Climas climas0 = Climas.VENTANIA;
    Double double0 = new Double(187.6725);
    Destino destino0 = new Destino((String) null, integer0, climas0, double0);
    Double double1 = destino0.getPreco();
    assertNotNull(double1);
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(0.0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("", (Integer) null, climas0, double0, arrayList0);
    Boolean boolean0 = destino0.getCidadeTuristica();
    assertNull(boolean0);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Integer integer0 = new Integer(662);
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double(0.0);
    Destino destino0 = new Destino((String) null, integer0, climas0, double0);
    assertFalse(destino0.getCidadeTuristica());
    
    Boolean boolean0 = Boolean.valueOf(true);
    destino0.setCidadeTuristica(boolean0);
    destino0.getCidadeTuristica();
    assertTrue(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(2084);
    Destino destino0 = new Destino("/|", (Integer) null, climas0, double0);
    destino0.getAtracoes();
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    destino0.adicionaAtracao((String) null);
    ArrayList<String> arrayList1 = destino0.getAtracoes();
    assertFalse(arrayList1.contains("CHUVOSO"));
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Integer integer0 = new Integer((-1106));
    Climas climas0 = Climas.AGRADAVEL;
    Double double0 = new Double((-982.9847914361264));
    Destino destino0 = new Destino("example.app.models.Cidade", integer0, climas0, double0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao((-635));
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(0.0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("", (Integer) null, climas0, double0, arrayList0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao((-1327));
    fail("Expecting exception: ArrayIndexOutOfBoundsException");
    
    } catch(ArrayIndexOutOfBoundsException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    Integer integer0 = new Integer(5317);
    Climas climas0 = Climas.VENTANIA;
    Double double0 = new Double(5317);
    Destino destino0 = null;
    try {
    destino0 = new Destino("", integer0, climas0, double0, (ArrayList<String>) null);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    ArrayList<String> arrayList0 = new ArrayList<String>();
    arrayList0.add("");
    arrayList0.add((String) null);
    arrayList0.add("");
    arrayList0.add("");
    arrayList0.add("~~LOk|W6");
    arrayList0.add("wx DbX(+a&Ud7[1Q");
    Climas climas0 = Climas.CHUVOSO;
    Destino destino0 = new Destino("wx DbX(+a&Ud7[1Q", (Integer) null, climas0, (Double) null, arrayList0);
    assertTrue(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao(0);
    fail("Expecting exception: IndexOutOfBoundsException");
    
    } catch(IndexOutOfBoundsException e) {
        //
        // Index: 1, Size: 0
        //
        verifyException("java.util.ArrayList", e);
    }
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    ArrayList<String> arrayList1 = destino0.getAtracoes();
    assertSame(arrayList0, arrayList1);
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    Integer integer0 = new Integer((-1592));
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double(0.0);
    Destino destino0 = new Destino("Cd1-v '", integer0, climas0, double0);
    // Undeclared exception!
    try { 
    destino0.adicionaAtracao("");
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(2084);
    Destino destino0 = new Destino("/|", (Integer) null, climas0, double0);
    Boolean boolean0 = destino0.getCidadeTuristica();
    assertFalse(boolean0);
}

@Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
      Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
      Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
      empresa0.adicionaCliente(cliente0);
      ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
      assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
      assertFalse(arrayList0.contains(cliente0));
  }

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("n[>;n,\"oV(UzKEMC.Z", 1285.07203100387, hashMap0);
    Carteira carteira0 = new Carteira(1285.07203100387, 1285.07203100387, 1285.07203100387);
    Cliente cliente0 = new Cliente("n[>;n,\"oV(UzKEMC.Z", 21, "n[>;n,\"oV(UzKEMC.Z", "n[>;n,\"oV(UzKEMC.Z", carteira0);
    Boolean boolean0 = Boolean.valueOf("n[>;n,\"oV(UzKEMC.Z");
    hashMap0.put(cliente0, boolean0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertFalse(arrayList0.contains(cliente0));
    assertEquals(1285.07203100387, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", hashMap0);
    HashMap<Cliente, Boolean> hashMap1 = new HashMap<Cliente, Boolean>(226, 226);
    empresa0.setClientes(hashMap1);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 0.0, hashMap0);
    empresa0.getNome();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", (-1900.3841), hashMap0);
    String string0 = empresa0.getNome();
    assertEquals((-1900.3841), empresa0.getCaixa(), 0.01);
    assertNotNull(string0);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Empresa empresa0 = new Empresa("", (Map<Cliente, Boolean>) null);
    empresa0.getClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    empresa0.adicionaCliente(cliente0);
    empresa0.getClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Empresa empresa0 = new Empresa("uULRcy-", (Map<Cliente, Boolean>) null);
    double double0 = empresa0.getCaixa();
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("P,#G", (-1.0), hashMap0);
    double double0 = empresa0.getCaixa();
    assertEquals((-1.0), double0, 0.01);
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    empresa0.buscaCliente(cliente0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Empresa empresa0 = new Empresa("S", 957.482814242, (Map<Cliente, Boolean>) null);
    Carteira carteira0 = new Carteira(0, 0, 0.0);
    Cliente cliente0 = new Cliente("}YR=,ddq.lk:(HQsj", 0, "3'1)DWuF!7xWhxZn>", "}YR=,ddq.lk:(HQsj", carteira0);
    // Undeclared exception!
    try { 
    empresa0.removeCliente(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", 0.0, hashMap0);
    Boolean boolean0 = new Boolean("example.app.models.Cliente");
    hashMap0.put((Cliente) null, boolean0);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientesAtivos();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Empresa empresa0 = new Empresa("]1)ZWIN|@j=", (-1249.0873), (Map<Cliente, Boolean>) null);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientes();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("`wAnG<PdzOk", hashMap0);
    Carteira carteira0 = new Carteira(0, 4618.8836, 4618.8836);
    Cliente cliente0 = new Cliente("^", 0, "^", "?K", carteira0);
    // Undeclared exception!
    try { 
    empresa0.buscaClienteAtivo(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    Empresa empresa0 = new Empresa("uULRcy-", (Map<Cliente, Boolean>) null);
    Carteira carteira0 = new Carteira(1274.862, 1.0, (-2609.2058285026246));
    Cliente cliente0 = new Cliente("uULRcy-", (-1), "uULRcy-", "uULRcy-", carteira0);
    // Undeclared exception!
    try { 
    empresa0.buscaCliente(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 0.0, hashMap0);
    // Undeclared exception!
    try { 
    empresa0.adicionaCliente((Cliente) null);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 20, "TB[E?\"W_wvfU", "");
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
    assertTrue(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
    assertFalse(arrayList0.contains(cliente0));
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 1.5874623117978444, hashMap0);
    Cliente cliente0 = new Cliente((String) null, (-6), (String) null, (String) null);
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertEquals(1.5874623117978444, empresa0.getCaixa(), 0.01);
    assertFalse(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test19()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("n:^1s:EBM'RLm7", hashMap0);
    Cliente cliente0 = new Cliente("n:^1s:EBM'RLm7", 20, "n:^1s:EBM'RLm7", "n:^1s:EBM'RLm7");
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    empresa0.listaTodosClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test20()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    empresa0.listaTodosClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test21()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    Boolean boolean1 = empresa0.buscaClienteAtivo(cliente0);
    assertTrue(boolean1);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test22()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, (-3457.176), hashMap0);
    Cliente cliente0 = new Cliente((String) null, (-177), (String) null, (String) null);
    Boolean boolean0 = empresa0.buscaCliente(cliente0);
    assertNotNull(boolean0);
    
    hashMap0.put(cliente0, boolean0);
    Boolean boolean1 = empresa0.buscaClienteAtivo(cliente0);
    assertFalse(boolean1);
    assertEquals((-3457.176), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test23()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("<q+ t*9k6", hashMap0);
    Boolean boolean0 = empresa0.buscaCliente((Cliente) null);
    hashMap0.put((Cliente) null, boolean0);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientesInativos();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test24()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
    assertTrue(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test25()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
    empresa0.removeCliente(cliente0);
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test26()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    String string0 = empresa0.getNome();
    assertNotNull(string0);
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test27()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    empresa0.setNome("TB[E?\"W_wvfU");
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test28()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
    
    empresa0.setCaixa(1.0);
    assertEquals(1.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test29()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 1.5874623117978444, hashMap0);
    double double0 = empresa0.getCaixa();
    assertEquals(1.5874623117978444, double0, 0.01);
}

@Test(timeout = 4000)
public void test30()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Map<Cliente, Boolean> map0 = empresa0.getClientes();
    assertNotNull(map0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}
@Test(timeout = 4000)
public void test00()  throws Throwable  {
    Carteira carteira0 = new Carteira((-650.538551823452), (-650.538551823452), 0.0);
    carteira0.compraNoDebito((-650.538551823452));
    assertEquals((-650.538551823452), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    Carteira carteira0 = new Carteira((-2355.999273853816), 1.0, (-2355.999273853816));
    carteira0.compraSaldo((-2355.999273853816));
    assertEquals((-4711.998547707632), carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 0.0, 0.0);
    double double0 = carteira0.saldoTotal();
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
    assertEquals(0.0, carteira0.getSaldo(), 0.01);
    assertEquals(0.0, double0, 0.01);
    assertEquals(0.0, carteira0.getLimiteCredito(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    Carteira carteira0 = new Carteira((-727.5563483680716), (-3650.3607966822), (-203.95121365749));
    double double0 = carteira0.saldoTotal();
    assertEquals((-4581.868358707762), double0, 0.01);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 1555.1866392665322, 417.7768413161);
    double double0 = carteira0.getSaldo();
    assertEquals(1972.9634805826322, carteira0.saldoTotal(), 0.01);
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    assertEquals(2324.018253662, carteira0.getSaldo(), 0.01);
    
    carteira0.adicionaSaldo((-2215.0));
    double double0 = carteira0.getSaldo();
    assertEquals((-2215.0), double0, 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.combinaSaldo();
    double double0 = carteira0.getLimiteDebito();
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Carteira carteira0 = new Carteira(648.0, 648.0, (-838.3974));
    double double0 = carteira0.getLimiteDebito();
    assertEquals((-838.3974), double0, 0.01);
    assertEquals(457.60260000000005, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 0.0, 0.0);
    double double0 = carteira0.getLimiteCredito();
    assertEquals(0.0, carteira0.getSaldo(), 0.01);
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Carteira carteira0 = new Carteira(6149.5508, 6149.5508, (-2952.19846496588));
    double double0 = carteira0.getLimiteCredito();
    assertEquals(6149.5508, double0, 0.01);
    assertEquals(9346.903135034121, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.setLimiteDebito((-1.0));
    assertEquals((-1.0), carteira0.getLimiteDebito(), 0.01);
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraNoDebito(0.0);
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.compraNoCredito((-2215.0));
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraNoCredito((-1.0));
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.compraSaldo((-922.6779147158));
    assertEquals(1401.3403389462, carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraSaldo(1.0);
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.setLimiteCredito((-736.0631747));
    carteira0.compraNoCredito((-2215.0));
    assertEquals((-2215.0), carteira0.getLimiteCredito(), 0.01);
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getLimiteDebito();
    assertEquals(2324.018253662, double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.combinaSaldo();
    carteira0.compraNoDebito(0.0);
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
}

@Test(timeout = 4000)
public void test19()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.setSaldo((-736.0631747));
    assertEquals((-736.0631747), carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test20()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getSaldo();
    assertEquals(2324.018253662, double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test21()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.saldoTotal();
    assertEquals(2433.036507324, double0, 0.01);
}

@Test(timeout = 4000)
public void test22()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getLimiteCredito();
    assertEquals((-2215.0), double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Cliente cliente0 = new Cliente("0GhM*h<_L", (-158), "0GhM*h<_L", "V");
      cliente0.fone = "WEd";
      cliente0.fone = null;
      String string0 = cliente0.getFone();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Cliente cliente0 = new Cliente("", 0, "", "");
      String string0 = cliente0.getFone();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Cliente cliente0 = new Cliente("Cw$sYN93Xw\"Y'Z", (-1233), "", "d(43f!u\"iA>gw|dWeD");
      String string0 = cliente0.getEmail();
      assertEquals("", string0);
      assertEquals("d(43f!u\"iA>gw|dWeD", cliente0.getFone());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Cliente cliente0 = new Cliente("", 0, "", "");
      Carteira carteira0 = cliente0.getCarteira();
      assertNull(carteira0);
  }

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Cliente cliente0 = new Cliente("example.app.models.Cliente", 2578, "n", "example.app.models.Cliente");
    Carteira carteira0 = new Carteira(0.0, (-1.0), 2578);
    cliente0.carteira = carteira0;
    Carteira carteira1 = new Carteira(2578, 2578, 2578);
    cliente0.carteira = carteira1;
    cliente0.getCarteira();
    assertEquals("n", cliente0.getEmail());
    assertEquals("example.app.models.Cliente", cliente0.getFone());
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Carteira carteira0 = new Carteira((-1), (-1), (-2515.202332146312));
    Cliente cliente0 = new Cliente("X`pJIm%lP4 7c<I", (-1), "X`pJIm%lP4 7c<I", "example.app.models.Cliente", carteira0);
    Carteira carteira1 = cliente0.getCarteira();
    assertEquals("example.app.models.Cliente", cliente0.getFone());
    assertNotNull(carteira1);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    cliente0.setCarteira(carteira0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
    assertEquals("Saldo insuficiente", cliente0.getEmail());
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
    
    cliente0.setFone("sgH,,");
    assertEquals("sgH,,", cliente0.getFone());
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    Carteira carteira1 = cliente0.getCarteira();
    assertNotNull(carteira1);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Cliente cliente0 = new Cliente((String) null, (-1), "", "");
    Carteira carteira0 = new Carteira(0.0, (-1), 191.0);
    cliente0.setCarteira(carteira0);
    assertEquals((-1), cliente0.getIdade());
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    String string0 = cliente0.getEmail();
    assertEquals("Saldo insuficiente", string0);
    assertNotNull(string0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    String string0 = cliente0.getFone();
    assertNotNull(string0);
    assertEquals("c9FBDOj26e9", string0);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
    
    cliente0.setEmail("sgH,,");
    cliente0.getEmail();
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test00()  throws Throwable  {
    Integer integer0 = new Integer(0);
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(1.0);
    Destino destino0 = new Destino("v?AN2Q/CTBc5qq", integer0, climas0, double0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    destino0.setAtracoes(arrayList0);
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    Double double1 = new Double(1);
    destino0.setPreco(double1);
    assertEquals((double)double1, (double)double0, 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    Integer integer0 = new Integer(898);
    Climas climas0 = Climas.AGRADAVEL;
    Double double0 = new Double(241.13417);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("5(`M2SL4][&MS", integer0, climas0, double0, arrayList0);
    destino0.adicionaAtracao("5(`M2SL4][&MS");
    destino0.removeAtracao((-1));
    assertEquals(241.13417, destino0.getPreco(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.VENTANIA;
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("+X<t_<&]", integer0, climas0, (Double) null, arrayList0);
    Double double0 = destino0.getPreco();
    assertNull(double0);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Integer integer0 = new Integer((-488));
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double((-488));
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("example.app.models.Destino", integer0, climas0, double0, arrayList0);
    Double double1 = destino0.getPreco();
    assertEquals((-488.0), (double)double1, 0.01);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Double double0 = new Double(0.0);
    Climas climas0 = Climas.CHUVOSO;
    Destino destino0 = new Destino("wx DbX(+a&Ud7[1Q", (Integer) null, climas0, (Double) null, arrayList0);
    destino0.preco = double0;
    Double double1 = destino0.getPreco();
    assertEquals(0.0, (double)double1, 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Integer integer0 = new Integer((-2376));
    Climas climas0 = Climas.VENTANIA;
    Double double0 = new Double(187.6725);
    Destino destino0 = new Destino((String) null, integer0, climas0, double0);
    Double double1 = destino0.getPreco();
    assertNotNull(double1);
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(0.0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("", (Integer) null, climas0, double0, arrayList0);
    Boolean boolean0 = destino0.getCidadeTuristica();
    assertNull(boolean0);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Integer integer0 = new Integer(662);
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double(0.0);
    Destino destino0 = new Destino((String) null, integer0, climas0, double0);
    assertFalse(destino0.getCidadeTuristica());
    
    Boolean boolean0 = Boolean.valueOf(true);
    destino0.setCidadeTuristica(boolean0);
    destino0.getCidadeTuristica();
    assertTrue(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(2084);
    Destino destino0 = new Destino("/|", (Integer) null, climas0, double0);
    destino0.getAtracoes();
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    destino0.adicionaAtracao((String) null);
    ArrayList<String> arrayList1 = destino0.getAtracoes();
    assertFalse(arrayList1.contains("CHUVOSO"));
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Integer integer0 = new Integer((-1106));
    Climas climas0 = Climas.AGRADAVEL;
    Double double0 = new Double((-982.9847914361264));
    Destino destino0 = new Destino("example.app.models.Cidade", integer0, climas0, double0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao((-635));
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(0.0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("", (Integer) null, climas0, double0, arrayList0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao((-1327));
    fail("Expecting exception: ArrayIndexOutOfBoundsException");
    
    } catch(ArrayIndexOutOfBoundsException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    Integer integer0 = new Integer(5317);
    Climas climas0 = Climas.VENTANIA;
    Double double0 = new Double(5317);
    Destino destino0 = null;
    try {
    destino0 = new Destino("", integer0, climas0, double0, (ArrayList<String>) null);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    ArrayList<String> arrayList0 = new ArrayList<String>();
    arrayList0.add("");
    arrayList0.add((String) null);
    arrayList0.add("");
    arrayList0.add("");
    arrayList0.add("~~LOk|W6");
    arrayList0.add("wx DbX(+a&Ud7[1Q");
    Climas climas0 = Climas.CHUVOSO;
    Destino destino0 = new Destino("wx DbX(+a&Ud7[1Q", (Integer) null, climas0, (Double) null, arrayList0);
    assertTrue(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao(0);
    fail("Expecting exception: IndexOutOfBoundsException");
    
    } catch(IndexOutOfBoundsException e) {
        //
        // Index: 1, Size: 0
        //
        verifyException("java.util.ArrayList", e);
    }
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    ArrayList<String> arrayList1 = destino0.getAtracoes();
    assertSame(arrayList0, arrayList1);
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    Integer integer0 = new Integer((-1592));
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double(0.0);
    Destino destino0 = new Destino("Cd1-v '", integer0, climas0, double0);
    // Undeclared exception!
    try { 
    destino0.adicionaAtracao("");
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(2084);
    Destino destino0 = new Destino("/|", (Integer) null, climas0, double0);
    Boolean boolean0 = destino0.getCidadeTuristica();
    assertFalse(boolean0);
}

@Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
      Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
      Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
      empresa0.adicionaCliente(cliente0);
      ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
      assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
      assertFalse(arrayList0.contains(cliente0));
  }

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("n[>;n,\"oV(UzKEMC.Z", 1285.07203100387, hashMap0);
    Carteira carteira0 = new Carteira(1285.07203100387, 1285.07203100387, 1285.07203100387);
    Cliente cliente0 = new Cliente("n[>;n,\"oV(UzKEMC.Z", 21, "n[>;n,\"oV(UzKEMC.Z", "n[>;n,\"oV(UzKEMC.Z", carteira0);
    Boolean boolean0 = Boolean.valueOf("n[>;n,\"oV(UzKEMC.Z");
    hashMap0.put(cliente0, boolean0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertFalse(arrayList0.contains(cliente0));
    assertEquals(1285.07203100387, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", hashMap0);
    HashMap<Cliente, Boolean> hashMap1 = new HashMap<Cliente, Boolean>(226, 226);
    empresa0.setClientes(hashMap1);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 0.0, hashMap0);
    empresa0.getNome();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", (-1900.3841), hashMap0);
    String string0 = empresa0.getNome();
    assertEquals((-1900.3841), empresa0.getCaixa(), 0.01);
    assertNotNull(string0);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Empresa empresa0 = new Empresa("", (Map<Cliente, Boolean>) null);
    empresa0.getClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    empresa0.adicionaCliente(cliente0);
    empresa0.getClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Empresa empresa0 = new Empresa("uULRcy-", (Map<Cliente, Boolean>) null);
    double double0 = empresa0.getCaixa();
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("P,#G", (-1.0), hashMap0);
    double double0 = empresa0.getCaixa();
    assertEquals((-1.0), double0, 0.01);
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    empresa0.buscaCliente(cliente0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Empresa empresa0 = new Empresa("S", 957.482814242, (Map<Cliente, Boolean>) null);
    Carteira carteira0 = new Carteira(0, 0, 0.0);
    Cliente cliente0 = new Cliente("}YR=,ddq.lk:(HQsj", 0, "3'1)DWuF!7xWhxZn>", "}YR=,ddq.lk:(HQsj", carteira0);
    // Undeclared exception!
    try { 
    empresa0.removeCliente(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", 0.0, hashMap0);
    Boolean boolean0 = new Boolean("example.app.models.Cliente");
    hashMap0.put((Cliente) null, boolean0);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientesAtivos();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Empresa empresa0 = new Empresa("]1)ZWIN|@j=", (-1249.0873), (Map<Cliente, Boolean>) null);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientes();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("`wAnG<PdzOk", hashMap0);
    Carteira carteira0 = new Carteira(0, 4618.8836, 4618.8836);
    Cliente cliente0 = new Cliente("^", 0, "^", "?K", carteira0);
    // Undeclared exception!
    try { 
    empresa0.buscaClienteAtivo(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    Empresa empresa0 = new Empresa("uULRcy-", (Map<Cliente, Boolean>) null);
    Carteira carteira0 = new Carteira(1274.862, 1.0, (-2609.2058285026246));
    Cliente cliente0 = new Cliente("uULRcy-", (-1), "uULRcy-", "uULRcy-", carteira0);
    // Undeclared exception!
    try { 
    empresa0.buscaCliente(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 0.0, hashMap0);
    // Undeclared exception!
    try { 
    empresa0.adicionaCliente((Cliente) null);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 20, "TB[E?\"W_wvfU", "");
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
    assertTrue(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
    assertFalse(arrayList0.contains(cliente0));
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 1.5874623117978444, hashMap0);
    Cliente cliente0 = new Cliente((String) null, (-6), (String) null, (String) null);
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertEquals(1.5874623117978444, empresa0.getCaixa(), 0.01);
    assertFalse(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test19()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("n:^1s:EBM'RLm7", hashMap0);
    Cliente cliente0 = new Cliente("n:^1s:EBM'RLm7", 20, "n:^1s:EBM'RLm7", "n:^1s:EBM'RLm7");
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    empresa0.listaTodosClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test20()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    empresa0.listaTodosClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test21()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    Boolean boolean1 = empresa0.buscaClienteAtivo(cliente0);
    assertTrue(boolean1);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test22()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, (-3457.176), hashMap0);
    Cliente cliente0 = new Cliente((String) null, (-177), (String) null, (String) null);
    Boolean boolean0 = empresa0.buscaCliente(cliente0);
    assertNotNull(boolean0);
    
    hashMap0.put(cliente0, boolean0);
    Boolean boolean1 = empresa0.buscaClienteAtivo(cliente0);
    assertFalse(boolean1);
    assertEquals((-3457.176), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test23()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("<q+ t*9k6", hashMap0);
    Boolean boolean0 = empresa0.buscaCliente((Cliente) null);
    hashMap0.put((Cliente) null, boolean0);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientesInativos();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test24()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
    assertTrue(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test25()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
    empresa0.removeCliente(cliente0);
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test26()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    String string0 = empresa0.getNome();
    assertNotNull(string0);
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test27()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    empresa0.setNome("TB[E?\"W_wvfU");
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test28()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
    
    empresa0.setCaixa(1.0);
    assertEquals(1.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test29()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 1.5874623117978444, hashMap0);
    double double0 = empresa0.getCaixa();
    assertEquals(1.5874623117978444, double0, 0.01);
}

@Test(timeout = 4000)
public void test30()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Map<Cliente, Boolean> map0 = empresa0.getClientes();
    assertNotNull(map0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}
@Test(timeout = 4000)
public void test00()  throws Throwable  {
    Carteira carteira0 = new Carteira((-650.538551823452), (-650.538551823452), 0.0);
    carteira0.compraNoDebito((-650.538551823452));
    assertEquals((-650.538551823452), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    Carteira carteira0 = new Carteira((-2355.999273853816), 1.0, (-2355.999273853816));
    carteira0.compraSaldo((-2355.999273853816));
    assertEquals((-4711.998547707632), carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 0.0, 0.0);
    double double0 = carteira0.saldoTotal();
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
    assertEquals(0.0, carteira0.getSaldo(), 0.01);
    assertEquals(0.0, double0, 0.01);
    assertEquals(0.0, carteira0.getLimiteCredito(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    Carteira carteira0 = new Carteira((-727.5563483680716), (-3650.3607966822), (-203.95121365749));
    double double0 = carteira0.saldoTotal();
    assertEquals((-4581.868358707762), double0, 0.01);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 1555.1866392665322, 417.7768413161);
    double double0 = carteira0.getSaldo();
    assertEquals(1972.9634805826322, carteira0.saldoTotal(), 0.01);
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    assertEquals(2324.018253662, carteira0.getSaldo(), 0.01);
    
    carteira0.adicionaSaldo((-2215.0));
    double double0 = carteira0.getSaldo();
    assertEquals((-2215.0), double0, 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.combinaSaldo();
    double double0 = carteira0.getLimiteDebito();
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Carteira carteira0 = new Carteira(648.0, 648.0, (-838.3974));
    double double0 = carteira0.getLimiteDebito();
    assertEquals((-838.3974), double0, 0.01);
    assertEquals(457.60260000000005, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Carteira carteira0 = new Carteira(0.0, 0.0, 0.0);
    double double0 = carteira0.getLimiteCredito();
    assertEquals(0.0, carteira0.getSaldo(), 0.01);
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Carteira carteira0 = new Carteira(6149.5508, 6149.5508, (-2952.19846496588));
    double double0 = carteira0.getLimiteCredito();
    assertEquals(6149.5508, double0, 0.01);
    assertEquals(9346.903135034121, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.setLimiteDebito((-1.0));
    assertEquals((-1.0), carteira0.getLimiteDebito(), 0.01);
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraNoDebito(0.0);
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.compraNoCredito((-2215.0));
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraNoCredito((-1.0));
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.compraSaldo((-922.6779147158));
    assertEquals(1401.3403389462, carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    Carteira carteira0 = new Carteira((-592.54), (-592.54), (-592.54));
    carteira0.compraSaldo(1.0);
    assertEquals((-1777.62), carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.setLimiteCredito((-736.0631747));
    carteira0.compraNoCredito((-2215.0));
    assertEquals((-2215.0), carteira0.getLimiteCredito(), 0.01);
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getLimiteDebito();
    assertEquals(2324.018253662, double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.combinaSaldo();
    carteira0.compraNoDebito(0.0);
    assertEquals(0.0, carteira0.getLimiteDebito(), 0.01);
}

@Test(timeout = 4000)
public void test19()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    carteira0.setSaldo((-736.0631747));
    assertEquals((-736.0631747), carteira0.getSaldo(), 0.01);
}

@Test(timeout = 4000)
public void test20()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getSaldo();
    assertEquals(2324.018253662, double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
public void test21()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.saldoTotal();
    assertEquals(2433.036507324, double0, 0.01);
}

@Test(timeout = 4000)
public void test22()  throws Throwable  {
    Carteira carteira0 = new Carteira(2324.018253662, (-2215.0), 2324.018253662);
    double double0 = carteira0.getLimiteCredito();
    assertEquals((-2215.0), double0, 0.01);
    assertEquals(2433.036507324, carteira0.saldoTotal(), 0.01);
}

@Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Cliente cliente0 = new Cliente("0GhM*h<_L", (-158), "0GhM*h<_L", "V");
      cliente0.fone = "WEd";
      cliente0.fone = null;
      String string0 = cliente0.getFone();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Cliente cliente0 = new Cliente("", 0, "", "");
      String string0 = cliente0.getFone();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Cliente cliente0 = new Cliente("Cw$sYN93Xw\"Y'Z", (-1233), "", "d(43f!u\"iA>gw|dWeD");
      String string0 = cliente0.getEmail();
      assertEquals("", string0);
      assertEquals("d(43f!u\"iA>gw|dWeD", cliente0.getFone());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Cliente cliente0 = new Cliente("", 0, "", "");
      Carteira carteira0 = cliente0.getCarteira();
      assertNull(carteira0);
  }

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Cliente cliente0 = new Cliente("example.app.models.Cliente", 2578, "n", "example.app.models.Cliente");
    Carteira carteira0 = new Carteira(0.0, (-1.0), 2578);
    cliente0.carteira = carteira0;
    Carteira carteira1 = new Carteira(2578, 2578, 2578);
    cliente0.carteira = carteira1;
    cliente0.getCarteira();
    assertEquals("n", cliente0.getEmail());
    assertEquals("example.app.models.Cliente", cliente0.getFone());
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Carteira carteira0 = new Carteira((-1), (-1), (-2515.202332146312));
    Cliente cliente0 = new Cliente("X`pJIm%lP4 7c<I", (-1), "X`pJIm%lP4 7c<I", "example.app.models.Cliente", carteira0);
    Carteira carteira1 = cliente0.getCarteira();
    assertEquals("example.app.models.Cliente", cliente0.getFone());
    assertNotNull(carteira1);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    cliente0.setCarteira(carteira0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
    assertEquals("Saldo insuficiente", cliente0.getEmail());
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
    
    cliente0.setFone("sgH,,");
    assertEquals("sgH,,", cliente0.getFone());
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    Carteira carteira1 = cliente0.getCarteira();
    assertNotNull(carteira1);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Cliente cliente0 = new Cliente((String) null, (-1), "", "");
    Carteira carteira0 = new Carteira(0.0, (-1), 191.0);
    cliente0.setCarteira(carteira0);
    assertEquals((-1), cliente0.getIdade());
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    String string0 = cliente0.getEmail();
    assertEquals("Saldo insuficiente", string0);
    assertNotNull(string0);
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    String string0 = cliente0.getFone();
    assertNotNull(string0);
    assertEquals("c9FBDOj26e9", string0);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Carteira carteira0 = new Carteira(0, 0, 0);
    Cliente cliente0 = new Cliente("oYj*=lxw<*", 0, "Saldo insuficiente", "c9FBDOj26e9", carteira0);
    assertEquals("Saldo insuficiente", cliente0.getEmail());
    
    cliente0.setEmail("sgH,,");
    cliente0.getEmail();
    assertEquals("c9FBDOj26e9", cliente0.getFone());
}

@Test(timeout = 4000)
public void test00()  throws Throwable  {
    Integer integer0 = new Integer(0);
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(1.0);
    Destino destino0 = new Destino("v?AN2Q/CTBc5qq", integer0, climas0, double0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    destino0.setAtracoes(arrayList0);
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    Double double1 = new Double(1);
    destino0.setPreco(double1);
    assertEquals((double)double1, (double)double0, 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    Integer integer0 = new Integer(898);
    Climas climas0 = Climas.AGRADAVEL;
    Double double0 = new Double(241.13417);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("5(`M2SL4][&MS", integer0, climas0, double0, arrayList0);
    destino0.adicionaAtracao("5(`M2SL4][&MS");
    destino0.removeAtracao((-1));
    assertEquals(241.13417, destino0.getPreco(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.VENTANIA;
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("+X<t_<&]", integer0, climas0, (Double) null, arrayList0);
    Double double0 = destino0.getPreco();
    assertNull(double0);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    Integer integer0 = new Integer((-488));
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double((-488));
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("example.app.models.Destino", integer0, climas0, double0, arrayList0);
    Double double1 = destino0.getPreco();
    assertEquals((-488.0), (double)double1, 0.01);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Double double0 = new Double(0.0);
    Climas climas0 = Climas.CHUVOSO;
    Destino destino0 = new Destino("wx DbX(+a&Ud7[1Q", (Integer) null, climas0, (Double) null, arrayList0);
    destino0.preco = double0;
    Double double1 = destino0.getPreco();
    assertEquals(0.0, (double)double1, 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    Integer integer0 = new Integer((-2376));
    Climas climas0 = Climas.VENTANIA;
    Double double0 = new Double(187.6725);
    Destino destino0 = new Destino((String) null, integer0, climas0, double0);
    Double double1 = destino0.getPreco();
    assertNotNull(double1);
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(0.0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("", (Integer) null, climas0, double0, arrayList0);
    Boolean boolean0 = destino0.getCidadeTuristica();
    assertNull(boolean0);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    Integer integer0 = new Integer(662);
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double(0.0);
    Destino destino0 = new Destino((String) null, integer0, climas0, double0);
    assertFalse(destino0.getCidadeTuristica());
    
    Boolean boolean0 = Boolean.valueOf(true);
    destino0.setCidadeTuristica(boolean0);
    destino0.getCidadeTuristica();
    assertTrue(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(2084);
    Destino destino0 = new Destino("/|", (Integer) null, climas0, double0);
    destino0.getAtracoes();
    assertFalse(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    destino0.adicionaAtracao((String) null);
    ArrayList<String> arrayList1 = destino0.getAtracoes();
    assertFalse(arrayList1.contains("CHUVOSO"));
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    Integer integer0 = new Integer((-1106));
    Climas climas0 = Climas.AGRADAVEL;
    Double double0 = new Double((-982.9847914361264));
    Destino destino0 = new Destino("example.app.models.Cidade", integer0, climas0, double0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao((-635));
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(0.0);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("", (Integer) null, climas0, double0, arrayList0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao((-1327));
    fail("Expecting exception: ArrayIndexOutOfBoundsException");
    
    } catch(ArrayIndexOutOfBoundsException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    Integer integer0 = new Integer(5317);
    Climas climas0 = Climas.VENTANIA;
    Double double0 = new Double(5317);
    Destino destino0 = null;
    try {
    destino0 = new Destino("", integer0, climas0, double0, (ArrayList<String>) null);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    ArrayList<String> arrayList0 = new ArrayList<String>();
    arrayList0.add("");
    arrayList0.add((String) null);
    arrayList0.add("");
    arrayList0.add("");
    arrayList0.add("~~LOk|W6");
    arrayList0.add("wx DbX(+a&Ud7[1Q");
    Climas climas0 = Climas.CHUVOSO;
    Destino destino0 = new Destino("wx DbX(+a&Ud7[1Q", (Integer) null, climas0, (Double) null, arrayList0);
    assertTrue(destino0.getCidadeTuristica());
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    // Undeclared exception!
    try { 
    destino0.removeAtracao(0);
    fail("Expecting exception: IndexOutOfBoundsException");
    
    } catch(IndexOutOfBoundsException e) {
        //
        // Index: 1, Size: 0
        //
        verifyException("java.util.ArrayList", e);
    }
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    Integer integer0 = new Integer(1);
    Climas climas0 = Climas.TEMPESTUOSO;
    Double double0 = new Double(1);
    ArrayList<String> arrayList0 = new ArrayList<String>();
    Destino destino0 = new Destino("CHUVOSO", integer0, climas0, double0, arrayList0);
    ArrayList<String> arrayList1 = destino0.getAtracoes();
    assertSame(arrayList0, arrayList1);
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    Integer integer0 = new Integer((-1592));
    Climas climas0 = Climas.ENSOLARADO;
    Double double0 = new Double(0.0);
    Destino destino0 = new Destino("Cd1-v '", integer0, climas0, double0);
    // Undeclared exception!
    try { 
    destino0.adicionaAtracao("");
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Destino", e);
    }
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    Climas climas0 = Climas.CHUVOSO;
    Double double0 = new Double(2084);
    Destino destino0 = new Destino("/|", (Integer) null, climas0, double0);
    Boolean boolean0 = destino0.getCidadeTuristica();
    assertFalse(boolean0);
}

@Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
      Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
      Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
      empresa0.adicionaCliente(cliente0);
      ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
      assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
      assertFalse(arrayList0.contains(cliente0));
  }

@Test(timeout = 4000)
public void test01()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("n[>;n,\"oV(UzKEMC.Z", 1285.07203100387, hashMap0);
    Carteira carteira0 = new Carteira(1285.07203100387, 1285.07203100387, 1285.07203100387);
    Cliente cliente0 = new Cliente("n[>;n,\"oV(UzKEMC.Z", 21, "n[>;n,\"oV(UzKEMC.Z", "n[>;n,\"oV(UzKEMC.Z", carteira0);
    Boolean boolean0 = Boolean.valueOf("n[>;n,\"oV(UzKEMC.Z");
    hashMap0.put(cliente0, boolean0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertFalse(arrayList0.contains(cliente0));
    assertEquals(1285.07203100387, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test02()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", hashMap0);
    HashMap<Cliente, Boolean> hashMap1 = new HashMap<Cliente, Boolean>(226, 226);
    empresa0.setClientes(hashMap1);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test03()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 0.0, hashMap0);
    empresa0.getNome();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test04()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", (-1900.3841), hashMap0);
    String string0 = empresa0.getNome();
    assertEquals((-1900.3841), empresa0.getCaixa(), 0.01);
    assertNotNull(string0);
}

@Test(timeout = 4000)
public void test05()  throws Throwable  {
    Empresa empresa0 = new Empresa("", (Map<Cliente, Boolean>) null);
    empresa0.getClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test06()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    empresa0.adicionaCliente(cliente0);
    empresa0.getClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test07()  throws Throwable  {
    Empresa empresa0 = new Empresa("uULRcy-", (Map<Cliente, Boolean>) null);
    double double0 = empresa0.getCaixa();
    assertEquals(0.0, double0, 0.01);
}

@Test(timeout = 4000)
public void test08()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("P,#G", (-1.0), hashMap0);
    double double0 = empresa0.getCaixa();
    assertEquals((-1.0), double0, 0.01);
}

@Test(timeout = 4000)
public void test09()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    empresa0.buscaCliente(cliente0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test10()  throws Throwable  {
    Empresa empresa0 = new Empresa("S", 957.482814242, (Map<Cliente, Boolean>) null);
    Carteira carteira0 = new Carteira(0, 0, 0.0);
    Cliente cliente0 = new Cliente("}YR=,ddq.lk:(HQsj", 0, "3'1)DWuF!7xWhxZn>", "}YR=,ddq.lk:(HQsj", carteira0);
    // Undeclared exception!
    try { 
    empresa0.removeCliente(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test11()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("", 0.0, hashMap0);
    Boolean boolean0 = new Boolean("example.app.models.Cliente");
    hashMap0.put((Cliente) null, boolean0);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientesAtivos();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test12()  throws Throwable  {
    Empresa empresa0 = new Empresa("]1)ZWIN|@j=", (-1249.0873), (Map<Cliente, Boolean>) null);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientes();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test13()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("`wAnG<PdzOk", hashMap0);
    Carteira carteira0 = new Carteira(0, 4618.8836, 4618.8836);
    Cliente cliente0 = new Cliente("^", 0, "^", "?K", carteira0);
    // Undeclared exception!
    try { 
    empresa0.buscaClienteAtivo(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test14()  throws Throwable  {
    Empresa empresa0 = new Empresa("uULRcy-", (Map<Cliente, Boolean>) null);
    Carteira carteira0 = new Carteira(1274.862, 1.0, (-2609.2058285026246));
    Cliente cliente0 = new Cliente("uULRcy-", (-1), "uULRcy-", "uULRcy-", carteira0);
    // Undeclared exception!
    try { 
    empresa0.buscaCliente(cliente0);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test15()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 0.0, hashMap0);
    // Undeclared exception!
    try { 
    empresa0.adicionaCliente((Cliente) null);
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test16()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 20, "TB[E?\"W_wvfU", "");
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
    assertTrue(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test17()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesInativos();
    assertFalse(arrayList0.contains(cliente0));
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test18()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 1.5874623117978444, hashMap0);
    Cliente cliente0 = new Cliente((String) null, (-6), (String) null, (String) null);
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertEquals(1.5874623117978444, empresa0.getCaixa(), 0.01);
    assertFalse(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test19()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("n:^1s:EBM'RLm7", hashMap0);
    Cliente cliente0 = new Cliente("n:^1s:EBM'RLm7", 20, "n:^1s:EBM'RLm7", "n:^1s:EBM'RLm7");
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    empresa0.listaTodosClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test20()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    empresa0.listaTodosClientes();
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test21()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Cliente cliente0 = new Cliente("", 21, "example.app.models.Empresa", "", (Carteira) null);
    Boolean boolean0 = new Boolean(true);
    hashMap0.put(cliente0, boolean0);
    Boolean boolean1 = empresa0.buscaClienteAtivo(cliente0);
    assertTrue(boolean1);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test22()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, (-3457.176), hashMap0);
    Cliente cliente0 = new Cliente((String) null, (-177), (String) null, (String) null);
    Boolean boolean0 = empresa0.buscaCliente(cliente0);
    assertNotNull(boolean0);
    
    hashMap0.put(cliente0, boolean0);
    Boolean boolean1 = empresa0.buscaClienteAtivo(cliente0);
    assertFalse(boolean1);
    assertEquals((-3457.176), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test23()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("<q+ t*9k6", hashMap0);
    Boolean boolean0 = empresa0.buscaCliente((Cliente) null);
    hashMap0.put((Cliente) null, boolean0);
    // Undeclared exception!
    try { 
    empresa0.listaTodosClientesInativos();
    fail("Expecting exception: NullPointerException");
    
    } catch(NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException("example.app.models.Empresa", e);
    }
}

@Test(timeout = 4000)
public void test24()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
    empresa0.adicionaCliente(cliente0);
    ArrayList<Cliente> arrayList0 = empresa0.listaTodosClientesAtivos();
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
    assertTrue(arrayList0.contains(cliente0));
}

@Test(timeout = 4000)
public void test25()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    Cliente cliente0 = new Cliente("9qa^i^a/4;SGy", 3749, "9qa^i^a/4;SGy", "9qa^i^a/4;SGy");
    empresa0.removeCliente(cliente0);
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test26()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("9qa^i^a/4;SGy", (-2.2608748977453477), hashMap0);
    String string0 = empresa0.getNome();
    assertNotNull(string0);
    assertEquals((-2.2608748977453477), empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test27()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    empresa0.setNome("TB[E?\"W_wvfU");
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test28()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
    
    empresa0.setCaixa(1.0);
    assertEquals(1.0, empresa0.getCaixa(), 0.01);
}

@Test(timeout = 4000)
public void test29()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa((String) null, 1.5874623117978444, hashMap0);
    double double0 = empresa0.getCaixa();
    assertEquals(1.5874623117978444, double0, 0.01);
}

@Test(timeout = 4000)
public void test30()  throws Throwable  {
    HashMap<Cliente, Boolean> hashMap0 = new HashMap<Cliente, Boolean>();
    Empresa empresa0 = new Empresa("TB[E?\"W_wvfU", hashMap0);
    Map<Cliente, Boolean> map0 = empresa0.getClientes();
    assertNotNull(map0);
    assertEquals(0.0, empresa0.getCaixa(), 0.01);
}
